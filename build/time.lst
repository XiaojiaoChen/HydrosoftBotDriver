ARM GAS  /tmp/ccOVwrVl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"time.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN3ros16normalizeSecNSecERmS0_,"ax",%progbits
  16              		.align	1
  17              		.global	_ZN3ros16normalizeSecNSecERmS0_
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_ZN3ros16normalizeSecNSecERmS0_:
  25              		.fnstart
  26              	.LVL0:
  27              	.LFB241:
  28              		.file 1 "User/Inc/rosserialInc/time.cpp"
   1:User/Inc/rosserialInc/time.cpp **** /*
   2:User/Inc/rosserialInc/time.cpp ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/time.cpp ****  *
   4:User/Inc/rosserialInc/time.cpp ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/time.cpp ****  * All rights reserved.
   6:User/Inc/rosserialInc/time.cpp ****  *
   7:User/Inc/rosserialInc/time.cpp ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/time.cpp ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/time.cpp ****  * are met:
  10:User/Inc/rosserialInc/time.cpp ****  *
  11:User/Inc/rosserialInc/time.cpp ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/time.cpp ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/time.cpp ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/time.cpp ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/time.cpp ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/time.cpp ****  *    with the distribution.
  17:User/Inc/rosserialInc/time.cpp ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/time.cpp ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/time.cpp ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/time.cpp ****  *
  21:User/Inc/rosserialInc/time.cpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/time.cpp ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/time.cpp ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/time.cpp ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/time.cpp ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/time.cpp ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/time.cpp ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/time.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/time.cpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/time.cpp ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ARM GAS  /tmp/ccOVwrVl.s 			page 2


  31:User/Inc/rosserialInc/time.cpp ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/time.cpp ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/time.cpp ****  */
  34:User/Inc/rosserialInc/time.cpp **** 
  35:User/Inc/rosserialInc/time.cpp **** #include "ros/time.h"
  36:User/Inc/rosserialInc/time.cpp **** 
  37:User/Inc/rosserialInc/time.cpp **** namespace ros
  38:User/Inc/rosserialInc/time.cpp **** {
  39:User/Inc/rosserialInc/time.cpp **** void normalizeSecNSec(uint32_t& sec, uint32_t& nsec)
  40:User/Inc/rosserialInc/time.cpp **** {
  29              		.loc 1 40 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 40 1 is_stmt 0 view .LVU1
  35 0000 30B4     		push	{r4, r5}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
  41:User/Inc/rosserialInc/time.cpp ****   uint32_t nsec_part = nsec % 1000000000UL;
  40              		.loc 1 41 3 is_stmt 1 view .LVU2
  41              		.loc 1 41 24 is_stmt 0 view .LVU3
  42 0002 0C68     		ldr	r4, [r1]
  43              		.loc 1 41 12 view .LVU4
  44 0004 630A     		lsrs	r3, r4, #9
  45 0006 074A     		ldr	r2, .L3
  46 0008 A2FB0323 		umull	r2, r3, r2, r3
  47 000c DA09     		lsrs	r2, r3, #7
  48 000e 064D     		ldr	r5, .L3+4
  49 0010 05FB1242 		mls	r2, r5, r2, r4
  50              	.LVL1:
  42:User/Inc/rosserialInc/time.cpp ****   uint32_t sec_part = nsec / 1000000000UL;
  51              		.loc 1 42 3 is_stmt 1 view .LVU5
  43:User/Inc/rosserialInc/time.cpp ****   sec += sec_part;
  52              		.loc 1 43 3 view .LVU6
  53              		.loc 1 43 7 is_stmt 0 view .LVU7
  54 0014 0468     		ldr	r4, [r0]
  55 0016 04EBD313 		add	r3, r4, r3, lsr #7
  56              	.LVL2:
  57              		.loc 1 43 7 view .LVU8
  58 001a 0360     		str	r3, [r0]
  59              	.LVL3:
  44:User/Inc/rosserialInc/time.cpp ****   nsec = nsec_part;
  60              		.loc 1 44 3 is_stmt 1 view .LVU9
  61              		.loc 1 44 8 is_stmt 0 view .LVU10
  62 001c 0A60     		str	r2, [r1]
  45:User/Inc/rosserialInc/time.cpp **** }
  63              		.loc 1 45 1 view .LVU11
  64 001e 30BC     		pop	{r4, r5}
  65              	.LCFI1:
  66              		.cfi_restore 5
  67              		.cfi_restore 4
  68              		.cfi_def_cfa_offset 0
  69 0020 7047     		bx	lr
  70              	.L4:
ARM GAS  /tmp/ccOVwrVl.s 			page 3


  71 0022 00BF     		.align	2
  72              	.L3:
  73 0024 834B0400 		.word	281475
  74 0028 00CA9A3B 		.word	1000000000
  75              		.cfi_endproc
  76              	.LFE241:
  77              		.cantunwind
  78              		.fnend
  80              		.section	.text._ZN3ros4Time8fromNSecEl,"ax",%progbits
  81              		.align	1
  82              		.global	_ZN3ros4Time8fromNSecEl
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	_ZN3ros4Time8fromNSecEl:
  89              		.fnstart
  90              	.LVL4:
  91              	.LFB242:
  46:User/Inc/rosserialInc/time.cpp **** 
  47:User/Inc/rosserialInc/time.cpp **** Time& Time::fromNSec(int32_t t)
  48:User/Inc/rosserialInc/time.cpp **** {
  92              		.loc 1 48 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		.loc 1 48 1 is_stmt 0 view .LVU13
  97 0000 10B5     		push	{r4, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 102 0002 0446     		mov	r4, r0
  49:User/Inc/rosserialInc/time.cpp ****   sec = t / 1000000000;
 103              		.loc 1 49 3 is_stmt 1 view .LVU14
 104              		.loc 1 49 11 is_stmt 0 view .LVU15
 105 0004 084A     		ldr	r2, .L7
 106 0006 82FB0132 		smull	r3, r2, r2, r1
 107 000a CB17     		asrs	r3, r1, #31
 108 000c C3EB2273 		rsb	r3, r3, r2, asr #28
 109              		.loc 1 49 7 view .LVU16
 110 0010 0360     		str	r3, [r0]
  50:User/Inc/rosserialInc/time.cpp ****   nsec = t % 1000000000;
 111              		.loc 1 50 3 is_stmt 1 view .LVU17
 112              		.loc 1 50 12 is_stmt 0 view .LVU18
 113 0012 064A     		ldr	r2, .L7+4
 114 0014 02FB1313 		mls	r3, r2, r3, r1
 115              		.loc 1 50 8 view .LVU19
 116 0018 0146     		mov	r1, r0
 117              	.LVL5:
 118              		.loc 1 50 8 view .LVU20
 119 001a 41F8043F 		str	r3, [r1, #4]!
  51:User/Inc/rosserialInc/time.cpp ****   normalizeSecNSec(sec, nsec);
 120              		.loc 1 51 3 is_stmt 1 view .LVU21
 121              		.loc 1 51 19 is_stmt 0 view .LVU22
 122 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 123              	.LVL6:
ARM GAS  /tmp/ccOVwrVl.s 			page 4


  52:User/Inc/rosserialInc/time.cpp ****   return *this;
 124              		.loc 1 52 3 is_stmt 1 view .LVU23
  53:User/Inc/rosserialInc/time.cpp **** }
 125              		.loc 1 53 1 is_stmt 0 view .LVU24
 126 0022 2046     		mov	r0, r4
 127 0024 10BD     		pop	{r4, pc}
 128              	.LVL7:
 129              	.L8:
 130              		.loc 1 53 1 view .LVU25
 131 0026 00BF     		.align	2
 132              	.L7:
 133 0028 A12FB844 		.word	1152921505
 134 002c 00CA9A3B 		.word	1000000000
 135              		.cfi_endproc
 136              	.LFE242:
 137              		.cantunwind
 138              		.fnend
 140              		.section	.text._ZN3ros4TimepLERKNS_8DurationE,"ax",%progbits
 141              		.align	1
 142              		.global	_ZN3ros4TimepLERKNS_8DurationE
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	_ZN3ros4TimepLERKNS_8DurationE:
 149              		.fnstart
 150              	.LVL8:
 151              	.LFB243:
  54:User/Inc/rosserialInc/time.cpp **** 
  55:User/Inc/rosserialInc/time.cpp **** Time& Time::operator +=(const Duration &rhs)
  56:User/Inc/rosserialInc/time.cpp **** {
 152              		.loc 1 56 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 56 1 is_stmt 0 view .LVU27
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0002 0446     		mov	r4, r0
  57:User/Inc/rosserialInc/time.cpp ****   sec = sec - 1 + rhs.sec;
 163              		.loc 1 57 3 is_stmt 1 view .LVU28
 164              		.loc 1 57 9 is_stmt 0 view .LVU29
 165 0004 0268     		ldr	r2, [r0]
 166              		.loc 1 57 23 view .LVU30
 167 0006 0B68     		ldr	r3, [r1]
 168              		.loc 1 57 17 view .LVU31
 169 0008 1344     		add	r3, r3, r2
 170 000a 013B     		subs	r3, r3, #1
 171              		.loc 1 57 7 view .LVU32
 172 000c 0360     		str	r3, [r0]
  58:User/Inc/rosserialInc/time.cpp ****   nsec = nsec + 1000000000UL + rhs.nsec;
 173              		.loc 1 58 3 is_stmt 1 view .LVU33
 174              		.loc 1 58 10 is_stmt 0 view .LVU34
 175 000e 4368     		ldr	r3, [r0, #4]
ARM GAS  /tmp/ccOVwrVl.s 			page 5


 176              		.loc 1 58 36 view .LVU35
 177 0010 4A68     		ldr	r2, [r1, #4]
 178              		.loc 1 58 30 view .LVU36
 179 0012 1A44     		add	r2, r2, r3
 180 0014 044B     		ldr	r3, .L11
 181 0016 1344     		add	r3, r3, r2
 182              		.loc 1 58 8 view .LVU37
 183 0018 0146     		mov	r1, r0
 184              	.LVL9:
 185              		.loc 1 58 8 view .LVU38
 186 001a 41F8043F 		str	r3, [r1, #4]!
  59:User/Inc/rosserialInc/time.cpp ****   normalizeSecNSec(sec, nsec);
 187              		.loc 1 59 3 is_stmt 1 view .LVU39
 188              		.loc 1 59 19 is_stmt 0 view .LVU40
 189 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 190              	.LVL10:
  60:User/Inc/rosserialInc/time.cpp ****   return *this;
 191              		.loc 1 60 3 is_stmt 1 view .LVU41
  61:User/Inc/rosserialInc/time.cpp **** }
 192              		.loc 1 61 1 is_stmt 0 view .LVU42
 193 0022 2046     		mov	r0, r4
 194 0024 10BD     		pop	{r4, pc}
 195              	.LVL11:
 196              	.L12:
 197              		.loc 1 61 1 view .LVU43
 198 0026 00BF     		.align	2
 199              	.L11:
 200 0028 00CA9A3B 		.word	1000000000
 201              		.cfi_endproc
 202              	.LFE243:
 203              		.cantunwind
 204              		.fnend
 206              		.section	.text._ZN3ros4TimemIERKNS_8DurationE,"ax",%progbits
 207              		.align	1
 208              		.global	_ZN3ros4TimemIERKNS_8DurationE
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	_ZN3ros4TimemIERKNS_8DurationE:
 215              		.fnstart
 216              	.LVL12:
 217              	.LFB244:
  62:User/Inc/rosserialInc/time.cpp **** 
  63:User/Inc/rosserialInc/time.cpp **** Time& Time::operator -=(const Duration &rhs){
 218              		.loc 1 63 45 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 63 45 is_stmt 0 view .LVU45
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
 228 0002 0446     		mov	r4, r0
  64:User/Inc/rosserialInc/time.cpp ****   sec = sec - 1 - rhs.sec;
ARM GAS  /tmp/ccOVwrVl.s 			page 6


 229              		.loc 1 64 3 is_stmt 1 view .LVU46
 230              		.loc 1 64 9 is_stmt 0 view .LVU47
 231 0004 0368     		ldr	r3, [r0]
 232              		.loc 1 64 23 view .LVU48
 233 0006 0A68     		ldr	r2, [r1]
 234              		.loc 1 64 17 view .LVU49
 235 0008 9B1A     		subs	r3, r3, r2
 236 000a 013B     		subs	r3, r3, #1
 237              		.loc 1 64 7 view .LVU50
 238 000c 0360     		str	r3, [r0]
  65:User/Inc/rosserialInc/time.cpp ****   nsec = nsec + 1000000000UL - rhs.nsec;
 239              		.loc 1 65 3 is_stmt 1 view .LVU51
 240              		.loc 1 65 10 is_stmt 0 view .LVU52
 241 000e 4368     		ldr	r3, [r0, #4]
 242              		.loc 1 65 36 view .LVU53
 243 0010 4A68     		ldr	r2, [r1, #4]
 244              		.loc 1 65 30 view .LVU54
 245 0012 9A1A     		subs	r2, r3, r2
 246 0014 044B     		ldr	r3, .L15
 247 0016 1344     		add	r3, r3, r2
 248              		.loc 1 65 8 view .LVU55
 249 0018 0146     		mov	r1, r0
 250              	.LVL13:
 251              		.loc 1 65 8 view .LVU56
 252 001a 41F8043F 		str	r3, [r1, #4]!
  66:User/Inc/rosserialInc/time.cpp ****   normalizeSecNSec(sec, nsec);
 253              		.loc 1 66 3 is_stmt 1 view .LVU57
 254              		.loc 1 66 19 is_stmt 0 view .LVU58
 255 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 256              	.LVL14:
  67:User/Inc/rosserialInc/time.cpp ****   return *this;
 257              		.loc 1 67 3 is_stmt 1 view .LVU59
  68:User/Inc/rosserialInc/time.cpp **** }
 258              		.loc 1 68 1 is_stmt 0 view .LVU60
 259 0022 2046     		mov	r0, r4
 260 0024 10BD     		pop	{r4, pc}
 261              	.LVL15:
 262              	.L16:
 263              		.loc 1 68 1 view .LVU61
 264 0026 00BF     		.align	2
 265              	.L15:
 266 0028 00CA9A3B 		.word	1000000000
 267              		.cfi_endproc
 268              	.LFE244:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZNK3ros4TimemiERKS0_,"ax",%progbits
 273              		.align	1
 274              		.global	_ZNK3ros4TimemiERKS0_
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	_ZNK3ros4TimemiERKS0_:
 281              		.fnstart
 282              	.LVL16:
 283              	.LFB245:
ARM GAS  /tmp/ccOVwrVl.s 			page 7


  69:User/Inc/rosserialInc/time.cpp **** 
  70:User/Inc/rosserialInc/time.cpp **** Duration Time::operator-(const Time &rhs) const {
 284              		.loc 1 70 49 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 1 70 49 is_stmt 0 view .LVU63
 289 0000 38B5     		push	{r3, r4, r5, lr}
 290              		.save {r3, r4, r5, lr}
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 3, -16
 294              		.cfi_offset 4, -12
 295              		.cfi_offset 5, -8
 296              		.cfi_offset 14, -4
 297 0002 0446     		mov	r4, r0
  71:User/Inc/rosserialInc/time.cpp ****   // Note: Considers wrap around as a continuation of time, e.g.,
  72:User/Inc/rosserialInc/time.cpp ****   // (0,0) - (0xFFFFFFFF, 0) = (1, 0)
  73:User/Inc/rosserialInc/time.cpp ****   Duration d;
 298              		.loc 1 73 3 is_stmt 1 view .LVU64
 299              	.LVL17:
 300              	.LBB5:
 301              	.LBI5:
 302              		.file 2 "User/Inc/rosserialInc/ros/duration.h"
   1:User/Inc/rosserialInc/ros/duration.h **** /*
   2:User/Inc/rosserialInc/ros/duration.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/ros/duration.h ****  *
   4:User/Inc/rosserialInc/ros/duration.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/ros/duration.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/ros/duration.h ****  *
   7:User/Inc/rosserialInc/ros/duration.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/ros/duration.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/ros/duration.h ****  * are met:
  10:User/Inc/rosserialInc/ros/duration.h ****  *
  11:User/Inc/rosserialInc/ros/duration.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/ros/duration.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/ros/duration.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/ros/duration.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/ros/duration.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/ros/duration.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/ros/duration.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/ros/duration.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/ros/duration.h ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/ros/duration.h ****  *
  21:User/Inc/rosserialInc/ros/duration.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/ros/duration.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/ros/duration.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/ros/duration.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/ros/duration.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/ros/duration.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/ros/duration.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/ros/duration.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/ros/duration.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/ros/duration.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/ros/duration.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/ros/duration.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/ros/duration.h ****  */
ARM GAS  /tmp/ccOVwrVl.s 			page 8


  34:User/Inc/rosserialInc/ros/duration.h **** 
  35:User/Inc/rosserialInc/ros/duration.h **** #ifndef _ROS_DURATION_H_
  36:User/Inc/rosserialInc/ros/duration.h **** #define _ROS_DURATION_H_
  37:User/Inc/rosserialInc/ros/duration.h **** 
  38:User/Inc/rosserialInc/ros/duration.h **** #include <math.h>
  39:User/Inc/rosserialInc/ros/duration.h **** #include <stdint.h>
  40:User/Inc/rosserialInc/ros/duration.h **** 
  41:User/Inc/rosserialInc/ros/duration.h **** namespace ros
  42:User/Inc/rosserialInc/ros/duration.h **** {
  43:User/Inc/rosserialInc/ros/duration.h **** 
  44:User/Inc/rosserialInc/ros/duration.h **** void normalizeSecNSecSigned(int32_t& sec, int32_t& nsec);
  45:User/Inc/rosserialInc/ros/duration.h **** 
  46:User/Inc/rosserialInc/ros/duration.h **** class Duration
  47:User/Inc/rosserialInc/ros/duration.h **** {
  48:User/Inc/rosserialInc/ros/duration.h **** public:
  49:User/Inc/rosserialInc/ros/duration.h ****   int32_t sec, nsec;
  50:User/Inc/rosserialInc/ros/duration.h **** 
  51:User/Inc/rosserialInc/ros/duration.h ****   Duration() : sec(0), nsec(0) {}
 303              		.loc 2 51 3 view .LVU65
 304              	.LBB6:
 305              	.LBB7:
 306              		.loc 2 51 30 is_stmt 0 view .LVU66
 307 0004 0023     		movs	r3, #0
 308 0006 0360     		str	r3, [r0]
 309 0008 4360     		str	r3, [r0, #4]
 310              	.LVL18:
 311              		.loc 2 51 30 view .LVU67
 312              	.LBE7:
 313              	.LBE6:
 314              	.LBE5:
  74:User/Inc/rosserialInc/time.cpp ****   d.sec = sec > rhs.sec ? sec - rhs.sec : -(rhs.sec - sec);
 315              		.loc 1 74 3 is_stmt 1 view .LVU68
 316              		.loc 1 74 27 is_stmt 0 view .LVU69
 317 000a 0B68     		ldr	r3, [r1]
 318              		.loc 1 74 31 view .LVU70
 319 000c 1568     		ldr	r5, [r2]
 320 000e 5B1B     		subs	r3, r3, r5
 321              		.loc 1 74 9 view .LVU71
 322 0010 0360     		str	r3, [r0]
  75:User/Inc/rosserialInc/time.cpp ****   d.nsec = nsec > rhs.nsec ? nsec - rhs.nsec : -(rhs.nsec - nsec);
 323              		.loc 1 75 3 is_stmt 1 view .LVU72
 324              		.loc 1 75 30 is_stmt 0 view .LVU73
 325 0012 4B68     		ldr	r3, [r1, #4]
 326              		.loc 1 75 41 view .LVU74
 327 0014 5268     		ldr	r2, [r2, #4]
 328              	.LVL19:
 329              		.loc 1 75 35 view .LVU75
 330 0016 9B1A     		subs	r3, r3, r2
 331              		.loc 1 75 10 view .LVU76
 332 0018 0146     		mov	r1, r0
 333              	.LVL20:
 334              		.loc 1 75 10 view .LVU77
 335 001a 41F8043F 		str	r3, [r1, #4]!
  76:User/Inc/rosserialInc/time.cpp ****   normalizeSecNSecSigned(d.sec, d.nsec);
 336              		.loc 1 76 3 is_stmt 1 view .LVU78
 337              		.loc 1 76 25 is_stmt 0 view .LVU79
 338 001e FFF7FEFF 		bl	_ZN3ros22normalizeSecNSecSignedERlS0_
ARM GAS  /tmp/ccOVwrVl.s 			page 9


 339              	.LVL21:
  77:User/Inc/rosserialInc/time.cpp ****   return d;
 340              		.loc 1 77 3 is_stmt 1 view .LVU80
  78:User/Inc/rosserialInc/time.cpp **** }
 341              		.loc 1 78 1 is_stmt 0 view .LVU81
 342 0022 2046     		mov	r0, r4
 343 0024 38BD     		pop	{r3, r4, r5, pc}
 344              		.loc 1 78 1 view .LVU82
 345              		.cfi_endproc
 346              	.LFE245:
 347              		.fnend
 349              		.text
 350              	.Letext0:
 351              		.file 3 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 352              		.file 4 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 353              		.file 5 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 354              		.file 6 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 355              		.file 7 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 356              		.file 8 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 357              		.file 9 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 358              		.file 10 "User/Inc/rosserialInc/ros/time.h"
 359              		.file 11 "<built-in>"
ARM GAS  /tmp/ccOVwrVl.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 time.cpp
     /tmp/ccOVwrVl.s:16     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000000 $t
     /tmp/ccOVwrVl.s:24     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000000 _ZN3ros16normalizeSecNSecERmS0_
     /tmp/ccOVwrVl.s:73     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000024 $d
.ARM.exidx.text._ZN3ros16normalizeSecNSecERmS0_:0000000000000000 $d
     /tmp/ccOVwrVl.s:81     .text._ZN3ros4Time8fromNSecEl:0000000000000000 $t
     /tmp/ccOVwrVl.s:88     .text._ZN3ros4Time8fromNSecEl:0000000000000000 _ZN3ros4Time8fromNSecEl
     /tmp/ccOVwrVl.s:133    .text._ZN3ros4Time8fromNSecEl:0000000000000028 $d
.ARM.exidx.text._ZN3ros4Time8fromNSecEl:0000000000000000 $d
     /tmp/ccOVwrVl.s:141    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000000 $t
     /tmp/ccOVwrVl.s:148    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000000 _ZN3ros4TimepLERKNS_8DurationE
     /tmp/ccOVwrVl.s:200    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000028 $d
.ARM.exidx.text._ZN3ros4TimepLERKNS_8DurationE:0000000000000000 $d
     /tmp/ccOVwrVl.s:207    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000000 $t
     /tmp/ccOVwrVl.s:214    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000000 _ZN3ros4TimemIERKNS_8DurationE
     /tmp/ccOVwrVl.s:266    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000028 $d
.ARM.exidx.text._ZN3ros4TimemIERKNS_8DurationE:0000000000000000 $d
     /tmp/ccOVwrVl.s:273    .text._ZNK3ros4TimemiERKS0_:0000000000000000 $t
     /tmp/ccOVwrVl.s:280    .text._ZNK3ros4TimemiERKS0_:0000000000000000 _ZNK3ros4TimemiERKS0_
.ARM.exidx.text._ZNK3ros4TimemiERKS0_:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN3ros22normalizeSecNSecSignedERlS0_
__aeabi_unwind_cpp_pr0
