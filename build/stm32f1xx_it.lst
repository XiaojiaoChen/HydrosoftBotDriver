ARM GAS  /tmp/ccbG35ig.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB65:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccbG35ig.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  60:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  62:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f1xx_it.c **** 
  66:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f1xx_it.c **** 
  68:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f1xx_it.c **** /**
  72:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f1xx_it.c ****   */
  74:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  76:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f1xx_it.c **** 
  78:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f1xx_it.c ****   while (1)
  34              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/ccbG35ig.s 			page 3


  82:Core/Src/stm32f1xx_it.c ****   }
  35              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f1xx_it.c ****   {
  36              		.loc 1 80 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	HardFault_Handler:
  50              	.LFB66:
  83:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f1xx_it.c **** }
  85:Core/Src/stm32f1xx_it.c **** 
  86:Core/Src/stm32f1xx_it.c **** /**
  87:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f1xx_it.c ****   */
  89:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f1xx_it.c **** {
  51              		.loc 1 90 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  91:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c **** 
  93:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****   while (1)
  58              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f1xx_it.c ****   {
  96:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f1xx_it.c ****   }
  59              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f1xx_it.c ****   {
  60              		.loc 1 94 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE66:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	MemManage_Handler:
  74              	.LFB67:
  99:Core/Src/stm32f1xx_it.c **** }
 100:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccbG35ig.s 			page 4


 101:Core/Src/stm32f1xx_it.c **** /**
 102:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f1xx_it.c ****   */
 104:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f1xx_it.c **** {
  75              		.loc 1 105 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 106:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c **** 
 108:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****   while (1)
  82              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f1xx_it.c ****   {
 111:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f1xx_it.c ****   }
  83              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f1xx_it.c ****   {
  84              		.loc 1 109 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE67:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	BusFault_Handler:
  98              	.LFB68:
 114:Core/Src/stm32f1xx_it.c **** }
 115:Core/Src/stm32f1xx_it.c **** 
 116:Core/Src/stm32f1xx_it.c **** /**
 117:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:Core/Src/stm32f1xx_it.c ****   */
 119:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f1xx_it.c **** {
  99              		.loc 1 120 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.L8:
 121:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c **** 
 123:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****   while (1)
 106              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Core/Src/stm32f1xx_it.c ****   {
 126:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccbG35ig.s 			page 5


 127:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f1xx_it.c ****   }
 107              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f1xx_it.c ****   {
 108              		.loc 1 124 9 discriminator 1 view .LVU15
 109 0000 FEE7     		b	.L8
 110              		.cfi_endproc
 111              	.LFE68:
 113              		.section	.text.UsageFault_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	UsageFault_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	UsageFault_Handler:
 122              	.LFB69:
 129:Core/Src/stm32f1xx_it.c **** }
 130:Core/Src/stm32f1xx_it.c **** 
 131:Core/Src/stm32f1xx_it.c **** /**
 132:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f1xx_it.c ****   */
 134:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f1xx_it.c **** {
 123              		.loc 1 135 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.L10:
 136:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c **** 
 138:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   while (1)
 130              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f1xx_it.c ****   {
 141:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f1xx_it.c ****   }
 131              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f1xx_it.c ****   {
 132              		.loc 1 139 9 discriminator 1 view .LVU19
 133 0000 FEE7     		b	.L10
 134              		.cfi_endproc
 135              	.LFE69:
 137              		.section	.text.DebugMon_Handler,"ax",%progbits
 138              		.align	1
 139              		.global	DebugMon_Handler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	DebugMon_Handler:
 146              	.LFB70:
 144:Core/Src/stm32f1xx_it.c **** }
 145:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccbG35ig.s 			page 6


 146:Core/Src/stm32f1xx_it.c **** /**
 147:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 148:Core/Src/stm32f1xx_it.c ****   */
 149:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 150:Core/Src/stm32f1xx_it.c **** {
 147              		.loc 1 150 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Core/Src/stm32f1xx_it.c **** }
 152              		.loc 1 157 1 view .LVU21
 153 0000 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE70:
 157              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 158              		.align	1
 159              		.global	DMA1_Channel4_IRQHandler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	DMA1_Channel4_IRQHandler:
 166              	.LFB71:
 158:Core/Src/stm32f1xx_it.c **** 
 159:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 160:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 161:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 164:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /**
 167:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 168:Core/Src/stm32f1xx_it.c ****   */
 169:Core/Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 170:Core/Src/stm32f1xx_it.c **** {
 167              		.loc 1 170 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI0:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 176              		.loc 1 174 3 view .LVU23
ARM GAS  /tmp/ccbG35ig.s 			page 7


 177 0002 0248     		ldr	r0, .L14
 178 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 179              	.LVL0:
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 176:Core/Src/stm32f1xx_it.c **** 
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 178:Core/Src/stm32f1xx_it.c **** }
 180              		.loc 1 178 1 is_stmt 0 view .LVU24
 181 0008 08BD     		pop	{r3, pc}
 182              	.L15:
 183 000a 00BF     		.align	2
 184              	.L14:
 185 000c 00000000 		.word	hdma_usart1_tx
 186              		.cfi_endproc
 187              	.LFE71:
 189              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 190              		.align	1
 191              		.global	DMA1_Channel5_IRQHandler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	DMA1_Channel5_IRQHandler:
 198              	.LFB72:
 179:Core/Src/stm32f1xx_it.c **** 
 180:Core/Src/stm32f1xx_it.c **** /**
 181:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 182:Core/Src/stm32f1xx_it.c ****   */
 183:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 184:Core/Src/stm32f1xx_it.c **** {
 199              		.loc 1 184 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 185:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 186:Core/Src/stm32f1xx_it.c **** 
 187:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 188:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 208              		.loc 1 188 3 view .LVU26
 209 0002 0248     		ldr	r0, .L18
 210 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 211              	.LVL1:
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 190:Core/Src/stm32f1xx_it.c **** 
 191:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 192:Core/Src/stm32f1xx_it.c **** }
 212              		.loc 1 192 1 is_stmt 0 view .LVU27
 213 0008 08BD     		pop	{r3, pc}
 214              	.L19:
 215 000a 00BF     		.align	2
 216              	.L18:
 217 000c 00000000 		.word	hdma_usart1_rx
ARM GAS  /tmp/ccbG35ig.s 			page 8


 218              		.cfi_endproc
 219              	.LFE72:
 221              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 222              		.align	1
 223              		.global	TIM1_UP_IRQHandler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 229              	TIM1_UP_IRQHandler:
 230              	.LFB73:
 193:Core/Src/stm32f1xx_it.c **** 
 194:Core/Src/stm32f1xx_it.c **** /**
 195:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 196:Core/Src/stm32f1xx_it.c ****   */
 197:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 198:Core/Src/stm32f1xx_it.c **** {
 231              		.loc 1 198 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 199:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 200:Core/Src/stm32f1xx_it.c **** 
 201:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 202:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 240              		.loc 1 202 3 view .LVU29
 241 0002 0248     		ldr	r0, .L22
 242 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 243              	.LVL2:
 203:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 204:Core/Src/stm32f1xx_it.c **** 
 205:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 206:Core/Src/stm32f1xx_it.c **** }
 244              		.loc 1 206 1 is_stmt 0 view .LVU30
 245 0008 08BD     		pop	{r3, pc}
 246              	.L23:
 247 000a 00BF     		.align	2
 248              	.L22:
 249 000c 00000000 		.word	htim1
 250              		.cfi_endproc
 251              	.LFE73:
 253              		.section	.text.USART1_IRQHandler,"ax",%progbits
 254              		.align	1
 255              		.global	USART1_IRQHandler
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	USART1_IRQHandler:
 262              	.LFB74:
 207:Core/Src/stm32f1xx_it.c **** 
 208:Core/Src/stm32f1xx_it.c **** /**
ARM GAS  /tmp/ccbG35ig.s 			page 9


 209:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 210:Core/Src/stm32f1xx_it.c ****   */
 211:Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 212:Core/Src/stm32f1xx_it.c **** {
 263              		.loc 1 212 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI3:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 213:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 214:Core/Src/stm32f1xx_it.c **** 
 215:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 216:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 272              		.loc 1 216 3 view .LVU32
 273 0002 0248     		ldr	r0, .L26
 274 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 275              	.LVL3:
 217:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 218:Core/Src/stm32f1xx_it.c **** 
 219:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 220:Core/Src/stm32f1xx_it.c **** }
 276              		.loc 1 220 1 is_stmt 0 view .LVU33
 277 0008 08BD     		pop	{r3, pc}
 278              	.L27:
 279 000a 00BF     		.align	2
 280              	.L26:
 281 000c 00000000 		.word	huart1
 282              		.cfi_endproc
 283              	.LFE74:
 285              		.text
 286              	.Letext0:
 287              		.file 2 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 288              		.file 3 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 289              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 290              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 291              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 292              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 293              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  /tmp/ccbG35ig.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccbG35ig.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccbG35ig.s:42     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccbG35ig.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccbG35ig.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:97     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccbG35ig.s:114    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:121    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccbG35ig.s:138    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccbG35ig.s:145    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccbG35ig.s:158    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
     /tmp/ccbG35ig.s:165    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
     /tmp/ccbG35ig.s:185    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
     /tmp/ccbG35ig.s:190    .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
     /tmp/ccbG35ig.s:197    .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
     /tmp/ccbG35ig.s:217    .text.DMA1_Channel5_IRQHandler:000000000000000c $d
     /tmp/ccbG35ig.s:222    .text.TIM1_UP_IRQHandler:0000000000000000 $t
     /tmp/ccbG35ig.s:229    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
     /tmp/ccbG35ig.s:249    .text.TIM1_UP_IRQHandler:000000000000000c $d
     /tmp/ccbG35ig.s:254    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccbG35ig.s:261    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccbG35ig.s:281    .text.USART1_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart1_tx
hdma_usart1_rx
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart1
