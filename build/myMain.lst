ARM GAS  /tmp/ccr3Zb65.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"myMain.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  16              		.align	1
  17              		.weak	_ZNK8std_msgs4Time9serializeEPh
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LVL0:
  27              	.LFB318:
  28              		.file 1 "User/Inc/rosserialInc/std_msgs/Time.h"
   1:User/Inc/rosserialInc/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:User/Inc/rosserialInc/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:User/Inc/rosserialInc/std_msgs/Time.h **** 
   4:User/Inc/rosserialInc/std_msgs/Time.h **** #include <stdint.h>
   5:User/Inc/rosserialInc/std_msgs/Time.h **** #include <string.h>
   6:User/Inc/rosserialInc/std_msgs/Time.h **** #include <stdlib.h>
   7:User/Inc/rosserialInc/std_msgs/Time.h **** #include "ros/msg.h"
   8:User/Inc/rosserialInc/std_msgs/Time.h **** #include "ros/time.h"
   9:User/Inc/rosserialInc/std_msgs/Time.h **** 
  10:User/Inc/rosserialInc/std_msgs/Time.h **** namespace std_msgs
  11:User/Inc/rosserialInc/std_msgs/Time.h **** {
  12:User/Inc/rosserialInc/std_msgs/Time.h **** 
  13:User/Inc/rosserialInc/std_msgs/Time.h ****   class Time : public ros::Msg
  14:User/Inc/rosserialInc/std_msgs/Time.h ****   {
  15:User/Inc/rosserialInc/std_msgs/Time.h ****     public:
  16:User/Inc/rosserialInc/std_msgs/Time.h ****       typedef ros::Time _data_type;
  17:User/Inc/rosserialInc/std_msgs/Time.h ****       _data_type data;
  18:User/Inc/rosserialInc/std_msgs/Time.h **** 
  19:User/Inc/rosserialInc/std_msgs/Time.h ****     Time():
  20:User/Inc/rosserialInc/std_msgs/Time.h ****       data()
  21:User/Inc/rosserialInc/std_msgs/Time.h ****     {
  22:User/Inc/rosserialInc/std_msgs/Time.h ****     }
  23:User/Inc/rosserialInc/std_msgs/Time.h **** 
  24:User/Inc/rosserialInc/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const override
  29              		.loc 1 24 17 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  25:User/Inc/rosserialInc/std_msgs/Time.h ****     {
ARM GAS  /tmp/ccr3Zb65.s 			page 2


  26:User/Inc/rosserialInc/std_msgs/Time.h ****       int offset = 0;
  34              		.loc 1 26 7 view .LVU1
  27:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 27 7 view .LVU2
  36              		.loc 1 27 47 is_stmt 0 view .LVU3
  37 0000 4368     		ldr	r3, [r0, #4]
  38              		.loc 1 27 33 view .LVU4
  39 0002 0B70     		strb	r3, [r1]
  28:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  40              		.loc 1 28 7 is_stmt 1 view .LVU5
  41              		.loc 1 28 47 is_stmt 0 view .LVU6
  42 0004 4368     		ldr	r3, [r0, #4]
  43              		.loc 1 28 51 view .LVU7
  44 0006 1B0A     		lsrs	r3, r3, #8
  45              		.loc 1 28 33 view .LVU8
  46 0008 4B70     		strb	r3, [r1, #1]
  29:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  47              		.loc 1 29 7 is_stmt 1 view .LVU9
  48              		.loc 1 29 51 is_stmt 0 view .LVU10
  49 000a C388     		ldrh	r3, [r0, #6]
  50              		.loc 1 29 33 view .LVU11
  51 000c 8B70     		strb	r3, [r1, #2]
  30:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  52              		.loc 1 30 7 is_stmt 1 view .LVU12
  53              		.loc 1 30 51 is_stmt 0 view .LVU13
  54 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  55              		.loc 1 30 33 view .LVU14
  56 0010 CB70     		strb	r3, [r1, #3]
  31:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  57              		.loc 1 31 7 is_stmt 1 view .LVU15
  58              	.LVL1:
  32:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  59              		.loc 1 32 7 view .LVU16
  60              		.loc 1 32 47 is_stmt 0 view .LVU17
  61 0012 8368     		ldr	r3, [r0, #8]
  62              		.loc 1 32 33 view .LVU18
  63 0014 0B71     		strb	r3, [r1, #4]
  33:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  64              		.loc 1 33 7 is_stmt 1 view .LVU19
  65              		.loc 1 33 47 is_stmt 0 view .LVU20
  66 0016 8368     		ldr	r3, [r0, #8]
  67              		.loc 1 33 52 view .LVU21
  68 0018 1B0A     		lsrs	r3, r3, #8
  69              		.loc 1 33 33 view .LVU22
  70 001a 4B71     		strb	r3, [r1, #5]
  34:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  71              		.loc 1 34 7 is_stmt 1 view .LVU23
  72              		.loc 1 34 52 is_stmt 0 view .LVU24
  73 001c 4389     		ldrh	r3, [r0, #10]
  74              		.loc 1 34 33 view .LVU25
  75 001e 8B71     		strb	r3, [r1, #6]
  35:User/Inc/rosserialInc/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  76              		.loc 1 35 7 is_stmt 1 view .LVU26
  77              		.loc 1 35 52 is_stmt 0 view .LVU27
  78 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  79              		.loc 1 35 33 view .LVU28
  80 0022 CB71     		strb	r3, [r1, #7]
ARM GAS  /tmp/ccr3Zb65.s 			page 3


  36:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  81              		.loc 1 36 7 is_stmt 1 view .LVU29
  82              	.LVL2:
  37:User/Inc/rosserialInc/std_msgs/Time.h ****       return offset;
  83              		.loc 1 37 7 view .LVU30
  38:User/Inc/rosserialInc/std_msgs/Time.h ****     }
  84              		.loc 1 38 5 is_stmt 0 view .LVU31
  85 0024 0820     		movs	r0, #8
  86              	.LVL3:
  87              		.loc 1 38 5 view .LVU32
  88 0026 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE318:
  91              		.cantunwind
  92              		.fnend
  94              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  95              		.align	1
  96              		.weak	_ZN8std_msgs4Time11deserializeEPh
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu softvfp
 102              	_ZN8std_msgs4Time11deserializeEPh:
 103              		.fnstart
 104              	.LVL4:
 105              	.LFB319:
  39:User/Inc/rosserialInc/std_msgs/Time.h **** 
  40:User/Inc/rosserialInc/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer) override
 106              		.loc 1 40 17 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
  41:User/Inc/rosserialInc/std_msgs/Time.h ****     {
  42:User/Inc/rosserialInc/std_msgs/Time.h ****       int offset = 0;
 111              		.loc 1 42 7 view .LVU34
  43:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
 112              		.loc 1 43 7 view .LVU35
 113              		.loc 1 43 38 is_stmt 0 view .LVU36
 114 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 115              		.loc 1 43 22 view .LVU37
 116 0002 4360     		str	r3, [r0, #4]
  44:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 117              		.loc 1 44 7 is_stmt 1 view .LVU38
 118              		.loc 1 44 38 is_stmt 0 view .LVU39
 119 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 120              		.loc 1 44 22 view .LVU40
 121 0006 43EA0223 		orr	r3, r3, r2, lsl #8
 122 000a 4360     		str	r3, [r0, #4]
  45:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 123              		.loc 1 45 7 is_stmt 1 view .LVU41
 124              		.loc 1 45 38 is_stmt 0 view .LVU42
 125 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 126              		.loc 1 45 22 view .LVU43
 127 000e 43EA0243 		orr	r3, r3, r2, lsl #16
 128 0012 4360     		str	r3, [r0, #4]
  46:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
ARM GAS  /tmp/ccr3Zb65.s 			page 4


 129              		.loc 1 46 7 is_stmt 1 view .LVU44
 130              		.loc 1 46 38 is_stmt 0 view .LVU45
 131 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 132              		.loc 1 46 22 view .LVU46
 133 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 134 001a 4360     		str	r3, [r0, #4]
  47:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 135              		.loc 1 47 7 is_stmt 1 view .LVU47
 136              	.LVL5:
  48:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 137              		.loc 1 48 7 view .LVU48
 138              		.loc 1 48 39 is_stmt 0 view .LVU49
 139 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 140              		.loc 1 48 23 view .LVU50
 141 001e 8360     		str	r3, [r0, #8]
  49:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 142              		.loc 1 49 7 is_stmt 1 view .LVU51
 143              		.loc 1 49 39 is_stmt 0 view .LVU52
 144 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 145              		.loc 1 49 23 view .LVU53
 146 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 147 0026 8360     		str	r3, [r0, #8]
  50:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 148              		.loc 1 50 7 is_stmt 1 view .LVU54
 149              		.loc 1 50 39 is_stmt 0 view .LVU55
 150 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 151              		.loc 1 50 23 view .LVU56
 152 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 153 002e 8360     		str	r3, [r0, #8]
  51:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 154              		.loc 1 51 7 is_stmt 1 view .LVU57
 155              		.loc 1 51 39 is_stmt 0 view .LVU58
 156 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 157              		.loc 1 51 23 view .LVU59
 158 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 159 0036 8360     		str	r3, [r0, #8]
  52:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 160              		.loc 1 52 7 is_stmt 1 view .LVU60
 161              	.LVL6:
  53:User/Inc/rosserialInc/std_msgs/Time.h ****      return offset;
 162              		.loc 1 53 6 view .LVU61
  54:User/Inc/rosserialInc/std_msgs/Time.h ****     }
 163              		.loc 1 54 5 is_stmt 0 view .LVU62
 164 0038 0820     		movs	r0, #8
 165              	.LVL7:
 166              		.loc 1 54 5 view .LVU63
 167 003a 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE319:
 170              		.cantunwind
 171              		.fnend
 173              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 174              		.align	2
 175              	.LC0:
 176 0000 7374645F 		.ascii	"std_msgs/Time\000"
 176      6D736773 
 176      2F54696D 
ARM GAS  /tmp/ccr3Zb65.s 			page 5


 176      6500
 177              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 178              		.align	1
 179              		.weak	_ZN8std_msgs4Time7getTypeEv
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	_ZN8std_msgs4Time7getTypeEv:
 186              		.fnstart
 187              	.LVL8:
 188              	.LFB320:
  55:User/Inc/rosserialInc/std_msgs/Time.h **** 
  56:User/Inc/rosserialInc/std_msgs/Time.h ****     virtual const char * getType() override { return "std_msgs/Time"; };
 189              		.loc 1 56 26 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              		.loc 1 56 47 view .LVU65
 195              		.loc 1 56 71 is_stmt 0 view .LVU66
 196 0000 0048     		ldr	r0, .L4
 197              	.LVL9:
 198              		.loc 1 56 71 view .LVU67
 199 0002 7047     		bx	lr
 200              	.L5:
 201              		.align	2
 202              	.L4:
 203 0004 00000000 		.word	.LC0
 204              		.cfi_endproc
 205              	.LFE320:
 206              		.cantunwind
 207              		.fnend
 209              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 210              		.align	2
 211              	.LC1:
 212 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 212      36366337 
 212      34633535 
 212      32633331 
 212      31666263 
 213              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 214              		.align	1
 215              		.weak	_ZN8std_msgs4Time6getMD5Ev
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	_ZN8std_msgs4Time6getMD5Ev:
 222              		.fnstart
 223              	.LVL10:
 224              	.LFB321:
  57:User/Inc/rosserialInc/std_msgs/Time.h ****     virtual const char * getMD5() override { return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 225              		.loc 1 57 26 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccr3Zb65.s 			page 6


 229              		@ link register save eliminated.
 230              		.loc 1 57 46 view .LVU69
 231              		.loc 1 57 89 is_stmt 0 view .LVU70
 232 0000 0048     		ldr	r0, .L7
 233              	.LVL11:
 234              		.loc 1 57 89 view .LVU71
 235 0002 7047     		bx	lr
 236              	.L8:
 237              		.align	2
 238              	.L7:
 239 0004 00000000 		.word	.LC1
 240              		.cfi_endproc
 241              	.LFE321:
 242              		.cantunwind
 243              		.fnend
 245              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 246              		.align	2
 247              	.LC2:
 248 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 248      65726961 
 248      6C5F6D73 
 248      67732F54 
 248      6F706963 
 249              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 250              		.align	1
 251              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 258              		.fnstart
 259              	.LVL12:
 260              	.LFB327:
 261              		.file 2 "User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h"
   1:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
   4:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
   9:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** {
  11:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
  12:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****   {
  14:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     public:
  15:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       typedef uint16_t _topic_id_type;
  16:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       _topic_id_type topic_id;
  17:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       typedef const char* _topic_name_type;
  18:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       _topic_name_type topic_name;
  19:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       typedef const char* _message_type_type;
  20:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       _message_type_type message_type;
  21:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       typedef const char* _md5sum_type;
  22:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       _md5sum_type md5sum;
ARM GAS  /tmp/ccr3Zb65.s 			page 7


  23:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       typedef int32_t _buffer_size_type;
  24:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       _buffer_size_type buffer_size;
  25:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  26:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  27:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  28:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  29:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  30:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  31:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  32:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  33:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
  34:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  35:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  36:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  37:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       message_type(""),
  38:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  39:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  40:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
  41:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     }
  42:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
  43:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const override
  44:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
  45:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  46:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  47:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  48:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  49:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  50:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
  51:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  53:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  54:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  55:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
  56:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  58:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  59:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  60:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
  61:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
  62:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  63:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  64:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
  65:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         int32_t real;
  66:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  67:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  68:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  69:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  70:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  71:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  72:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  73:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  74:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       return offset;
  75:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     }
  76:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
  77:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer) override
  78:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
  79:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       int offset = 0;
ARM GAS  /tmp/ccr3Zb65.s 			page 8


  80:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  81:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  82:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  83:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  84:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_topic_name, (inbuffer + offset));
  85:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  87:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  88:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
  89:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  90:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  91:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  92:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  93:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_message_type, (inbuffer + offset));
  94:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  96:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  97:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
  98:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  99:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 100:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 101:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
 102:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_md5sum, (inbuffer + offset));
 103:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 105:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 106:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 107:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 108:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 109:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 110:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
 111:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         int32_t real;
 112:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 113:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 114:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 115:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 116:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 117:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 118:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 119:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 120:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 121:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****      return offset;
 122:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     }
 123:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 124:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     virtual const char * getType() override { return "rosserial_msgs/TopicInfo"; };
 262              		.loc 2 124 26 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              		.loc 2 124 47 view .LVU73
 268              		.loc 2 124 82 is_stmt 0 view .LVU74
 269 0000 0048     		ldr	r0, .L10
 270              	.LVL13:
 271              		.loc 2 124 82 view .LVU75
 272 0002 7047     		bx	lr
 273              	.L11:
ARM GAS  /tmp/ccr3Zb65.s 			page 9


 274              		.align	2
 275              	.L10:
 276 0004 00000000 		.word	.LC2
 277              		.cfi_endproc
 278              	.LFE327:
 279              		.cantunwind
 280              		.fnend
 282              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 283              		.align	2
 284              	.LC3:
 285 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 285      31663838 
 285      66633434 
 285      38393266 
 285      38633130 
 286              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 287              		.align	1
 288              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 295              		.fnstart
 296              	.LVL14:
 297              	.LFB328:
 125:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     virtual const char * getMD5() override { return "0ad51f88fc44892f8c10684077646005"; };
 298              		.loc 2 125 26 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              		.loc 2 125 46 view .LVU77
 304              		.loc 2 125 89 is_stmt 0 view .LVU78
 305 0000 0048     		ldr	r0, .L13
 306              	.LVL15:
 307              		.loc 2 125 89 view .LVU79
 308 0002 7047     		bx	lr
 309              	.L14:
 310              		.align	2
 311              	.L13:
 312 0004 00000000 		.word	.LC3
 313              		.cfi_endproc
 314              	.LFE328:
 315              		.cantunwind
 316              		.fnend
 318              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 319              		.align	1
 320              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu softvfp
 326              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 327              		.fnstart
 328              	.LVL16:
 329              	.LFB325:
ARM GAS  /tmp/ccr3Zb65.s 			page 10


  43:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 330              		.loc 2 43 17 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
  43:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 334              		.loc 2 43 17 is_stmt 0 view .LVU81
 335 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 336              	.LCFI0:
 337              		.cfi_def_cfa_offset 24
 338              		.cfi_offset 4, -24
 339              		.cfi_offset 5, -20
 340              		.cfi_offset 6, -16
 341              		.cfi_offset 7, -12
 342              		.cfi_offset 8, -8
 343              		.cfi_offset 14, -4
 344 0004 0646     		mov	r6, r0
 345 0006 0D46     		mov	r5, r1
  45:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
 346              		.loc 2 45 7 is_stmt 1 view .LVU82
 347              	.LVL17:
  46:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 348              		.loc 2 46 7 view .LVU83
  46:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 349              		.loc 2 46 42 is_stmt 0 view .LVU84
 350 0008 8388     		ldrh	r3, [r0, #4]
  46:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 351              		.loc 2 46 33 view .LVU85
 352 000a 0B70     		strb	r3, [r1]
  47:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 353              		.loc 2 47 7 is_stmt 1 view .LVU86
  47:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 354              		.loc 2 47 42 is_stmt 0 view .LVU87
 355 000c 8388     		ldrh	r3, [r0, #4]
  47:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 356              		.loc 2 47 51 view .LVU88
 357 000e 1B0A     		lsrs	r3, r3, #8
  47:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 358              		.loc 2 47 33 view .LVU89
 359 0010 4B70     		strb	r3, [r1, #1]
  48:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
 360              		.loc 2 48 7 is_stmt 1 view .LVU90
 361              	.LVL18:
  49:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 362              		.loc 2 49 7 view .LVU91
  49:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 363              		.loc 2 49 42 is_stmt 0 view .LVU92
 364 0012 8068     		ldr	r0, [r0, #8]
 365              	.LVL19:
  49:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 366              		.loc 2 49 42 view .LVU93
 367 0014 FFF7FEFF 		bl	strlen
 368              	.LVL20:
  49:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 369              		.loc 2 49 42 view .LVU94
 370 0018 0446     		mov	r4, r0
 371              	.LVL21:
ARM GAS  /tmp/ccr3Zb65.s 			page 11


  50:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 372              		.loc 2 50 7 is_stmt 1 view .LVU95
 373              	.LBB62:
 374              	.LBI62:
 375              		.file 3 "User/Inc/rosserialInc/ros/msg.h"
   1:User/Inc/rosserialInc/ros/msg.h **** /*
   2:User/Inc/rosserialInc/ros/msg.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/ros/msg.h ****  *
   4:User/Inc/rosserialInc/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/ros/msg.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/ros/msg.h ****  *
   7:User/Inc/rosserialInc/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/ros/msg.h ****  * are met:
  10:User/Inc/rosserialInc/ros/msg.h ****  *
  11:User/Inc/rosserialInc/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/ros/msg.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/ros/msg.h ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/ros/msg.h ****  *
  21:User/Inc/rosserialInc/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/ros/msg.h ****  */
  34:User/Inc/rosserialInc/ros/msg.h **** 
  35:User/Inc/rosserialInc/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:User/Inc/rosserialInc/ros/msg.h **** #define _ROS_MSG_H_
  37:User/Inc/rosserialInc/ros/msg.h **** 
  38:User/Inc/rosserialInc/ros/msg.h **** #include <stdint.h>
  39:User/Inc/rosserialInc/ros/msg.h **** #include <stddef.h>
  40:User/Inc/rosserialInc/ros/msg.h **** #include <string.h>
  41:User/Inc/rosserialInc/ros/msg.h **** 
  42:User/Inc/rosserialInc/ros/msg.h **** namespace ros
  43:User/Inc/rosserialInc/ros/msg.h **** {
  44:User/Inc/rosserialInc/ros/msg.h **** 
  45:User/Inc/rosserialInc/ros/msg.h **** /* Base Message Type */
  46:User/Inc/rosserialInc/ros/msg.h **** class Msg
  47:User/Inc/rosserialInc/ros/msg.h **** {
  48:User/Inc/rosserialInc/ros/msg.h **** public:
  49:User/Inc/rosserialInc/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  50:User/Inc/rosserialInc/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  51:User/Inc/rosserialInc/ros/msg.h ****   virtual const char * getType() = 0;
  52:User/Inc/rosserialInc/ros/msg.h ****   virtual const char * getMD5() = 0;
ARM GAS  /tmp/ccr3Zb65.s 			page 12


  53:User/Inc/rosserialInc/ros/msg.h **** 
  54:User/Inc/rosserialInc/ros/msg.h ****   /**
  55:User/Inc/rosserialInc/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  56:User/Inc/rosserialInc/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  57:User/Inc/rosserialInc/ros/msg.h ****    *        fields, despite AVR having no native support for double.
  58:User/Inc/rosserialInc/ros/msg.h ****    *
  59:User/Inc/rosserialInc/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  60:User/Inc/rosserialInc/ros/msg.h ****    * @param[in] f value to serialize.
  61:User/Inc/rosserialInc/ros/msg.h ****    *
  62:User/Inc/rosserialInc/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  63:User/Inc/rosserialInc/ros/msg.h ****    *
  64:User/Inc/rosserialInc/ros/msg.h ****    */
  65:User/Inc/rosserialInc/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  66:User/Inc/rosserialInc/ros/msg.h ****   {
  67:User/Inc/rosserialInc/ros/msg.h ****     int32_t val;
  68:User/Inc/rosserialInc/ros/msg.h ****     memcpy(&val, &f, sizeof(val));
  69:User/Inc/rosserialInc/ros/msg.h **** 
  70:User/Inc/rosserialInc/ros/msg.h ****     int16_t exp = ((val >> 23) & 255);
  71:User/Inc/rosserialInc/ros/msg.h ****     uint32_t mantissa = val & 0x7FFFFF;
  72:User/Inc/rosserialInc/ros/msg.h **** 
  73:User/Inc/rosserialInc/ros/msg.h ****     if (exp == 255)
  74:User/Inc/rosserialInc/ros/msg.h ****     {
  75:User/Inc/rosserialInc/ros/msg.h ****       exp = 2047; // Special value for NaN, infinity etc.
  76:User/Inc/rosserialInc/ros/msg.h ****     }
  77:User/Inc/rosserialInc/ros/msg.h ****     else if (exp != 0)
  78:User/Inc/rosserialInc/ros/msg.h ****     {
  79:User/Inc/rosserialInc/ros/msg.h ****       exp += 1023 - 127; // Normal case
  80:User/Inc/rosserialInc/ros/msg.h ****     }
  81:User/Inc/rosserialInc/ros/msg.h ****     else if (!mantissa)
  82:User/Inc/rosserialInc/ros/msg.h ****     {
  83:User/Inc/rosserialInc/ros/msg.h ****       exp = 0; // Zero
  84:User/Inc/rosserialInc/ros/msg.h ****     }
  85:User/Inc/rosserialInc/ros/msg.h ****     else
  86:User/Inc/rosserialInc/ros/msg.h ****     {
  87:User/Inc/rosserialInc/ros/msg.h ****       // Denormalized value in float, will fit as normalized value in double
  88:User/Inc/rosserialInc/ros/msg.h ****       exp += 1023 - 127;
  89:User/Inc/rosserialInc/ros/msg.h ****       mantissa <<= 1;
  90:User/Inc/rosserialInc/ros/msg.h ****       while (!(mantissa & 0x800000))
  91:User/Inc/rosserialInc/ros/msg.h ****       {
  92:User/Inc/rosserialInc/ros/msg.h ****           mantissa <<= 1;
  93:User/Inc/rosserialInc/ros/msg.h ****           exp--;
  94:User/Inc/rosserialInc/ros/msg.h ****       }
  95:User/Inc/rosserialInc/ros/msg.h ****       mantissa &= 0x7FFFFF;
  96:User/Inc/rosserialInc/ros/msg.h ****     }
  97:User/Inc/rosserialInc/ros/msg.h **** 
  98:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = 0;
  99:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = 0;
 100:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = 0;
 101:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = (mantissa << 5) & 0xff;
 102:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = (mantissa >> 3) & 0xff;
 103:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = (mantissa >> 11) & 0xff;
 104:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((mantissa >> 19) & 0x0F);
 105:User/Inc/rosserialInc/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 106:User/Inc/rosserialInc/ros/msg.h **** 
 107:User/Inc/rosserialInc/ros/msg.h ****     // Mark negative bit as necessary.
 108:User/Inc/rosserialInc/ros/msg.h ****     if (f < 0)
 109:User/Inc/rosserialInc/ros/msg.h ****     {
ARM GAS  /tmp/ccr3Zb65.s 			page 13


 110:User/Inc/rosserialInc/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 111:User/Inc/rosserialInc/ros/msg.h ****     }
 112:User/Inc/rosserialInc/ros/msg.h **** 
 113:User/Inc/rosserialInc/ros/msg.h ****     return 8;
 114:User/Inc/rosserialInc/ros/msg.h ****   }
 115:User/Inc/rosserialInc/ros/msg.h **** 
 116:User/Inc/rosserialInc/ros/msg.h ****   /**
 117:User/Inc/rosserialInc/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
 118:User/Inc/rosserialInc/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
 119:User/Inc/rosserialInc/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
 120:User/Inc/rosserialInc/ros/msg.h ****    *
 121:User/Inc/rosserialInc/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
 122:User/Inc/rosserialInc/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
 123:User/Inc/rosserialInc/ros/msg.h ****    *
 124:User/Inc/rosserialInc/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 125:User/Inc/rosserialInc/ros/msg.h ****    */
 126:User/Inc/rosserialInc/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 127:User/Inc/rosserialInc/ros/msg.h ****   {
 128:User/Inc/rosserialInc/ros/msg.h ****     int16_t exp;
 129:User/Inc/rosserialInc/ros/msg.h ****     uint32_t mantissa;
 130:User/Inc/rosserialInc/ros/msg.h **** 
 131:User/Inc/rosserialInc/ros/msg.h ****     // Skip lowest 24 bits
 132:User/Inc/rosserialInc/ros/msg.h ****     inbuffer += 3;
 133:User/Inc/rosserialInc/ros/msg.h **** 
 134:User/Inc/rosserialInc/ros/msg.h ****     // Copy truncated mantissa.
 135:User/Inc/rosserialInc/ros/msg.h ****     mantissa = ((uint32_t)(*(inbuffer++)) >> 4 & 0x0F);
 136:User/Inc/rosserialInc/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 4;
 137:User/Inc/rosserialInc/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 12;
 138:User/Inc/rosserialInc/ros/msg.h ****     mantissa |= ((uint32_t)(*inbuffer) & 0x0f) << 20;
 139:User/Inc/rosserialInc/ros/msg.h **** 
 140:User/Inc/rosserialInc/ros/msg.h ****     // Copy exponent.
 141:User/Inc/rosserialInc/ros/msg.h ****     exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 142:User/Inc/rosserialInc/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 143:User/Inc/rosserialInc/ros/msg.h **** 
 144:User/Inc/rosserialInc/ros/msg.h ****     if (exp == 2047)
 145:User/Inc/rosserialInc/ros/msg.h ****     {
 146:User/Inc/rosserialInc/ros/msg.h ****       exp = 255; // NaN, infinity etc.
 147:User/Inc/rosserialInc/ros/msg.h ****     }
 148:User/Inc/rosserialInc/ros/msg.h ****     else if (exp - 1023 > 127)
 149:User/Inc/rosserialInc/ros/msg.h ****     {
 150:User/Inc/rosserialInc/ros/msg.h ****       exp = 255;
 151:User/Inc/rosserialInc/ros/msg.h ****       mantissa = 0; // Too large for float, convert to infinity
 152:User/Inc/rosserialInc/ros/msg.h ****     }
 153:User/Inc/rosserialInc/ros/msg.h ****     else if (exp - 1023 >= -126)
 154:User/Inc/rosserialInc/ros/msg.h ****     {
 155:User/Inc/rosserialInc/ros/msg.h ****       exp -= 1023 - 127; // Normal case
 156:User/Inc/rosserialInc/ros/msg.h ****     }
 157:User/Inc/rosserialInc/ros/msg.h ****     else if (exp - 1023 < -150)
 158:User/Inc/rosserialInc/ros/msg.h ****     {
 159:User/Inc/rosserialInc/ros/msg.h ****       exp = 0; // Too small or zero
 160:User/Inc/rosserialInc/ros/msg.h ****     }
 161:User/Inc/rosserialInc/ros/msg.h ****     else
 162:User/Inc/rosserialInc/ros/msg.h ****     {
 163:User/Inc/rosserialInc/ros/msg.h ****       // Have to convert to denormalized representation for float
 164:User/Inc/rosserialInc/ros/msg.h ****       mantissa |= 0x1000000;
 165:User/Inc/rosserialInc/ros/msg.h ****       mantissa >>= ((-126 + 1023) - exp);
 166:User/Inc/rosserialInc/ros/msg.h ****       exp = 0;
ARM GAS  /tmp/ccr3Zb65.s 			page 14


 167:User/Inc/rosserialInc/ros/msg.h ****     }
 168:User/Inc/rosserialInc/ros/msg.h **** 
 169:User/Inc/rosserialInc/ros/msg.h ****     // Round off mantissa
 170:User/Inc/rosserialInc/ros/msg.h ****     if (mantissa != 0xFFFFFF)
 171:User/Inc/rosserialInc/ros/msg.h ****       mantissa += 1;
 172:User/Inc/rosserialInc/ros/msg.h **** 
 173:User/Inc/rosserialInc/ros/msg.h ****     mantissa >>= 1;
 174:User/Inc/rosserialInc/ros/msg.h **** 
 175:User/Inc/rosserialInc/ros/msg.h ****     // Put mantissa and exponent into place
 176:User/Inc/rosserialInc/ros/msg.h ****     uint32_t val = mantissa;
 177:User/Inc/rosserialInc/ros/msg.h ****     val |= static_cast<uint32_t>(exp) << 23;
 178:User/Inc/rosserialInc/ros/msg.h **** 
 179:User/Inc/rosserialInc/ros/msg.h ****     // Copy negative sign.
 180:User/Inc/rosserialInc/ros/msg.h ****     val |= (static_cast<uint32_t>(*(inbuffer++)) & 0x80) << 24;
 181:User/Inc/rosserialInc/ros/msg.h **** 
 182:User/Inc/rosserialInc/ros/msg.h ****     memcpy(f, &val, sizeof(val));
 183:User/Inc/rosserialInc/ros/msg.h ****     return 8;
 184:User/Inc/rosserialInc/ros/msg.h ****   }
 185:User/Inc/rosserialInc/ros/msg.h **** 
 186:User/Inc/rosserialInc/ros/msg.h ****   // Copy data from variable into a byte array
 187:User/Inc/rosserialInc/ros/msg.h ****   template<typename A, typename V>
 188:User/Inc/rosserialInc/ros/msg.h ****   static void varToArr(A arr, const V var)
 376              		.loc 3 188 15 view .LVU96
 377              	.LBB63:
 189:User/Inc/rosserialInc/ros/msg.h ****   {
 190:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 378              		.loc 3 190 17 is_stmt 0 view .LVU97
 379 001a 0023     		movs	r3, #0
 380 001c 05E0     		b	.L17
 381              	.LVL22:
 382              	.L23:
 191:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 383              		.loc 3 191 27 view .LVU98
 384 001e DA00     		lsls	r2, r3, #3
 385              		.loc 3 191 21 view .LVU99
 386 0020 24FA02F2 		lsr	r2, r4, r2
 387              		.loc 3 191 10 view .LVU100
 388 0024 991C     		adds	r1, r3, #2
 389              		.loc 3 191 14 view .LVU101
 390 0026 6A54     		strb	r2, [r5, r1]
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 391              		.loc 3 190 5 is_stmt 1 view .LVU102
 392 0028 0133     		adds	r3, r3, #1
 393              	.LVL23:
 394              	.L17:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 395              		.loc 3 190 26 view .LVU103
 396 002a 032B     		cmp	r3, #3
 397 002c F7D9     		bls	.L23
 398              	.LVL24:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 399              		.loc 3 190 26 is_stmt 0 view .LVU104
 400              	.LBE63:
 401              	.LBE62:
  51:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
 402              		.loc 2 51 7 is_stmt 1 view .LVU105
  52:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
ARM GAS  /tmp/ccr3Zb65.s 			page 15


 403              		.loc 2 52 7 view .LVU106
  52:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 404              		.loc 2 52 13 is_stmt 0 view .LVU107
 405 002e 2246     		mov	r2, r4
 406 0030 B168     		ldr	r1, [r6, #8]
 407 0032 A81D     		adds	r0, r5, #6
 408              	.LVL25:
  52:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 409              		.loc 2 52 13 view .LVU108
 410 0034 FFF7FEFF 		bl	memcpy
 411              	.LVL26:
  53:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 412              		.loc 2 53 7 is_stmt 1 view .LVU109
  53:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 413              		.loc 2 53 14 is_stmt 0 view .LVU110
 414 0038 04F10608 		add	r8, r4, #6
 415              	.LVL27:
  54:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
 416              		.loc 2 54 7 is_stmt 1 view .LVU111
  54:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
 417              		.loc 2 54 44 is_stmt 0 view .LVU112
 418 003c F068     		ldr	r0, [r6, #12]
 419 003e FFF7FEFF 		bl	strlen
 420              	.LVL28:
 421 0042 0746     		mov	r7, r0
 422              	.LVL29:
  55:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 423              		.loc 2 55 7 is_stmt 1 view .LVU113
 424              	.LBB64:
 425              	.LBI64:
 188:User/Inc/rosserialInc/ros/msg.h ****   {
 426              		.loc 3 188 15 view .LVU114
 427              	.LBB65:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 428              		.loc 3 190 17 is_stmt 0 view .LVU115
 429 0044 0023     		movs	r3, #0
 430 0046 06E0     		b	.L19
 431              	.LVL30:
 432              	.L24:
 433              		.loc 3 191 27 view .LVU116
 434 0048 D900     		lsls	r1, r3, #3
 435              		.loc 3 191 21 view .LVU117
 436 004a 27FA01F1 		lsr	r1, r7, r1
 437              		.loc 3 191 10 view .LVU118
 438 004e 08EB0302 		add	r2, r8, r3
 439              		.loc 3 191 14 view .LVU119
 440 0052 A954     		strb	r1, [r5, r2]
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 441              		.loc 3 190 5 is_stmt 1 view .LVU120
 442 0054 0133     		adds	r3, r3, #1
 443              	.LVL31:
 444              	.L19:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 445              		.loc 3 190 26 view .LVU121
 446 0056 032B     		cmp	r3, #3
 447 0058 F6D9     		bls	.L24
 448              	.LVL32:
ARM GAS  /tmp/ccr3Zb65.s 			page 16


 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 449              		.loc 3 190 26 is_stmt 0 view .LVU122
 450              	.LBE65:
 451              	.LBE64:
  56:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 452              		.loc 2 56 7 is_stmt 1 view .LVU123
 453 005a 0A34     		adds	r4, r4, #10
 454              	.LVL33:
  57:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 455              		.loc 2 57 7 view .LVU124
  57:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 456              		.loc 2 57 13 is_stmt 0 view .LVU125
 457 005c 3A46     		mov	r2, r7
 458 005e F168     		ldr	r1, [r6, #12]
 459 0060 2819     		adds	r0, r5, r4
 460              	.LVL34:
  57:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 461              		.loc 2 57 13 view .LVU126
 462 0062 FFF7FEFF 		bl	memcpy
 463              	.LVL35:
  58:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 464              		.loc 2 58 7 is_stmt 1 view .LVU127
  58:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 465              		.loc 2 58 14 is_stmt 0 view .LVU128
 466 0066 3C44     		add	r4, r4, r7
 467              	.LVL36:
  59:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
 468              		.loc 2 59 7 is_stmt 1 view .LVU129
  59:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
 469              		.loc 2 59 38 is_stmt 0 view .LVU130
 470 0068 3069     		ldr	r0, [r6, #16]
 471 006a FFF7FEFF 		bl	strlen
 472              	.LVL37:
 473 006e 0746     		mov	r7, r0
 474              	.LVL38:
  60:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 475              		.loc 2 60 7 is_stmt 1 view .LVU131
 476              	.LBB66:
 477              	.LBI66:
 188:User/Inc/rosserialInc/ros/msg.h ****   {
 478              		.loc 3 188 15 view .LVU132
 479              	.LBB67:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 480              		.loc 3 190 17 is_stmt 0 view .LVU133
 481 0070 0023     		movs	r3, #0
 482 0072 05E0     		b	.L21
 483              	.LVL39:
 484              	.L25:
 485              		.loc 3 191 27 view .LVU134
 486 0074 D900     		lsls	r1, r3, #3
 487              		.loc 3 191 21 view .LVU135
 488 0076 27FA01F1 		lsr	r1, r7, r1
 489              		.loc 3 191 10 view .LVU136
 490 007a E218     		adds	r2, r4, r3
 491              		.loc 3 191 14 view .LVU137
 492 007c A954     		strb	r1, [r5, r2]
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
ARM GAS  /tmp/ccr3Zb65.s 			page 17


 493              		.loc 3 190 5 is_stmt 1 view .LVU138
 494 007e 0133     		adds	r3, r3, #1
 495              	.LVL40:
 496              	.L21:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 497              		.loc 3 190 26 view .LVU139
 498 0080 032B     		cmp	r3, #3
 499 0082 F7D9     		bls	.L25
 500              	.LVL41:
 190:User/Inc/rosserialInc/ros/msg.h ****       arr[i] = (var >> (8 * i));
 501              		.loc 3 190 26 is_stmt 0 view .LVU140
 502              	.LBE67:
 503              	.LBE66:
  61:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 504              		.loc 2 61 7 is_stmt 1 view .LVU141
  61:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 505              		.loc 2 61 14 is_stmt 0 view .LVU142
 506 0084 0434     		adds	r4, r4, #4
 507              	.LVL42:
  62:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 508              		.loc 2 62 7 is_stmt 1 view .LVU143
  62:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 509              		.loc 2 62 13 is_stmt 0 view .LVU144
 510 0086 3A46     		mov	r2, r7
 511 0088 3169     		ldr	r1, [r6, #16]
 512 008a 2819     		adds	r0, r5, r4
 513              	.LVL43:
  62:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 514              		.loc 2 62 13 view .LVU145
 515 008c FFF7FEFF 		bl	memcpy
 516              	.LVL44:
  63:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
 517              		.loc 2 63 7 is_stmt 1 view .LVU146
  63:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
 518              		.loc 2 63 14 is_stmt 0 view .LVU147
 519 0090 E019     		adds	r0, r4, r7
 520              	.LVL45:
  64:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         int32_t real;
 521              		.loc 2 64 7 is_stmt 1 view .LVU148
  68:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 522              		.loc 2 68 7 view .LVU149
  68:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 523              		.loc 2 68 34 is_stmt 0 view .LVU150
 524 0092 7369     		ldr	r3, [r6, #20]
  69:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 525              		.loc 2 69 7 is_stmt 1 view .LVU151
  69:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 526              		.loc 2 69 33 is_stmt 0 view .LVU152
 527 0094 2B54     		strb	r3, [r5, r0]
  70:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 528              		.loc 2 70 7 is_stmt 1 view .LVU153
  70:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 529              		.loc 2 70 55 is_stmt 0 view .LVU154
 530 0096 190A     		lsrs	r1, r3, #8
  70:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 531              		.loc 2 70 28 view .LVU155
 532 0098 421C     		adds	r2, r0, #1
ARM GAS  /tmp/ccr3Zb65.s 			page 18


  70:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 533              		.loc 2 70 33 view .LVU156
 534 009a A954     		strb	r1, [r5, r2]
  71:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 535              		.loc 2 71 7 is_stmt 1 view .LVU157
  71:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 536              		.loc 2 71 55 is_stmt 0 view .LVU158
 537 009c 190C     		lsrs	r1, r3, #16
  71:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 538              		.loc 2 71 28 view .LVU159
 539 009e 821C     		adds	r2, r0, #2
  71:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 540              		.loc 2 71 33 view .LVU160
 541 00a0 A954     		strb	r1, [r5, r2]
  72:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 542              		.loc 2 72 7 is_stmt 1 view .LVU161
  72:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 543              		.loc 2 72 55 is_stmt 0 view .LVU162
 544 00a2 1B0E     		lsrs	r3, r3, #24
  72:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 545              		.loc 2 72 28 view .LVU163
 546 00a4 C21C     		adds	r2, r0, #3
  72:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 547              		.loc 2 72 33 view .LVU164
 548 00a6 AB54     		strb	r3, [r5, r2]
  73:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       return offset;
 549              		.loc 2 73 7 is_stmt 1 view .LVU165
 550              	.LVL46:
  74:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     }
 551              		.loc 2 74 7 view .LVU166
  75:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 552              		.loc 2 75 5 is_stmt 0 view .LVU167
 553 00a8 0430     		adds	r0, r0, #4
 554              	.LVL47:
  75:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 555              		.loc 2 75 5 view .LVU168
 556 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  75:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 557              		.loc 2 75 5 view .LVU169
 558              		.cfi_endproc
 559              	.LFE325:
 560              		.cantunwind
 561              		.fnend
 563              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 564              		.align	1
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu softvfp
 570              	_Z41__static_initialization_and_destruction_0ii:
 571              		.fnstart
 572              	.LVL48:
 573              	.LFB458:
 574              		.file 4 "User/myMain.cpp"
   1:User/myMain.cpp **** /*
   2:User/myMain.cpp ****  * myMain.cpp
   3:User/myMain.cpp ****  *
ARM GAS  /tmp/ccr3Zb65.s 			page 19


   4:User/myMain.cpp ****  *  Created on: Aug 19, 2021
   5:User/myMain.cpp ****  *      Author: Xiaojiao Chen
   6:User/myMain.cpp ****  */
   7:User/myMain.cpp **** 
   8:User/myMain.cpp **** #include "myMain.h"
   9:User/myMain.cpp **** #include "usart.h"
  10:User/myMain.cpp **** #include "messages.h"
  11:User/myMain.cpp **** #include "ros.h"
  12:User/myMain.cpp **** #include "CANbus.h"
  13:User/myMain.cpp **** #include "LED_Driver.h"
  14:User/myMain.cpp **** #include "ads1115.h"
  15:User/myMain.cpp **** #include "HydroUnderwaterManipulator.h"
  16:User/myMain.cpp **** #define SEGNUM 3
  17:User/myMain.cpp **** #define ACTNUM 4
  18:User/myMain.cpp **** 
  19:User/myMain.cpp **** uint8_t actuatorInitPorts[SEGNUM][ACTNUM][2] =
  20:User/myMain.cpp ****     {
  21:User/myMain.cpp ****         {{0, 1}, {2, 3}, {4, 5}, {6, 7}},
  22:User/myMain.cpp ****         {{8, 9}, {10, 11}, {12, 13}, {14, 15}},
  23:User/myMain.cpp ****         {{16, 17}, {18, 19}, {20, 21}, {22, 23}},
  24:User/myMain.cpp **** }; //{In, Out}
  25:User/myMain.cpp **** 
  26:User/myMain.cpp **** uint8_t gripperInitPort[2] = {29, 45}; //{In, Out}
  27:User/myMain.cpp **** 
  28:User/myMain.cpp **** uint8_t pSourcePumpInitPort = 41;   //in pump
  29:User/myMain.cpp **** uint8_t pSourceValveInitPort = 43;  //in valve
  30:User/myMain.cpp **** uint8_t pSourceSensorInitPort = 44; //in sensor
  31:User/myMain.cpp **** 
  32:User/myMain.cpp **** uint8_t pSinkPumpInitPort = 25;  //out pump
  33:User/myMain.cpp **** uint8_t pSinkValveInitPort = 27; //out valve
  34:User/myMain.cpp **** 
  35:User/myMain.cpp **** uint8_t pSinkSensorInitPort = 44; //out sensor
  36:User/myMain.cpp **** 
  37:User/myMain.cpp **** /*********** transfer in KPa, otherwise all in Pa ******************/
  38:User/myMain.cpp **** 
  39:User/myMain.cpp **** HydroUnderwaterManipulator uwManipulator;
  40:User/myMain.cpp **** 
  41:User/myMain.cpp **** void setupLoopFrequency(int16_t fre);
  42:User/myMain.cpp **** void setupLoop2Frequency(int16_t fre);
  43:User/myMain.cpp **** 
  44:User/myMain.cpp **** void setup()
  45:User/myMain.cpp **** {
  46:User/myMain.cpp **** 
  47:User/myMain.cpp ****   /*peripheral initiation*/
  48:User/myMain.cpp ****   LED_Driver_Setup();
  49:User/myMain.cpp ****   ADS1115_Setup();
  50:User/myMain.cpp ****   canConfig();
  51:User/myMain.cpp **** 
  52:User/myMain.cpp ****   /*setup loop() frequency to be 100Hz*/
  53:User/myMain.cpp ****   setupLoopFrequency(100);
  54:User/myMain.cpp **** 
  55:User/myMain.cpp ****   /*ports mapping*/
  56:User/myMain.cpp ****   uwManipulator.setupActuatorPorts(actuatorInitPorts);
  57:User/myMain.cpp ****   uwManipulator.setupGripperPorts(gripperInitPort);
  58:User/myMain.cpp ****   uwManipulator.setupPsourcePorts(pSourcePumpInitPort, pSourceValveInitPort, pSourceSensorInitPort)
  59:User/myMain.cpp ****   uwManipulator.setupPsinkPorts(pSinkPumpInitPort, pSinkValveInitPort, pSinkSensorInitPort);
  60:User/myMain.cpp **** }
ARM GAS  /tmp/ccr3Zb65.s 			page 20


  61:User/myMain.cpp **** 
  62:User/myMain.cpp **** //100Hz default. change frequency by calling setupLoopFrequency(50);
  63:User/myMain.cpp **** void loop()
  64:User/myMain.cpp **** {
  65:User/myMain.cpp ****   //Get pressrue data. currently only pSource and pSink
  66:User/myMain.cpp ****   uwManipulator.pSource.readPressure();
  67:User/myMain.cpp ****   uwManipulator.pSink.readPressure();
  68:User/myMain.cpp **** 
  69:User/myMain.cpp ****   uwManipulator.control();
  70:User/myMain.cpp **** 
  71:User/myMain.cpp ****   uwManipulator.encodeStatus();
  72:User/myMain.cpp **** 
  73:User/myMain.cpp ****   rosserialNode.publish(&(uwManipulator.manipulatorStatus));
  74:User/myMain.cpp ****   
  75:User/myMain.cpp ****   rosserialNode.spinOnce();
  76:User/myMain.cpp **** }
  77:User/myMain.cpp **** 
  78:User/myMain.cpp **** //200Hz loop2 reserved
  79:User/myMain.cpp **** void loop2()
  80:User/myMain.cpp **** {
  81:User/myMain.cpp **** }
  82:User/myMain.cpp **** 
  83:User/myMain.cpp **** /**
  84:User/myMain.cpp ****  * @brief callback of subscriber function to the command topic
  85:User/myMain.cpp ****  * 
  86:User/myMain.cpp ****  * @param cmd_msg 
  87:User/myMain.cpp ****  */
  88:User/myMain.cpp **** void sub1Callback(const hydrosoft_ros::Command_Arm &cmd_msg)
  89:User/myMain.cpp **** {
  90:User/myMain.cpp ****   //store command data to local variable
  91:User/myMain.cpp ****   uwManipulator.hostCommand.controlModeCommand = cmd_msg.controlModeCommand;
  92:User/myMain.cpp ****   for(int i=0;i < (int)cmd_msg.actuatorCommand_length;i++){
  93:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
  94:User/myMain.cpp ****   }
  95:User/myMain.cpp ****   uwManipulator.hostCommand.gripperCommand = cmd_msg.gripperCommand;
  96:User/myMain.cpp ****   uwManipulator.hostCommand.pSourceCommand = cmd_msg.pSourceCommand;
  97:User/myMain.cpp ****   uwManipulator.hostCommand.pSinkCommand = cmd_msg.pSinkCommand;
  98:User/myMain.cpp **** }
  99:User/myMain.cpp **** 
 100:User/myMain.cpp **** 
 101:User/myMain.cpp **** 
 102:User/myMain.cpp **** 
 103:User/myMain.cpp **** void setupLoopFrequency(int16_t fre)
 104:User/myMain.cpp **** {
 105:User/myMain.cpp ****   extern int32_t globalSensorTaskPeriod;
 106:User/myMain.cpp ****   globalSensorTaskPeriod = (int)(1000 / fre);
 107:User/myMain.cpp ****   if (globalSensorTaskPeriod < 1)
 108:User/myMain.cpp ****     globalSensorTaskPeriod = 1;
 109:User/myMain.cpp **** }
 575              		.loc 4 109 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 4 109 1 is_stmt 0 view .LVU171
 580 0000 0128     		cmp	r0, #1
 581 0002 00D0     		beq	.L32
 582 0004 7047     		bx	lr
ARM GAS  /tmp/ccr3Zb65.s 			page 21


 583              	.L32:
 584              		.loc 4 109 1 discriminator 1 view .LVU172
 585 0006 08B5     		push	{r3, lr}
 586              	.LCFI1:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
 590              		.loc 4 109 1 discriminator 1 view .LVU173
 591 0008 4FF6FF73 		movw	r3, #65535
 592 000c 9942     		cmp	r1, r3
 593 000e 00D0     		beq	.L33
 594              	.LVL49:
 595              	.L26:
 596              		.loc 4 109 1 view .LVU174
 597 0010 08BD     		pop	{r3, pc}
 598              	.LVL50:
 599              	.L33:
  39:User/myMain.cpp **** 
 600              		.loc 4 39 28 view .LVU175
 601 0012 0248     		ldr	r0, .L34
 602              	.LVL51:
  39:User/myMain.cpp **** 
 603              		.loc 4 39 28 view .LVU176
 604 0014 FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulatorC1Ev
 605              	.LVL52:
 606              		.loc 4 109 1 view .LVU177
 607 0018 FAE7     		b	.L26
 608              	.L35:
 609 001a 00BF     		.align	2
 610              	.L34:
 611 001c 00000000 		.word	.LANCHOR0
 612              		.cfi_endproc
 613              	.LFE458:
 614              		.cantunwind
 615              		.fnend
 617              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 618              		.align	1
 619              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu softvfp
 625              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 626              		.fnstart
 627              	.LVL53:
 628              	.LFB326:
  77:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 629              		.loc 2 77 17 is_stmt 1 view -0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
  77:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 633              		.loc 2 77 17 is_stmt 0 view .LVU179
 634 0000 30B5     		push	{r4, r5, lr}
 635              	.LCFI2:
 636              		.cfi_def_cfa_offset 12
 637              		.cfi_offset 4, -12
ARM GAS  /tmp/ccr3Zb65.s 			page 22


 638              		.cfi_offset 5, -8
 639              		.cfi_offset 14, -4
  79:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 640              		.loc 2 79 7 is_stmt 1 view .LVU180
 641              	.LVL54:
  80:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 642              		.loc 2 80 7 view .LVU181
  80:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 643              		.loc 2 80 26 is_stmt 0 view .LVU182
 644 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  80:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 645              		.loc 2 80 22 view .LVU183
 646 0004 8380     		strh	r3, [r0, #4]	@ movhi
  81:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 647              		.loc 2 81 7 is_stmt 1 view .LVU184
  81:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 648              		.loc 2 81 38 is_stmt 0 view .LVU185
 649 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  81:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 650              		.loc 2 81 22 view .LVU186
 651 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 652 000c 8380     		strh	r3, [r0, #4]	@ movhi
  82:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
 653              		.loc 2 82 7 is_stmt 1 view .LVU187
 654              	.LVL55:
  83:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_topic_name, (inbuffer + offset));
 655              		.loc 2 83 7 view .LVU188
  84:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 656              		.loc 2 84 7 view .LVU189
  84:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 657              		.loc 2 84 15 is_stmt 0 view .LVU190
 658 000e 01F1020C 		add	ip, r1, #2
 659              	.LVL56:
 660              	.LBB80:
 661              	.LBI80:
 192:User/Inc/rosserialInc/ros/msg.h ****   }
 193:User/Inc/rosserialInc/ros/msg.h **** 
 194:User/Inc/rosserialInc/ros/msg.h ****   // Copy data from a byte array into variable
 195:User/Inc/rosserialInc/ros/msg.h ****   template<typename V, typename A>
 196:User/Inc/rosserialInc/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 662              		.loc 3 196 15 is_stmt 1 view .LVU191
 663              	.LBB81:
 197:User/Inc/rosserialInc/ros/msg.h ****   {
 198:User/Inc/rosserialInc/ros/msg.h ****     var = 0;
 664              		.loc 3 198 9 is_stmt 0 view .LVU192
 665 0012 0022     		movs	r2, #0
 666              	.LBB82:
 199:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 667              		.loc 3 199 17 view .LVU193
 668 0014 1346     		mov	r3, r2
 669              	.LVL57:
 670              	.L38:
 671              		.loc 3 199 26 is_stmt 1 view .LVU194
 672 0016 032B     		cmp	r3, #3
 673 0018 06D8     		bhi	.L48
 200:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 674              		.loc 3 200 18 is_stmt 0 view .LVU195
ARM GAS  /tmp/ccr3Zb65.s 			page 23


 675 001a 1CF80340 		ldrb	r4, [ip, r3]	@ zero_extendqisi2
 676              		.loc 3 200 28 view .LVU196
 677 001e DD00     		lsls	r5, r3, #3
 678              		.loc 3 200 22 view .LVU197
 679 0020 AC40     		lsls	r4, r4, r5
 680              		.loc 3 200 11 view .LVU198
 681 0022 2243     		orrs	r2, r2, r4
 682              	.LVL58:
 199:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 683              		.loc 3 199 5 is_stmt 1 view .LVU199
 684 0024 0133     		adds	r3, r3, #1
 685              	.LVL59:
 199:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 686              		.loc 3 199 5 is_stmt 0 view .LVU200
 687 0026 F6E7     		b	.L38
 688              	.L48:
 199:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 689              		.loc 3 199 5 view .LVU201
 690              	.LBE82:
 691              	.LBE81:
 692              	.LBE80:
 693              	.LBB83:
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 694              		.loc 2 86 24 view .LVU202
 695 0028 0623     		movs	r3, #6
 696              	.LVL60:
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 697              		.loc 2 86 24 view .LVU203
 698 002a 05E0     		b	.L37
 699              	.LVL61:
 700              	.L50:
  87:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 701              		.loc 2 87 11 is_stmt 1 discriminator 2 view .LVU204
  87:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 702              		.loc 2 87 23 is_stmt 0 discriminator 2 view .LVU205
 703 002c 5C1E     		subs	r4, r3, #1
  87:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 704              		.loc 2 87 35 discriminator 2 view .LVU206
 705 002e 11F803C0 		ldrb	ip, [r1, r3]	@ zero_extendqisi2
  87:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 706              		.loc 2 87 24 discriminator 2 view .LVU207
 707 0032 01F804C0 		strb	ip, [r1, r4]
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 708              		.loc 2 86 7 is_stmt 1 discriminator 2 view .LVU208
 709 0036 0133     		adds	r3, r3, #1
 710              	.LVL62:
 711              	.L37:
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 712              		.loc 2 86 36 discriminator 3 view .LVU209
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 713              		.loc 2 86 44 is_stmt 0 discriminator 3 view .LVU210
 714 0038 02F1060C 		add	ip, r2, #6
  86:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 715              		.loc 2 86 36 discriminator 3 view .LVU211
 716 003c 9C45     		cmp	ip, r3
 717 003e F5D8     		bhi	.L50
 718              	.LBE83:
ARM GAS  /tmp/ccr3Zb65.s 			page 24


  89:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 719              		.loc 2 89 7 is_stmt 1 view .LVU212
  89:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 720              		.loc 2 89 42 is_stmt 0 view .LVU213
 721 0040 541D     		adds	r4, r2, #5
  89:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 722              		.loc 2 89 43 view .LVU214
 723 0042 0023     		movs	r3, #0
 724              	.LVL63:
  89:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 725              		.loc 2 89 43 view .LVU215
 726 0044 0B55     		strb	r3, [r1, r4]
  90:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 727              		.loc 2 90 7 is_stmt 1 view .LVU216
  90:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 728              		.loc 2 90 52 is_stmt 0 view .LVU217
 729 0046 4C1D     		adds	r4, r1, #5
  90:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 730              		.loc 2 90 24 view .LVU218
 731 0048 8460     		str	r4, [r0, #8]
  91:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
 732              		.loc 2 91 7 is_stmt 1 view .LVU219
  91:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
 733              		.loc 2 91 14 is_stmt 0 view .LVU220
 734 004a 02F1060C 		add	ip, r2, #6
 735              	.LVL64:
  92:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_message_type, (inbuffer + offset));
 736              		.loc 2 92 7 is_stmt 1 view .LVU221
  93:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 737              		.loc 2 93 7 view .LVU222
  93:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 738              		.loc 2 93 15 is_stmt 0 view .LVU223
 739 004e 8C44     		add	ip, ip, r1
 740              	.LVL65:
 741              	.LBB84:
 742              	.LBI84:
 196:User/Inc/rosserialInc/ros/msg.h ****   {
 743              		.loc 3 196 15 is_stmt 1 view .LVU224
 744              	.LBB85:
 198:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 745              		.loc 3 198 9 is_stmt 0 view .LVU225
 746 0050 9E46     		mov	lr, r3
 747              	.LVL66:
 748              	.L41:
 749              	.LBB86:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 750              		.loc 3 199 26 is_stmt 1 view .LVU226
 751 0052 032B     		cmp	r3, #3
 752 0054 07D8     		bhi	.L40
 753              		.loc 3 200 18 is_stmt 0 view .LVU227
 754 0056 1CF80340 		ldrb	r4, [ip, r3]	@ zero_extendqisi2
 755              		.loc 3 200 28 view .LVU228
 756 005a DD00     		lsls	r5, r3, #3
 757              		.loc 3 200 22 view .LVU229
 758 005c AC40     		lsls	r4, r4, r5
 759              		.loc 3 200 11 view .LVU230
 760 005e 4EEA040E 		orr	lr, lr, r4
ARM GAS  /tmp/ccr3Zb65.s 			page 25


 761              	.LVL67:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 762              		.loc 3 199 5 is_stmt 1 view .LVU231
 763 0062 0133     		adds	r3, r3, #1
 764              	.LVL68:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 765              		.loc 3 199 5 is_stmt 0 view .LVU232
 766 0064 F5E7     		b	.L41
 767              	.L40:
 768              	.LVL69:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 769              		.loc 3 199 5 view .LVU233
 770              	.LBE86:
 771              	.LBE85:
 772              	.LBE84:
  94:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 773              		.loc 2 94 7 is_stmt 1 view .LVU234
 774 0066 02F10A05 		add	r5, r2, #10
 775              	.LVL70:
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 776              		.loc 2 95 7 view .LVU235
 777              	.LBB87:
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 778              		.loc 2 95 24 is_stmt 0 view .LVU236
 779 006a 2B46     		mov	r3, r5
 780 006c 05E0     		b	.L43
 781              	.LVL71:
 782              	.L51:
  96:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 783              		.loc 2 96 11 is_stmt 1 discriminator 2 view .LVU237
  96:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 784              		.loc 2 96 23 is_stmt 0 discriminator 2 view .LVU238
 785 006e 03F1FF3C 		add	ip, r3, #-1
  96:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 786              		.loc 2 96 35 discriminator 2 view .LVU239
 787 0072 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
  96:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 788              		.loc 2 96 24 discriminator 2 view .LVU240
 789 0074 01F80C40 		strb	r4, [r1, ip]
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 790              		.loc 2 95 7 is_stmt 1 discriminator 2 view .LVU241
 791 0078 0133     		adds	r3, r3, #1
 792              	.LVL72:
 793              	.L43:
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 794              		.loc 2 95 36 discriminator 3 view .LVU242
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 795              		.loc 2 95 44 is_stmt 0 discriminator 3 view .LVU243
 796 007a 05EB0E0C 		add	ip, r5, lr
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 797              		.loc 2 95 36 discriminator 3 view .LVU244
 798 007e 9C45     		cmp	ip, r3
 799 0080 F5D8     		bhi	.L51
  95:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 800              		.loc 2 95 36 discriminator 3 view .LVU245
 801              	.LBE87:
  98:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
ARM GAS  /tmp/ccr3Zb65.s 			page 26


 802              		.loc 2 98 7 is_stmt 1 view .LVU246
  98:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 803              		.loc 2 98 44 is_stmt 0 view .LVU247
 804 0082 0CF1FF3C 		add	ip, ip, #-1
  98:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 805              		.loc 2 98 45 view .LVU248
 806 0086 0023     		movs	r3, #0
 807              	.LVL73:
  98:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 808              		.loc 2 98 45 view .LVU249
 809 0088 01F80C30 		strb	r3, [r1, ip]
  99:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 810              		.loc 2 99 7 is_stmt 1 view .LVU250
  99:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 811              		.loc 2 99 54 is_stmt 0 view .LVU251
 812 008c 0932     		adds	r2, r2, #9
 813              	.LVL74:
  99:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 814              		.loc 2 99 54 view .LVU252
 815 008e 0A44     		add	r2, r2, r1
  99:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 816              		.loc 2 99 26 view .LVU253
 817 0090 C260     		str	r2, [r0, #12]
 100:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
 818              		.loc 2 100 7 is_stmt 1 view .LVU254
 100:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
 819              		.loc 2 100 14 is_stmt 0 view .LVU255
 820 0092 7544     		add	r5, r5, lr
 821              	.LVL75:
 101:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       arrToVar(length_md5sum, (inbuffer + offset));
 822              		.loc 2 101 7 is_stmt 1 view .LVU256
 102:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 823              		.loc 2 102 7 view .LVU257
 102:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += 4;
 824              		.loc 2 102 15 is_stmt 0 view .LVU258
 825 0094 01EB050E 		add	lr, r1, r5
 826              	.LVL76:
 827              	.LBB88:
 828              	.LBI88:
 196:User/Inc/rosserialInc/ros/msg.h ****   {
 829              		.loc 3 196 15 is_stmt 1 view .LVU259
 830              	.LBB89:
 198:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 831              		.loc 3 198 9 is_stmt 0 view .LVU260
 832 0098 1C46     		mov	r4, r3
 833              	.LVL77:
 834              	.L45:
 835              	.LBB90:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 836              		.loc 3 199 26 is_stmt 1 view .LVU261
 837 009a 032B     		cmp	r3, #3
 838 009c 08D8     		bhi	.L44
 839              		.loc 3 200 18 is_stmt 0 view .LVU262
 840 009e 1EF80320 		ldrb	r2, [lr, r3]	@ zero_extendqisi2
 841              		.loc 3 200 28 view .LVU263
 842 00a2 4FEAC30C 		lsl	ip, r3, #3
 843              		.loc 3 200 22 view .LVU264
ARM GAS  /tmp/ccr3Zb65.s 			page 27


 844 00a6 02FA0CF2 		lsl	r2, r2, ip
 845              		.loc 3 200 11 view .LVU265
 846 00aa 1443     		orrs	r4, r4, r2
 847              	.LVL78:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 848              		.loc 3 199 5 is_stmt 1 view .LVU266
 849 00ac 0133     		adds	r3, r3, #1
 850              	.LVL79:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 851              		.loc 3 199 5 is_stmt 0 view .LVU267
 852 00ae F4E7     		b	.L45
 853              	.L44:
 854              	.LVL80:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 855              		.loc 3 199 5 view .LVU268
 856              	.LBE90:
 857              	.LBE89:
 858              	.LBE88:
 103:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 859              		.loc 2 103 7 is_stmt 1 view .LVU269
 103:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 860              		.loc 2 103 14 is_stmt 0 view .LVU270
 861 00b0 05F1040C 		add	ip, r5, #4
 862              	.LVL81:
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 863              		.loc 2 104 7 is_stmt 1 view .LVU271
 864              	.LBB91:
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 865              		.loc 2 104 24 is_stmt 0 view .LVU272
 866 00b4 6346     		mov	r3, ip
 867 00b6 05E0     		b	.L47
 868              	.LVL82:
 869              	.L52:
 105:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 870              		.loc 2 105 11 is_stmt 1 discriminator 2 view .LVU273
 105:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 871              		.loc 2 105 23 is_stmt 0 discriminator 2 view .LVU274
 872 00b8 5A1E     		subs	r2, r3, #1
 105:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 873              		.loc 2 105 35 discriminator 2 view .LVU275
 874 00ba 11F803E0 		ldrb	lr, [r1, r3]	@ zero_extendqisi2
 105:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       }
 875              		.loc 2 105 24 discriminator 2 view .LVU276
 876 00be 01F802E0 		strb	lr, [r1, r2]
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 877              		.loc 2 104 7 is_stmt 1 discriminator 2 view .LVU277
 878 00c2 0133     		adds	r3, r3, #1
 879              	.LVL83:
 880              	.L47:
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 881              		.loc 2 104 36 discriminator 3 view .LVU278
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 882              		.loc 2 104 44 is_stmt 0 discriminator 3 view .LVU279
 883 00c4 0CEB0402 		add	r2, ip, r4
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 884              		.loc 2 104 36 discriminator 3 view .LVU280
 885 00c8 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccr3Zb65.s 			page 28


 886 00ca F5D8     		bhi	.L52
 104:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 887              		.loc 2 104 36 discriminator 3 view .LVU281
 888              	.LBE91:
 107:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 889              		.loc 2 107 7 is_stmt 1 view .LVU282
 107:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 890              		.loc 2 107 38 is_stmt 0 view .LVU283
 891 00cc 013A     		subs	r2, r2, #1
 107:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 892              		.loc 2 107 39 view .LVU284
 893 00ce 0023     		movs	r3, #0
 894              	.LVL84:
 107:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 895              		.loc 2 107 39 view .LVU285
 896 00d0 8B54     		strb	r3, [r1, r2]
 108:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 897              		.loc 2 108 7 is_stmt 1 view .LVU286
 108:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 898              		.loc 2 108 48 is_stmt 0 view .LVU287
 899 00d2 0335     		adds	r5, r5, #3
 900 00d4 0D44     		add	r5, r5, r1
 108:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 901              		.loc 2 108 20 view .LVU288
 902 00d6 0561     		str	r5, [r0, #16]
 109:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
 903              		.loc 2 109 7 is_stmt 1 view .LVU289
 109:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       union {
 904              		.loc 2 109 14 is_stmt 0 view .LVU290
 905 00d8 A444     		add	ip, ip, r4
 906              	.LVL85:
 110:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****         int32_t real;
 907              		.loc 2 110 7 is_stmt 1 view .LVU291
 114:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 908              		.loc 2 114 7 view .LVU292
 115:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 909              		.loc 2 115 7 view .LVU293
 115:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 910              		.loc 2 115 42 is_stmt 0 view .LVU294
 911 00da 11F80C30 		ldrb	r3, [r1, ip]	@ zero_extendqisi2
 116:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 912              		.loc 2 116 7 is_stmt 1 view .LVU295
 116:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 913              		.loc 2 116 62 is_stmt 0 view .LVU296
 914 00de 0CF10102 		add	r2, ip, #1
 116:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 915              		.loc 2 116 42 view .LVU297
 916 00e2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 116:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 917              		.loc 2 116 26 view .LVU298
 918 00e4 43EA0223 		orr	r3, r3, r2, lsl #8
 117:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 919              		.loc 2 117 7 is_stmt 1 view .LVU299
 117:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 920              		.loc 2 117 62 is_stmt 0 view .LVU300
 921 00e8 0CF10202 		add	r2, ip, #2
 117:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
ARM GAS  /tmp/ccr3Zb65.s 			page 29


 922              		.loc 2 117 42 view .LVU301
 923 00ec 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 117:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 924              		.loc 2 117 26 view .LVU302
 925 00ee 43EA0243 		orr	r3, r3, r2, lsl #16
 118:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 926              		.loc 2 118 7 is_stmt 1 view .LVU303
 118:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 927              		.loc 2 118 62 is_stmt 0 view .LVU304
 928 00f2 0CF10302 		add	r2, ip, #3
 118:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 929              		.loc 2 118 42 view .LVU305
 930 00f6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 118:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 931              		.loc 2 118 26 view .LVU306
 932 00f8 43EA0263 		orr	r3, r3, r2, lsl #24
 119:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 933              		.loc 2 119 7 is_stmt 1 view .LVU307
 119:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 934              		.loc 2 119 25 is_stmt 0 view .LVU308
 935 00fc 4361     		str	r3, [r0, #20]
 120:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****      return offset;
 936              		.loc 2 120 7 is_stmt 1 view .LVU309
 937              	.LVL86:
 121:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     }
 938              		.loc 2 121 6 view .LVU310
 122:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 939              		.loc 2 122 5 is_stmt 0 view .LVU311
 940 00fe 0CF10400 		add	r0, ip, #4
 941              	.LVL87:
 122:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h **** 
 942              		.loc 2 122 5 view .LVU312
 943 0102 30BD     		pop	{r4, r5, pc}
 944              		.cfi_endproc
 945              	.LFE326:
 946              		.cantunwind
 947              		.fnend
 949              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 950              		.align	1
 951              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu softvfp
 957              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 958              		.fnstart
 959              	.LVL88:
 960              	.LFB347:
 961              		.file 5 "User/Inc/rosserialInc/rosserial_msgs/RequestParam.h"
   1:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
   8:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
ARM GAS  /tmp/ccr3Zb65.s 			page 30


   9:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** {
  10:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  11:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  13:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****   {
  15:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     public:
  16:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       typedef const char* _name_type;
  17:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _name_type name;
  18:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  19:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  20:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       name("")
  21:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
  22:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
  23:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  24:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  25:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
  26:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       int offset = 0;
  27:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  28:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_name);
  29:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
  30:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  31:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += length_name;
  32:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       return offset;
  33:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
  34:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  35:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
  36:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
  37:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       int offset = 0;
  38:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  39:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       arrToVar(length_name, (inbuffer + offset));
  40:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
  41:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  42:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  43:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
  44:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  45:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  46:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += length_name;
  47:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****      return offset;
  48:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
  49:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  50:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual const char * getType() override { return REQUESTPARAM; };
  51:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual const char * getMD5() override { return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  52:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  53:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****   };
  54:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  55:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  56:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****   {
  57:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     public:
  58:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t ints_length;
  59:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       typedef int32_t _ints_type;
  60:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _ints_type st_ints;
  61:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _ints_type * ints;
  62:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t floats_length;
  63:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       typedef float _floats_type;
  64:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _floats_type st_floats;
  65:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _floats_type * floats;
ARM GAS  /tmp/ccr3Zb65.s 			page 31


  66:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t strings_length;
  67:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       typedef char* _strings_type;
  68:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _strings_type st_strings;
  69:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       _strings_type * strings;
  70:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  71:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  72:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length(0), st_ints(), ints(nullptr),
  73:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_length(0), st_floats(), floats(nullptr),
  74:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       strings_length(0), st_strings(), strings(nullptr)
  75:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
  76:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
  77:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
  78:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  79:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
  80:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       int offset = 0;
  81:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->ints_length >> (8 * 0)) & 0xFF;
  82:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
  83:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
  84:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
  85:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
  86:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
  87:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
  88:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         int32_t real;
  89:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         uint32_t base;
  90:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       } u_intsi;
  91:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  92:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  93:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  94:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  95:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  96:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  97:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
  98:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->floats_length >> (8 * 0)) & 0xFF;
  99:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 100:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 101:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 102:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 103:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 104:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 105:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         float real;
 106:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         uint32_t base;
 107:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 108:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 109:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 110:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 111:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 112:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 113:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 114:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 115:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->strings_length >> (8 * 0)) & 0xFF;
 116:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 117:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 118:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 119:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 120:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 121:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 122:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_stringsi);
ARM GAS  /tmp/ccr3Zb65.s 			page 32


 123:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
 124:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 125:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 126:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 127:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       return offset;
 128:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
 129:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h **** 
 130:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
 962              		.loc 5 130 17 is_stmt 1 view -0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		.loc 5 130 17 is_stmt 0 view .LVU314
 967 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 968              	.LCFI3:
 969              		.cfi_def_cfa_offset 24
 970              		.cfi_offset 3, -24
 971              		.cfi_offset 4, -20
 972              		.cfi_offset 5, -16
 973              		.cfi_offset 6, -12
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 0546     		mov	r5, r0
 977 0004 0C46     		mov	r4, r1
 131:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     {
 132:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       int offset = 0;
 978              		.loc 5 132 7 is_stmt 1 view .LVU315
 979              	.LVL89:
 133:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t ints_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 980              		.loc 5 133 7 view .LVU316
 981              		.loc 5 133 44 is_stmt 0 view .LVU317
 982 0006 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 983              	.LVL90:
 134:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 984              		.loc 5 134 7 is_stmt 1 view .LVU318
 985              		.loc 5 134 36 is_stmt 0 view .LVU319
 986 0008 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 987              		.loc 5 134 20 view .LVU320
 988 000a 46EA0326 		orr	r6, r6, r3, lsl #8
 989              	.LVL91:
 135:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 990              		.loc 5 135 7 is_stmt 1 view .LVU321
 991              		.loc 5 135 36 is_stmt 0 view .LVU322
 992 000e 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 993              		.loc 5 135 20 view .LVU323
 994 0010 46EA0346 		orr	r6, r6, r3, lsl #16
 995              	.LVL92:
 136:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 996              		.loc 5 136 7 is_stmt 1 view .LVU324
 997              		.loc 5 136 36 is_stmt 0 view .LVU325
 998 0014 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 999              		.loc 5 136 20 view .LVU326
 1000 0016 46EA0366 		orr	r6, r6, r3, lsl #24
 1001              	.LVL93:
 137:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 1002              		.loc 5 137 7 is_stmt 1 view .LVU327
 138:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
ARM GAS  /tmp/ccr3Zb65.s 			page 33


 1003              		.loc 5 138 7 view .LVU328
 1004              		.loc 5 138 25 is_stmt 0 view .LVU329
 1005 001a 4368     		ldr	r3, [r0, #4]
 1006              		.loc 5 138 7 view .LVU330
 1007 001c B342     		cmp	r3, r6
 1008 001e 19D3     		bcc	.L68
 1009              	.LVL94:
 1010              	.L54:
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 140:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1011              		.loc 5 140 7 is_stmt 1 view .LVU331
 1012              		.loc 5 140 19 is_stmt 0 view .LVU332
 1013 0020 6E60     		str	r6, [r5, #4]
 141:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 1014              		.loc 5 141 7 is_stmt 1 view .LVU333
 1015              	.LVL95:
 1016              	.LBB102:
 1017              		.loc 5 141 21 is_stmt 0 view .LVU334
 1018 0022 0022     		movs	r2, #0
 1019              	.LBE102:
 137:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1020              		.loc 5 137 14 view .LVU335
 1021 0024 0426     		movs	r6, #4
 1022              	.LVL96:
 1023              	.L56:
 1024              	.LBB104:
 1025              		.loc 5 141 30 is_stmt 1 discriminator 3 view .LVU336
 1026              		.loc 5 141 32 is_stmt 0 discriminator 3 view .LVU337
 1027 0026 6B68     		ldr	r3, [r5, #4]
 1028              		.loc 5 141 30 discriminator 3 view .LVU338
 1029 0028 9342     		cmp	r3, r2
 1030 002a 19D9     		bls	.L55
 1031              	.LBB103:
 142:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1032              		.loc 5 142 7 is_stmt 1 discriminator 2 view .LVU339
 143:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         int32_t real;
 144:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         uint32_t base;
 145:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 146:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 1033              		.loc 5 146 7 discriminator 2 view .LVU340
 147:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 1034              		.loc 5 147 7 discriminator 2 view .LVU341
 1035              		.loc 5 147 38 is_stmt 0 discriminator 2 view .LVU342
 1036 002c A35D     		ldrb	r3, [r4, r6]	@ zero_extendqisi2
 148:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1037              		.loc 5 148 7 is_stmt 1 discriminator 2 view .LVU343
 1038              		.loc 5 148 58 is_stmt 0 discriminator 2 view .LVU344
 1039 002e 711C     		adds	r1, r6, #1
 1040              		.loc 5 148 38 discriminator 2 view .LVU345
 1041 0030 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1042              		.loc 5 148 22 discriminator 2 view .LVU346
 1043 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 149:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1044              		.loc 5 149 7 is_stmt 1 discriminator 2 view .LVU347
 1045              		.loc 5 149 58 is_stmt 0 discriminator 2 view .LVU348
 1046 0036 B11C     		adds	r1, r6, #2
 1047              		.loc 5 149 38 discriminator 2 view .LVU349
ARM GAS  /tmp/ccr3Zb65.s 			page 34


 1048 0038 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1049              		.loc 5 149 22 discriminator 2 view .LVU350
 1050 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 150:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1051              		.loc 5 150 7 is_stmt 1 discriminator 2 view .LVU351
 1052              		.loc 5 150 58 is_stmt 0 discriminator 2 view .LVU352
 1053 003e F11C     		adds	r1, r6, #3
 1054              		.loc 5 150 38 discriminator 2 view .LVU353
 1055 0040 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1056              		.loc 5 150 22 discriminator 2 view .LVU354
 1057 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 151:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1058              		.loc 5 151 7 is_stmt 1 discriminator 2 view .LVU355
 1059              		.loc 5 151 21 is_stmt 0 discriminator 2 view .LVU356
 1060 0046 AB60     		str	r3, [r5, #8]
 152:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1061              		.loc 5 152 7 is_stmt 1 discriminator 2 view .LVU357
 1062              		.loc 5 152 14 is_stmt 0 discriminator 2 view .LVU358
 1063 0048 0436     		adds	r6, r6, #4
 1064              	.LVL97:
 153:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1065              		.loc 5 153 9 is_stmt 1 discriminator 2 view .LVU359
 1066              		.loc 5 153 25 is_stmt 0 discriminator 2 view .LVU360
 1067 004a E968     		ldr	r1, [r5, #12]
 1068              		.loc 5 153 15 discriminator 2 view .LVU361
 1069 004c 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1070              	.LBE103:
 141:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1071              		.loc 5 141 7 is_stmt 1 discriminator 2 view .LVU362
 1072 0050 0132     		adds	r2, r2, #1
 1073              	.LVL98:
 141:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1074              		.loc 5 141 7 is_stmt 0 discriminator 2 view .LVU363
 1075 0052 E8E7     		b	.L56
 1076              	.LVL99:
 1077              	.L68:
 141:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1078              		.loc 5 141 7 discriminator 2 view .LVU364
 1079              	.LBE104:
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1080              		.loc 5 139 9 is_stmt 1 view .LVU365
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1081              		.loc 5 139 39 is_stmt 0 view .LVU366
 1082 0054 B100     		lsls	r1, r6, #2
 1083              	.LVL100:
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1084              		.loc 5 139 39 view .LVU367
 1085 0056 C068     		ldr	r0, [r0, #12]
 1086              	.LVL101:
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1087              		.loc 5 139 39 view .LVU368
 1088 0058 FFF7FEFF 		bl	realloc
 1089              	.LVL102:
 139:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1090              		.loc 5 139 20 view .LVU369
 1091 005c E860     		str	r0, [r5, #12]
 1092 005e DFE7     		b	.L54
ARM GAS  /tmp/ccr3Zb65.s 			page 35


 1093              	.LVL103:
 1094              	.L55:
 154:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 155:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t floats_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 1095              		.loc 5 155 7 is_stmt 1 view .LVU370
 1096              		.loc 5 155 46 is_stmt 0 view .LVU371
 1097 0060 A75D     		ldrb	r7, [r4, r6]	@ zero_extendqisi2
 1098              	.LVL104:
 156:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 1099              		.loc 5 156 7 is_stmt 1 view .LVU372
 1100              		.loc 5 156 58 is_stmt 0 view .LVU373
 1101 0062 731C     		adds	r3, r6, #1
 1102              		.loc 5 156 38 view .LVU374
 1103 0064 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1104              		.loc 5 156 22 view .LVU375
 1105 0066 47EA0327 		orr	r7, r7, r3, lsl #8
 1106              	.LVL105:
 157:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 1107              		.loc 5 157 7 is_stmt 1 view .LVU376
 1108              		.loc 5 157 58 is_stmt 0 view .LVU377
 1109 006a B31C     		adds	r3, r6, #2
 1110              		.loc 5 157 38 view .LVU378
 1111 006c E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1112              		.loc 5 157 22 view .LVU379
 1113 006e 47EA0347 		orr	r7, r7, r3, lsl #16
 1114              	.LVL106:
 158:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 1115              		.loc 5 158 7 is_stmt 1 view .LVU380
 1116              		.loc 5 158 58 is_stmt 0 view .LVU381
 1117 0072 F31C     		adds	r3, r6, #3
 1118              		.loc 5 158 38 view .LVU382
 1119 0074 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1120              		.loc 5 158 22 view .LVU383
 1121 0076 47EA0367 		orr	r7, r7, r3, lsl #24
 1122              	.LVL107:
 159:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 1123              		.loc 5 159 7 is_stmt 1 view .LVU384
 1124              		.loc 5 159 14 is_stmt 0 view .LVU385
 1125 007a 0436     		adds	r6, r6, #4
 1126              	.LVL108:
 160:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1127              		.loc 5 160 7 is_stmt 1 view .LVU386
 1128              		.loc 5 160 27 is_stmt 0 view .LVU387
 1129 007c 2B69     		ldr	r3, [r5, #16]
 1130              		.loc 5 160 7 view .LVU388
 1131 007e BB42     		cmp	r3, r7
 1132 0080 18D3     		bcc	.L69
 1133              	.LVL109:
 1134              	.L57:
 161:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 162:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1135              		.loc 5 162 7 is_stmt 1 view .LVU389
 1136              		.loc 5 162 21 is_stmt 0 view .LVU390
 1137 0082 2F61     		str	r7, [r5, #16]
 163:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 1138              		.loc 5 163 7 is_stmt 1 view .LVU391
 1139              	.LVL110:
ARM GAS  /tmp/ccr3Zb65.s 			page 36


 1140              	.LBB105:
 1141              		.loc 5 163 21 is_stmt 0 view .LVU392
 1142 0084 0022     		movs	r2, #0
 1143              	.LVL111:
 1144              	.L59:
 1145              		.loc 5 163 30 is_stmt 1 discriminator 3 view .LVU393
 1146              		.loc 5 163 32 is_stmt 0 discriminator 3 view .LVU394
 1147 0086 2B69     		ldr	r3, [r5, #16]
 1148              		.loc 5 163 30 discriminator 3 view .LVU395
 1149 0088 9342     		cmp	r3, r2
 1150 008a 19D9     		bls	.L58
 1151              	.LBB106:
 164:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1152              		.loc 5 164 7 is_stmt 1 discriminator 2 view .LVU396
 165:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         float real;
 166:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         uint32_t base;
 167:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 168:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 1153              		.loc 5 168 7 discriminator 2 view .LVU397
 169:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 1154              		.loc 5 169 7 discriminator 2 view .LVU398
 1155              		.loc 5 169 40 is_stmt 0 discriminator 2 view .LVU399
 1156 008c A35D     		ldrb	r3, [r4, r6]	@ zero_extendqisi2
 170:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1157              		.loc 5 170 7 is_stmt 1 discriminator 2 view .LVU400
 1158              		.loc 5 170 60 is_stmt 0 discriminator 2 view .LVU401
 1159 008e 711C     		adds	r1, r6, #1
 1160              		.loc 5 170 40 discriminator 2 view .LVU402
 1161 0090 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1162              		.loc 5 170 24 discriminator 2 view .LVU403
 1163 0092 43EA0123 		orr	r3, r3, r1, lsl #8
 171:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1164              		.loc 5 171 7 is_stmt 1 discriminator 2 view .LVU404
 1165              		.loc 5 171 60 is_stmt 0 discriminator 2 view .LVU405
 1166 0096 B11C     		adds	r1, r6, #2
 1167              		.loc 5 171 40 discriminator 2 view .LVU406
 1168 0098 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1169              		.loc 5 171 24 discriminator 2 view .LVU407
 1170 009a 43EA0143 		orr	r3, r3, r1, lsl #16
 172:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1171              		.loc 5 172 7 is_stmt 1 discriminator 2 view .LVU408
 1172              		.loc 5 172 60 is_stmt 0 discriminator 2 view .LVU409
 1173 009e F11C     		adds	r1, r6, #3
 1174              		.loc 5 172 40 discriminator 2 view .LVU410
 1175 00a0 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 1176              		.loc 5 172 24 discriminator 2 view .LVU411
 1177 00a2 43EA0163 		orr	r3, r3, r1, lsl #24
 173:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1178              		.loc 5 173 7 is_stmt 1 discriminator 2 view .LVU412
 1179              		.loc 5 173 23 is_stmt 0 discriminator 2 view .LVU413
 1180 00a6 6B61     		str	r3, [r5, #20]	@ float
 174:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1181              		.loc 5 174 7 is_stmt 1 discriminator 2 view .LVU414
 1182              		.loc 5 174 14 is_stmt 0 discriminator 2 view .LVU415
 1183 00a8 0436     		adds	r6, r6, #4
 1184              	.LVL112:
 175:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
ARM GAS  /tmp/ccr3Zb65.s 			page 37


 1185              		.loc 5 175 9 is_stmt 1 discriminator 2 view .LVU416
 1186              		.loc 5 175 25 is_stmt 0 discriminator 2 view .LVU417
 1187 00aa A969     		ldr	r1, [r5, #24]
 1188              		.loc 5 175 15 discriminator 2 view .LVU418
 1189 00ac 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1190              	.LBE106:
 163:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1191              		.loc 5 163 7 is_stmt 1 discriminator 2 view .LVU419
 1192 00b0 0132     		adds	r2, r2, #1
 1193              	.LVL113:
 163:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1194              		.loc 5 163 7 is_stmt 0 discriminator 2 view .LVU420
 1195 00b2 E8E7     		b	.L59
 1196              	.LVL114:
 1197              	.L69:
 163:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       union {
 1198              		.loc 5 163 7 discriminator 2 view .LVU421
 1199              	.LBE105:
 161:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1200              		.loc 5 161 9 is_stmt 1 view .LVU422
 161:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1201              		.loc 5 161 39 is_stmt 0 view .LVU423
 1202 00b4 B900     		lsls	r1, r7, #2
 1203 00b6 A869     		ldr	r0, [r5, #24]
 1204 00b8 FFF7FEFF 		bl	realloc
 1205              	.LVL115:
 161:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1206              		.loc 5 161 22 view .LVU424
 1207 00bc A861     		str	r0, [r5, #24]
 1208 00be E0E7     		b	.L57
 1209              	.LVL116:
 1210              	.L58:
 176:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 177:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t strings_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 1211              		.loc 5 177 7 is_stmt 1 view .LVU425
 1212              		.loc 5 177 47 is_stmt 0 view .LVU426
 1213 00c0 A75D     		ldrb	r7, [r4, r6]	@ zero_extendqisi2
 1214              	.LVL117:
 178:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 1215              		.loc 5 178 7 is_stmt 1 view .LVU427
 1216              		.loc 5 178 59 is_stmt 0 view .LVU428
 1217 00c2 731C     		adds	r3, r6, #1
 1218              		.loc 5 178 39 view .LVU429
 1219 00c4 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1220              		.loc 5 178 23 view .LVU430
 1221 00c6 47EA0327 		orr	r7, r7, r3, lsl #8
 1222              	.LVL118:
 179:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 1223              		.loc 5 179 7 is_stmt 1 view .LVU431
 1224              		.loc 5 179 59 is_stmt 0 view .LVU432
 1225 00ca B31C     		adds	r3, r6, #2
 1226              		.loc 5 179 39 view .LVU433
 1227 00cc E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1228              		.loc 5 179 23 view .LVU434
 1229 00ce 47EA0347 		orr	r7, r7, r3, lsl #16
 1230              	.LVL119:
 180:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
ARM GAS  /tmp/ccr3Zb65.s 			page 38


 1231              		.loc 5 180 7 is_stmt 1 view .LVU435
 1232              		.loc 5 180 59 is_stmt 0 view .LVU436
 1233 00d2 F31C     		adds	r3, r6, #3
 1234              		.loc 5 180 39 view .LVU437
 1235 00d4 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1236              		.loc 5 180 23 view .LVU438
 1237 00d6 47EA0367 		orr	r7, r7, r3, lsl #24
 1238              	.LVL120:
 181:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 1239              		.loc 5 181 7 is_stmt 1 view .LVU439
 1240              		.loc 5 181 14 is_stmt 0 view .LVU440
 1241 00da 0436     		adds	r6, r6, #4
 1242              	.LVL121:
 182:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1243              		.loc 5 182 7 is_stmt 1 view .LVU441
 1244              		.loc 5 182 28 is_stmt 0 view .LVU442
 1245 00dc EB69     		ldr	r3, [r5, #28]
 1246              		.loc 5 182 7 view .LVU443
 1247 00de BB42     		cmp	r3, r7
 1248 00e0 03D3     		bcc	.L70
 1249              	.LVL122:
 1250              	.L60:
 183:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 184:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1251              		.loc 5 184 7 is_stmt 1 view .LVU444
 1252              		.loc 5 184 22 is_stmt 0 view .LVU445
 1253 00e2 EF61     		str	r7, [r5, #28]
 185:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 1254              		.loc 5 185 7 is_stmt 1 view .LVU446
 1255              	.LVL123:
 1256              	.LBB107:
 1257              		.loc 5 185 21 is_stmt 0 view .LVU447
 1258 00e4 4FF0000E 		mov	lr, #0
 1259 00e8 1DE0     		b	.L66
 1260              	.LVL124:
 1261              	.L70:
 1262              		.loc 5 185 21 view .LVU448
 1263              	.LBE107:
 183:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1264              		.loc 5 183 9 is_stmt 1 view .LVU449
 183:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1265              		.loc 5 183 40 is_stmt 0 view .LVU450
 1266 00ea B900     		lsls	r1, r7, #2
 1267 00ec 686A     		ldr	r0, [r5, #36]
 1268 00ee FFF7FEFF 		bl	realloc
 1269              	.LVL125:
 183:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1270              		.loc 5 183 23 view .LVU451
 1271 00f2 6862     		str	r0, [r5, #36]
 1272 00f4 F5E7     		b	.L60
 1273              	.LVL126:
 1274              	.L62:
 1275              	.LBB114:
 1276              	.LBB108:
 186:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 187:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       arrToVar(length_st_strings, (inbuffer + offset));
 188:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
ARM GAS  /tmp/ccr3Zb65.s 			page 39


 1277              		.loc 5 188 7 is_stmt 1 view .LVU452
 1278              		.loc 5 188 14 is_stmt 0 view .LVU453
 1279 00f6 0436     		adds	r6, r6, #4
 1280              	.LVL127:
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1281              		.loc 5 189 7 is_stmt 1 view .LVU454
 1282              	.LBB109:
 1283              		.loc 5 189 24 is_stmt 0 view .LVU455
 1284 00f8 3346     		mov	r3, r6
 1285 00fa 03E0     		b	.L65
 1286              	.LVL128:
 1287              	.L71:
 190:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1288              		.loc 5 190 11 is_stmt 1 discriminator 2 view .LVU456
 1289              		.loc 5 190 23 is_stmt 0 discriminator 2 view .LVU457
 1290 00fc 5A1E     		subs	r2, r3, #1
 1291              		.loc 5 190 35 discriminator 2 view .LVU458
 1292 00fe E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1293              		.loc 5 190 24 discriminator 2 view .LVU459
 1294 0100 A054     		strb	r0, [r4, r2]
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1295              		.loc 5 189 7 is_stmt 1 discriminator 2 view .LVU460
 1296 0102 0133     		adds	r3, r3, #1
 1297              	.LVL129:
 1298              	.L65:
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1299              		.loc 5 189 36 discriminator 3 view .LVU461
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1300              		.loc 5 189 44 is_stmt 0 discriminator 3 view .LVU462
 1301 0104 7218     		adds	r2, r6, r1
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1302              		.loc 5 189 36 discriminator 3 view .LVU463
 1303 0106 9A42     		cmp	r2, r3
 1304 0108 F8D8     		bhi	.L71
 189:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1305              		.loc 5 189 36 discriminator 3 view .LVU464
 1306              	.LBE109:
 191:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 192:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 1307              		.loc 5 192 7 is_stmt 1 discriminator 2 view .LVU465
 1308              		.loc 5 192 42 is_stmt 0 discriminator 2 view .LVU466
 1309 010a 013A     		subs	r2, r2, #1
 1310              		.loc 5 192 43 discriminator 2 view .LVU467
 1311 010c 0023     		movs	r3, #0
 1312              	.LVL130:
 1313              		.loc 5 192 43 discriminator 2 view .LVU468
 1314 010e A354     		strb	r3, [r4, r2]
 193:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1315              		.loc 5 193 7 is_stmt 1 discriminator 2 view .LVU469
 1316              		.loc 5 193 52 is_stmt 0 discriminator 2 view .LVU470
 1317 0110 0CF1030C 		add	ip, ip, #3
 1318 0114 04EB0C03 		add	r3, r4, ip
 1319              		.loc 5 193 24 discriminator 2 view .LVU471
 1320 0118 2B62     		str	r3, [r5, #32]
 194:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1321              		.loc 5 194 7 is_stmt 1 discriminator 2 view .LVU472
 1322              		.loc 5 194 14 is_stmt 0 discriminator 2 view .LVU473
ARM GAS  /tmp/ccr3Zb65.s 			page 40


 1323 011a 0E44     		add	r6, r6, r1
 1324              	.LVL131:
 195:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 1325              		.loc 5 195 9 is_stmt 1 discriminator 2 view .LVU474
 1326              		.loc 5 195 25 is_stmt 0 discriminator 2 view .LVU475
 1327 011c 6A6A     		ldr	r2, [r5, #36]
 1328              		.loc 5 195 15 discriminator 2 view .LVU476
 1329 011e 42F82E30 		str	r3, [r2, lr, lsl #2]	@ unaligned
 1330              	.LVL132:
 1331              		.loc 5 195 15 discriminator 2 view .LVU477
 1332              	.LBE108:
 185:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1333              		.loc 5 185 7 is_stmt 1 discriminator 2 view .LVU478
 1334 0122 0EF1010E 		add	lr, lr, #1
 1335              	.LVL133:
 1336              	.L66:
 185:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1337              		.loc 5 185 30 discriminator 1 view .LVU479
 185:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1338              		.loc 5 185 32 is_stmt 0 discriminator 1 view .LVU480
 1339 0126 EB69     		ldr	r3, [r5, #28]
 185:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1340              		.loc 5 185 30 discriminator 1 view .LVU481
 1341 0128 7345     		cmp	r3, lr
 1342 012a 0BD9     		bls	.L53
 1343              	.LBB113:
 186:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       arrToVar(length_st_strings, (inbuffer + offset));
 1344              		.loc 5 186 7 is_stmt 1 view .LVU482
 187:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
 1345              		.loc 5 187 7 view .LVU483
 187:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
 1346              		.loc 5 187 47 is_stmt 0 view .LVU484
 1347 012c B446     		mov	ip, r6
 187:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       offset += 4;
 1348              		.loc 5 187 15 view .LVU485
 1349 012e A719     		adds	r7, r4, r6
 1350              	.LVL134:
 1351              	.LBB110:
 1352              	.LBI110:
 196:User/Inc/rosserialInc/ros/msg.h ****   {
 1353              		.loc 3 196 15 is_stmt 1 view .LVU486
 1354              	.LBB111:
 198:User/Inc/rosserialInc/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 1355              		.loc 3 198 9 is_stmt 0 view .LVU487
 1356 0130 0021     		movs	r1, #0
 1357              	.LBB112:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1358              		.loc 3 199 17 view .LVU488
 1359 0132 0B46     		mov	r3, r1
 1360              	.LVL135:
 1361              	.L63:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1362              		.loc 3 199 26 is_stmt 1 view .LVU489
 1363 0134 032B     		cmp	r3, #3
 1364 0136 DED8     		bhi	.L62
 1365              		.loc 3 200 18 is_stmt 0 view .LVU490
 1366 0138 FA5C     		ldrb	r2, [r7, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccr3Zb65.s 			page 41


 1367              		.loc 3 200 28 view .LVU491
 1368 013a D800     		lsls	r0, r3, #3
 1369              		.loc 3 200 22 view .LVU492
 1370 013c 8240     		lsls	r2, r2, r0
 1371              		.loc 3 200 11 view .LVU493
 1372 013e 1143     		orrs	r1, r1, r2
 1373              	.LVL136:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1374              		.loc 3 199 5 is_stmt 1 view .LVU494
 1375 0140 0133     		adds	r3, r3, #1
 1376              	.LVL137:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1377              		.loc 3 199 5 is_stmt 0 view .LVU495
 1378 0142 F7E7     		b	.L63
 1379              	.LVL138:
 1380              	.L53:
 199:User/Inc/rosserialInc/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1381              		.loc 3 199 5 view .LVU496
 1382              	.LBE112:
 1383              	.LBE111:
 1384              	.LBE110:
 1385              	.LBE113:
 1386              	.LBE114:
 196:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****       }
 197:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****      return offset;
 198:User/Inc/rosserialInc/rosserial_msgs/RequestParam.h ****     }
 1387              		.loc 5 198 5 view .LVU497
 1388 0144 3046     		mov	r0, r6
 1389 0146 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1390              		.loc 5 198 5 view .LVU498
 1391              		.cfi_endproc
 1392              	.LFE347:
 1393              		.cantunwind
 1394              		.fnend
 1396              		.section	.text.loop2,"ax",%progbits
 1397              		.align	1
 1398              		.global	loop2
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1402              		.fpu softvfp
 1404              	loop2:
 1405              		.fnstart
 1406              	.LFB445:
  80:User/myMain.cpp **** }
 1407              		.loc 4 80 1 is_stmt 1 view -0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
  81:User/myMain.cpp **** 
 1412              		.loc 4 81 1 is_stmt 0 view .LVU500
 1413 0000 7047     		bx	lr
 1414              		.cfi_endproc
 1415              	.LFE445:
 1416              		.cantunwind
 1417              		.fnend
ARM GAS  /tmp/ccr3Zb65.s 			page 42


 1419              		.section	.text._Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE,"ax",%progbits
 1420              		.align	1
 1421              		.global	_Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu softvfp
 1427              	_Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE:
 1428              		.fnstart
 1429              	.LVL139:
 1430              	.LFB446:
  89:User/myMain.cpp ****   //store command data to local variable
 1431              		.loc 4 89 1 is_stmt 1 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              		@ link register save eliminated.
  91:User/myMain.cpp ****   for(int i=0;i < (int)cmd_msg.actuatorCommand_length;i++){
 1436              		.loc 4 91 3 view .LVU502
  91:User/myMain.cpp ****   for(int i=0;i < (int)cmd_msg.actuatorCommand_length;i++){
 1437              		.loc 4 91 58 is_stmt 0 view .LVU503
 1438 0000 B0F90420 		ldrsh	r2, [r0, #4]
  91:User/myMain.cpp ****   for(int i=0;i < (int)cmd_msg.actuatorCommand_length;i++){
 1439              		.loc 4 91 48 view .LVU504
 1440 0004 0F4B     		ldr	r3, .L77
 1441 0006 A3F8D823 		strh	r2, [r3, #984]	@ movhi
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
 1442              		.loc 4 92 3 is_stmt 1 view .LVU505
 1443              	.LVL140:
 1444              	.LBB115:
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
 1445              		.loc 4 92 11 is_stmt 0 view .LVU506
 1446 000a 0023     		movs	r3, #0
 1447 000c 08E0     		b	.L75
 1448              	.LVL141:
 1449              	.L76:
  93:User/myMain.cpp ****   }
 1450              		.loc 4 93 5 is_stmt 1 discriminator 2 view .LVU507
  93:User/myMain.cpp ****   }
 1451              		.loc 4 93 60 is_stmt 0 discriminator 2 view .LVU508
 1452 000e 0169     		ldr	r1, [r0, #16]
  93:User/myMain.cpp ****   }
 1453              		.loc 4 93 31 discriminator 2 view .LVU509
 1454 0010 0C4A     		ldr	r2, .L77
 1455 0012 D2F8E423 		ldr	r2, [r2, #996]
  93:User/myMain.cpp ****   }
 1456              		.loc 4 93 77 discriminator 2 view .LVU510
 1457 0016 31F91310 		ldrsh	r1, [r1, r3, lsl #1]
  93:User/myMain.cpp ****   }
 1458              		.loc 4 93 50 discriminator 2 view .LVU511
 1459 001a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
 1460              		.loc 4 92 3 is_stmt 1 discriminator 2 view .LVU512
 1461 001e 0133     		adds	r3, r3, #1
 1462              	.LVL142:
 1463              	.L75:
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
ARM GAS  /tmp/ccr3Zb65.s 			page 43


 1464              		.loc 4 92 17 discriminator 3 view .LVU513
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
 1465              		.loc 4 92 32 is_stmt 0 discriminator 3 view .LVU514
 1466 0020 8268     		ldr	r2, [r0, #8]
  92:User/myMain.cpp ****     uwManipulator.hostCommand.actuatorCommand[i] = cmd_msg.actuatorCommand[i];
 1467              		.loc 4 92 17 discriminator 3 view .LVU515
 1468 0022 9A42     		cmp	r2, r3
 1469 0024 F3DC     		bgt	.L76
 1470              	.LBE115:
  95:User/myMain.cpp ****   uwManipulator.hostCommand.pSourceCommand = cmd_msg.pSourceCommand;
 1471              		.loc 4 95 3 is_stmt 1 view .LVU516
  95:User/myMain.cpp ****   uwManipulator.hostCommand.pSourceCommand = cmd_msg.pSourceCommand;
 1472              		.loc 4 95 54 is_stmt 0 view .LVU517
 1473 0026 B0F91420 		ldrsh	r2, [r0, #20]
  95:User/myMain.cpp ****   uwManipulator.hostCommand.pSourceCommand = cmd_msg.pSourceCommand;
 1474              		.loc 4 95 44 view .LVU518
 1475 002a 064B     		ldr	r3, .L77
 1476              	.LVL143:
  95:User/myMain.cpp ****   uwManipulator.hostCommand.pSourceCommand = cmd_msg.pSourceCommand;
 1477              		.loc 4 95 44 view .LVU519
 1478 002c A3F8E823 		strh	r2, [r3, #1000]	@ movhi
  96:User/myMain.cpp ****   uwManipulator.hostCommand.pSinkCommand = cmd_msg.pSinkCommand;
 1479              		.loc 4 96 3 is_stmt 1 view .LVU520
  96:User/myMain.cpp ****   uwManipulator.hostCommand.pSinkCommand = cmd_msg.pSinkCommand;
 1480              		.loc 4 96 54 is_stmt 0 view .LVU521
 1481 0030 B0F91620 		ldrsh	r2, [r0, #22]
  96:User/myMain.cpp ****   uwManipulator.hostCommand.pSinkCommand = cmd_msg.pSinkCommand;
 1482              		.loc 4 96 44 view .LVU522
 1483 0034 A3F8EA23 		strh	r2, [r3, #1002]	@ movhi
  97:User/myMain.cpp **** }
 1484              		.loc 4 97 3 is_stmt 1 view .LVU523
  97:User/myMain.cpp **** }
 1485              		.loc 4 97 52 is_stmt 0 view .LVU524
 1486 0038 B0F91820 		ldrsh	r2, [r0, #24]
  97:User/myMain.cpp **** }
 1487              		.loc 4 97 42 view .LVU525
 1488 003c A3F8EC23 		strh	r2, [r3, #1004]	@ movhi
  98:User/myMain.cpp **** 
 1489              		.loc 4 98 1 view .LVU526
 1490 0040 7047     		bx	lr
 1491              	.L78:
 1492 0042 00BF     		.align	2
 1493              	.L77:
 1494 0044 00000000 		.word	.LANCHOR0
 1495              		.cfi_endproc
 1496              	.LFE446:
 1497              		.cantunwind
 1498              		.fnend
 1500              		.section	.text._Z18setupLoopFrequencys,"ax",%progbits
 1501              		.align	1
 1502              		.global	_Z18setupLoopFrequencys
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu softvfp
 1508              	_Z18setupLoopFrequencys:
 1509              		.fnstart
ARM GAS  /tmp/ccr3Zb65.s 			page 44


 1510              	.LVL144:
 1511              	.LFB447:
 104:User/myMain.cpp ****   extern int32_t globalSensorTaskPeriod;
 1512              		.loc 4 104 1 is_stmt 1 view -0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 105:User/myMain.cpp ****   globalSensorTaskPeriod = (int)(1000 / fre);
 1517              		.loc 4 105 3 view .LVU528
 106:User/myMain.cpp ****   if (globalSensorTaskPeriod < 1)
 1518              		.loc 4 106 3 view .LVU529
 106:User/myMain.cpp ****   if (globalSensorTaskPeriod < 1)
 1519              		.loc 4 106 39 is_stmt 0 view .LVU530
 1520 0000 4FF47A73 		mov	r3, #1000
 1521 0004 93FBF0F0 		sdiv	r0, r3, r0
 1522              	.LVL145:
 106:User/myMain.cpp ****   if (globalSensorTaskPeriod < 1)
 1523              		.loc 4 106 26 view .LVU531
 1524 0008 034B     		ldr	r3, .L82
 1525 000a 1860     		str	r0, [r3]
 107:User/myMain.cpp ****     globalSensorTaskPeriod = 1;
 1526              		.loc 4 107 3 is_stmt 1 view .LVU532
 1527 000c 0028     		cmp	r0, #0
 1528 000e 00DD     		ble	.L81
 1529              	.L79:
 1530              		.loc 4 109 1 is_stmt 0 view .LVU533
 1531 0010 7047     		bx	lr
 1532              	.L81:
 108:User/myMain.cpp **** }
 1533              		.loc 4 108 5 is_stmt 1 view .LVU534
 108:User/myMain.cpp **** }
 1534              		.loc 4 108 28 is_stmt 0 view .LVU535
 1535 0012 0122     		movs	r2, #1
 1536 0014 1A60     		str	r2, [r3]
 1537              		.loc 4 109 1 view .LVU536
 1538 0016 FBE7     		b	.L79
 1539              	.L83:
 1540              		.align	2
 1541              	.L82:
 1542 0018 00000000 		.word	globalSensorTaskPeriod
 1543              		.cfi_endproc
 1544              	.LFE447:
 1545              		.cantunwind
 1546              		.fnend
 1548              		.section	.text.setup,"ax",%progbits
 1549              		.align	1
 1550              		.global	setup
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1554              		.fpu softvfp
 1556              	setup:
 1557              		.fnstart
 1558              	.LFB443:
  45:User/myMain.cpp **** 
 1559              		.loc 4 45 1 is_stmt 1 view -0
ARM GAS  /tmp/ccr3Zb65.s 			page 45


 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563 0000 10B5     		push	{r4, lr}
 1564              		.save {r4, lr}
 1565              	.LCFI4:
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 4, -8
 1568              		.cfi_offset 14, -4
  48:User/myMain.cpp ****   ADS1115_Setup();
 1569              		.loc 4 48 3 view .LVU538
  48:User/myMain.cpp ****   ADS1115_Setup();
 1570              		.loc 4 48 19 is_stmt 0 view .LVU539
 1571 0002 FFF7FEFF 		bl	LED_Driver_Setup
 1572              	.LVL146:
  49:User/myMain.cpp ****   canConfig();
 1573              		.loc 4 49 3 is_stmt 1 view .LVU540
  49:User/myMain.cpp ****   canConfig();
 1574              		.loc 4 49 16 is_stmt 0 view .LVU541
 1575 0006 FFF7FEFF 		bl	ADS1115_Setup
 1576              	.LVL147:
  50:User/myMain.cpp **** 
 1577              		.loc 4 50 3 is_stmt 1 view .LVU542
  50:User/myMain.cpp **** 
 1578              		.loc 4 50 12 is_stmt 0 view .LVU543
 1579 000a FFF7FEFF 		bl	canConfig
 1580              	.LVL148:
  53:User/myMain.cpp **** 
 1581              		.loc 4 53 3 is_stmt 1 view .LVU544
  53:User/myMain.cpp **** 
 1582              		.loc 4 53 21 is_stmt 0 view .LVU545
 1583 000e 6420     		movs	r0, #100
 1584 0010 FFF7FEFF 		bl	_Z18setupLoopFrequencys
 1585              	.LVL149:
  56:User/myMain.cpp ****   uwManipulator.setupGripperPorts(gripperInitPort);
 1586              		.loc 4 56 3 is_stmt 1 view .LVU546
  56:User/myMain.cpp ****   uwManipulator.setupGripperPorts(gripperInitPort);
 1587              		.loc 4 56 35 is_stmt 0 view .LVU547
 1588 0014 0D4C     		ldr	r4, .L86
 1589 0016 0E49     		ldr	r1, .L86+4
 1590 0018 2046     		mov	r0, r4
 1591 001a FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator18setupActuatorPortsERA3_A4_A2_h
 1592              	.LVL150:
  57:User/myMain.cpp ****   uwManipulator.setupPsourcePorts(pSourcePumpInitPort, pSourceValveInitPort, pSourceSensorInitPort)
 1593              		.loc 4 57 3 is_stmt 1 view .LVU548
  57:User/myMain.cpp ****   uwManipulator.setupPsourcePorts(pSourcePumpInitPort, pSourceValveInitPort, pSourceSensorInitPort)
 1594              		.loc 4 57 34 is_stmt 0 view .LVU549
 1595 001e 0D49     		ldr	r1, .L86+8
 1596 0020 2046     		mov	r0, r4
 1597 0022 FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator17setupGripperPortsERA2_h
 1598              	.LVL151:
  58:User/myMain.cpp ****   uwManipulator.setupPsinkPorts(pSinkPumpInitPort, pSinkValveInitPort, pSinkSensorInitPort);
 1599              		.loc 4 58 3 is_stmt 1 view .LVU550
  58:User/myMain.cpp ****   uwManipulator.setupPsinkPorts(pSinkPumpInitPort, pSinkValveInitPort, pSinkSensorInitPort);
 1600              		.loc 4 58 34 is_stmt 0 view .LVU551
 1601 0026 0C4B     		ldr	r3, .L86+12
 1602 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccr3Zb65.s 			page 46


 1603 002a 0C4A     		ldr	r2, .L86+16
 1604 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1605 002e 0C49     		ldr	r1, .L86+20
 1606 0030 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1607 0032 2046     		mov	r0, r4
 1608 0034 FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator17setupPsourcePortsEhhh
 1609              	.LVL152:
  59:User/myMain.cpp **** }
 1610              		.loc 4 59 3 is_stmt 1 view .LVU552
  59:User/myMain.cpp **** }
 1611              		.loc 4 59 32 is_stmt 0 view .LVU553
 1612 0038 0A4B     		ldr	r3, .L86+24
 1613 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1614 003c 0A4A     		ldr	r2, .L86+28
 1615 003e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1616 0040 0A49     		ldr	r1, .L86+32
 1617 0042 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1618 0044 2046     		mov	r0, r4
 1619 0046 FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator15setupPsinkPortsEhhh
 1620              	.LVL153:
  60:User/myMain.cpp **** 
 1621              		.loc 4 60 1 view .LVU554
 1622 004a 10BD     		pop	{r4, pc}
 1623              	.L87:
 1624              		.align	2
 1625              	.L86:
 1626 004c 00000000 		.word	.LANCHOR0
 1627 0050 00000000 		.word	.LANCHOR1
 1628 0054 00000000 		.word	.LANCHOR2
 1629 0058 00000000 		.word	.LANCHOR3
 1630 005c 00000000 		.word	.LANCHOR4
 1631 0060 00000000 		.word	.LANCHOR5
 1632 0064 00000000 		.word	.LANCHOR6
 1633 0068 00000000 		.word	.LANCHOR7
 1634 006c 00000000 		.word	.LANCHOR8
 1635              		.cfi_endproc
 1636              	.LFE443:
 1637              		.fnend
 1639              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv.st
 1640              		.align	2
 1641              	.LC4:
 1642 0000 00       		.ascii	"\000"
 1643              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"axG
 1644              		.align	1
 1645              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1649              		.fpu softvfp
 1651              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 1652              		.fnstart
 1653              	.LVL154:
 1654              	.LFB452:
 1655              		.file 6 "User/Inc/rosserialInc/ros/node_handle.h"
   1:User/Inc/rosserialInc/ros/node_handle.h **** /*
   2:User/Inc/rosserialInc/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/ros/node_handle.h ****  *
ARM GAS  /tmp/ccr3Zb65.s 			page 47


   4:User/Inc/rosserialInc/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/ros/node_handle.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/ros/node_handle.h ****  *
   7:User/Inc/rosserialInc/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/ros/node_handle.h ****  * are met:
  10:User/Inc/rosserialInc/ros/node_handle.h ****  *
  11:User/Inc/rosserialInc/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/ros/node_handle.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/ros/node_handle.h ****  *
  21:User/Inc/rosserialInc/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/ros/node_handle.h ****  */
  34:User/Inc/rosserialInc/ros/node_handle.h **** 
  35:User/Inc/rosserialInc/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:User/Inc/rosserialInc/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:User/Inc/rosserialInc/ros/node_handle.h **** 
  38:User/Inc/rosserialInc/ros/node_handle.h **** #include <stdint.h>
  39:User/Inc/rosserialInc/ros/node_handle.h **** 
  40:User/Inc/rosserialInc/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:User/Inc/rosserialInc/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:User/Inc/rosserialInc/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:User/Inc/rosserialInc/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:User/Inc/rosserialInc/ros/node_handle.h **** 
  45:User/Inc/rosserialInc/ros/node_handle.h **** #include "ros/msg.h"
  46:User/Inc/rosserialInc/ros/node_handle.h **** 
  47:User/Inc/rosserialInc/ros/node_handle.h **** namespace ros
  48:User/Inc/rosserialInc/ros/node_handle.h **** {
  49:User/Inc/rosserialInc/ros/node_handle.h **** 
  50:User/Inc/rosserialInc/ros/node_handle.h **** class NodeHandleBase_
  51:User/Inc/rosserialInc/ros/node_handle.h **** {
  52:User/Inc/rosserialInc/ros/node_handle.h **** public:
  53:User/Inc/rosserialInc/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:User/Inc/rosserialInc/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:User/Inc/rosserialInc/ros/node_handle.h ****   virtual bool connected() = 0;
  56:User/Inc/rosserialInc/ros/node_handle.h **** };
  57:User/Inc/rosserialInc/ros/node_handle.h **** }
  58:User/Inc/rosserialInc/ros/node_handle.h **** 
  59:User/Inc/rosserialInc/ros/node_handle.h **** #include "ros/publisher.h"
  60:User/Inc/rosserialInc/ros/node_handle.h **** #include "ros/subscriber.h"
ARM GAS  /tmp/ccr3Zb65.s 			page 48


  61:User/Inc/rosserialInc/ros/node_handle.h **** #include "ros/service_server.h"
  62:User/Inc/rosserialInc/ros/node_handle.h **** #include "ros/service_client.h"
  63:User/Inc/rosserialInc/ros/node_handle.h **** 
  64:User/Inc/rosserialInc/ros/node_handle.h **** namespace ros
  65:User/Inc/rosserialInc/ros/node_handle.h **** {
  66:User/Inc/rosserialInc/ros/node_handle.h **** 
  67:User/Inc/rosserialInc/ros/node_handle.h **** const int SPIN_OK = 0;
  68:User/Inc/rosserialInc/ros/node_handle.h **** const int SPIN_ERR = -1;
  69:User/Inc/rosserialInc/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  70:User/Inc/rosserialInc/ros/node_handle.h **** 
  71:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  72:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  73:User/Inc/rosserialInc/ros/node_handle.h **** /*
  74:User/Inc/rosserialInc/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  75:User/Inc/rosserialInc/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  76:User/Inc/rosserialInc/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  77:User/Inc/rosserialInc/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  78:User/Inc/rosserialInc/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  79:User/Inc/rosserialInc/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  80:User/Inc/rosserialInc/ros/node_handle.h ****  */
  81:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  82:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  83:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  84:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  85:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  86:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  87:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  88:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  89:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  90:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  91:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  92:User/Inc/rosserialInc/ros/node_handle.h **** 
  93:User/Inc/rosserialInc/ros/node_handle.h **** 
  94:User/Inc/rosserialInc/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  95:User/Inc/rosserialInc/ros/node_handle.h **** 
  96:User/Inc/rosserialInc/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  97:User/Inc/rosserialInc/ros/node_handle.h **** 
  98:User/Inc/rosserialInc/ros/node_handle.h **** /* Node Handle */
  99:User/Inc/rosserialInc/ros/node_handle.h **** template<class Hardware,
 100:User/Inc/rosserialInc/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 101:User/Inc/rosserialInc/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 102:User/Inc/rosserialInc/ros/node_handle.h ****          int INPUT_SIZE = 512,
 103:User/Inc/rosserialInc/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 104:User/Inc/rosserialInc/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 105:User/Inc/rosserialInc/ros/node_handle.h **** {
 106:User/Inc/rosserialInc/ros/node_handle.h **** protected:
 107:User/Inc/rosserialInc/ros/node_handle.h ****   Hardware hardware_{};
 108:User/Inc/rosserialInc/ros/node_handle.h **** 
 109:User/Inc/rosserialInc/ros/node_handle.h ****   /* time used for syncing */
 110:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t rt_time{0};
 111:User/Inc/rosserialInc/ros/node_handle.h **** 
 112:User/Inc/rosserialInc/ros/node_handle.h ****   /* used for computing current time */
 113:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t sec_offset{0}, nsec_offset{0};
 114:User/Inc/rosserialInc/ros/node_handle.h **** 
 115:User/Inc/rosserialInc/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 116:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t spin_timeout_{0};
 117:User/Inc/rosserialInc/ros/node_handle.h **** 
ARM GAS  /tmp/ccr3Zb65.s 			page 49


 118:User/Inc/rosserialInc/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE] = {0};
 119:User/Inc/rosserialInc/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE] = {0};
 120:User/Inc/rosserialInc/ros/node_handle.h **** 
 121:User/Inc/rosserialInc/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS] = {nullptr};
 122:User/Inc/rosserialInc/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS] {nullptr};
 123:User/Inc/rosserialInc/ros/node_handle.h **** 
 124:User/Inc/rosserialInc/ros/node_handle.h ****   /*
 125:User/Inc/rosserialInc/ros/node_handle.h ****    * Setup Functions
 126:User/Inc/rosserialInc/ros/node_handle.h ****    */
 127:User/Inc/rosserialInc/ros/node_handle.h **** public:
 128:User/Inc/rosserialInc/ros/node_handle.h ****   Hardware* getHardware()
 129:User/Inc/rosserialInc/ros/node_handle.h ****   {
 130:User/Inc/rosserialInc/ros/node_handle.h ****     return &hardware_;
 131:User/Inc/rosserialInc/ros/node_handle.h ****   }
 132:User/Inc/rosserialInc/ros/node_handle.h **** 
 133:User/Inc/rosserialInc/ros/node_handle.h ****   /* Start serial, initialize buffers */
 134:User/Inc/rosserialInc/ros/node_handle.h ****   void initNode()
 135:User/Inc/rosserialInc/ros/node_handle.h ****   {
 136:User/Inc/rosserialInc/ros/node_handle.h ****     hardware_.init();
 137:User/Inc/rosserialInc/ros/node_handle.h ****     mode_ = 0;
 138:User/Inc/rosserialInc/ros/node_handle.h ****     bytes_ = 0;
 139:User/Inc/rosserialInc/ros/node_handle.h ****     index_ = 0;
 140:User/Inc/rosserialInc/ros/node_handle.h ****     topic_ = 0;
 141:User/Inc/rosserialInc/ros/node_handle.h ****   };
 142:User/Inc/rosserialInc/ros/node_handle.h **** 
 143:User/Inc/rosserialInc/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 144:User/Inc/rosserialInc/ros/node_handle.h ****   void initNode(char *portName)
 145:User/Inc/rosserialInc/ros/node_handle.h ****   {
 146:User/Inc/rosserialInc/ros/node_handle.h ****     hardware_.init(portName);
 147:User/Inc/rosserialInc/ros/node_handle.h ****     mode_ = 0;
 148:User/Inc/rosserialInc/ros/node_handle.h ****     bytes_ = 0;
 149:User/Inc/rosserialInc/ros/node_handle.h ****     index_ = 0;
 150:User/Inc/rosserialInc/ros/node_handle.h ****     topic_ = 0;
 151:User/Inc/rosserialInc/ros/node_handle.h ****   };
 152:User/Inc/rosserialInc/ros/node_handle.h **** 
 153:User/Inc/rosserialInc/ros/node_handle.h ****   /**
 154:User/Inc/rosserialInc/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 155:User/Inc/rosserialInc/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 156:User/Inc/rosserialInc/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 157:User/Inc/rosserialInc/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 158:User/Inc/rosserialInc/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 159:User/Inc/rosserialInc/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 160:User/Inc/rosserialInc/ros/node_handle.h ****    */
 161:User/Inc/rosserialInc/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 162:User/Inc/rosserialInc/ros/node_handle.h ****   {
 163:User/Inc/rosserialInc/ros/node_handle.h ****      spin_timeout_ = timeout;
 164:User/Inc/rosserialInc/ros/node_handle.h ****   }
 165:User/Inc/rosserialInc/ros/node_handle.h **** 
 166:User/Inc/rosserialInc/ros/node_handle.h **** protected:
 167:User/Inc/rosserialInc/ros/node_handle.h ****   // State machine variables for spinOnce
 168:User/Inc/rosserialInc/ros/node_handle.h ****   int mode_{0};
 169:User/Inc/rosserialInc/ros/node_handle.h ****   int bytes_{0};
 170:User/Inc/rosserialInc/ros/node_handle.h ****   int topic_{0};
 171:User/Inc/rosserialInc/ros/node_handle.h ****   int index_{0};
 172:User/Inc/rosserialInc/ros/node_handle.h ****   int checksum_{0};
 173:User/Inc/rosserialInc/ros/node_handle.h **** 
 174:User/Inc/rosserialInc/ros/node_handle.h ****   bool configured_{false};
ARM GAS  /tmp/ccr3Zb65.s 			page 50


 175:User/Inc/rosserialInc/ros/node_handle.h **** 
 176:User/Inc/rosserialInc/ros/node_handle.h ****   /* used for syncing the time */
 177:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t last_sync_time{0};
 178:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t last_sync_receive_time{0};
 179:User/Inc/rosserialInc/ros/node_handle.h ****   uint32_t last_msg_timeout_time{0};
 180:User/Inc/rosserialInc/ros/node_handle.h **** 
 181:User/Inc/rosserialInc/ros/node_handle.h **** public:
 182:User/Inc/rosserialInc/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 183:User/Inc/rosserialInc/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 184:User/Inc/rosserialInc/ros/node_handle.h ****    */
 185:User/Inc/rosserialInc/ros/node_handle.h **** 
 186:User/Inc/rosserialInc/ros/node_handle.h **** 
 187:User/Inc/rosserialInc/ros/node_handle.h ****   virtual int spinOnce() override
 188:User/Inc/rosserialInc/ros/node_handle.h ****   {
 189:User/Inc/rosserialInc/ros/node_handle.h ****     /* restart if timed out */
 190:User/Inc/rosserialInc/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 191:User/Inc/rosserialInc/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 192:User/Inc/rosserialInc/ros/node_handle.h ****     {
 193:User/Inc/rosserialInc/ros/node_handle.h ****       configured_ = false;
 194:User/Inc/rosserialInc/ros/node_handle.h ****     }
 195:User/Inc/rosserialInc/ros/node_handle.h **** 
 196:User/Inc/rosserialInc/ros/node_handle.h ****     /* reset if message has timed out */
 197:User/Inc/rosserialInc/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 198:User/Inc/rosserialInc/ros/node_handle.h ****     {
 199:User/Inc/rosserialInc/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 200:User/Inc/rosserialInc/ros/node_handle.h ****       {
 201:User/Inc/rosserialInc/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 202:User/Inc/rosserialInc/ros/node_handle.h ****       }
 203:User/Inc/rosserialInc/ros/node_handle.h ****     }
 204:User/Inc/rosserialInc/ros/node_handle.h **** 
 205:User/Inc/rosserialInc/ros/node_handle.h ****     /* while available buffer, read data */
 206:User/Inc/rosserialInc/ros/node_handle.h ****     while (true)
 207:User/Inc/rosserialInc/ros/node_handle.h ****     {
 208:User/Inc/rosserialInc/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 209:User/Inc/rosserialInc/ros/node_handle.h ****       if (spin_timeout_ > 0)
 210:User/Inc/rosserialInc/ros/node_handle.h ****       {
 211:User/Inc/rosserialInc/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 212:User/Inc/rosserialInc/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 213:User/Inc/rosserialInc/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 214:User/Inc/rosserialInc/ros/node_handle.h ****         // and start fresh.
 215:User/Inc/rosserialInc/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 216:User/Inc/rosserialInc/ros/node_handle.h ****         {
 217:User/Inc/rosserialInc/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 218:User/Inc/rosserialInc/ros/node_handle.h ****           return SPIN_TIMEOUT;
 219:User/Inc/rosserialInc/ros/node_handle.h ****         }
 220:User/Inc/rosserialInc/ros/node_handle.h ****       }
 221:User/Inc/rosserialInc/ros/node_handle.h ****       int data = hardware_.read();
 222:User/Inc/rosserialInc/ros/node_handle.h ****       if (data < 0)
 223:User/Inc/rosserialInc/ros/node_handle.h ****         break;
 224:User/Inc/rosserialInc/ros/node_handle.h ****       checksum_ += data;
 225:User/Inc/rosserialInc/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 226:User/Inc/rosserialInc/ros/node_handle.h ****       {
 227:User/Inc/rosserialInc/ros/node_handle.h ****         message_in[index_++] = data;
 228:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_--;
 229:User/Inc/rosserialInc/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 230:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 231:User/Inc/rosserialInc/ros/node_handle.h ****       }
ARM GAS  /tmp/ccr3Zb65.s 			page 51


 232:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 233:User/Inc/rosserialInc/ros/node_handle.h ****       {
 234:User/Inc/rosserialInc/ros/node_handle.h ****         if (data == 0xff)
 235:User/Inc/rosserialInc/ros/node_handle.h ****         {
 236:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 237:User/Inc/rosserialInc/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 238:User/Inc/rosserialInc/ros/node_handle.h ****         }
 239:User/Inc/rosserialInc/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 240:User/Inc/rosserialInc/ros/node_handle.h ****         {
 241:User/Inc/rosserialInc/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 242:User/Inc/rosserialInc/ros/node_handle.h ****           configured_ = false;
 243:User/Inc/rosserialInc/ros/node_handle.h ****           return SPIN_TIMEOUT;
 244:User/Inc/rosserialInc/ros/node_handle.h ****         }
 245:User/Inc/rosserialInc/ros/node_handle.h ****       }
 246:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 247:User/Inc/rosserialInc/ros/node_handle.h ****       {
 248:User/Inc/rosserialInc/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 249:User/Inc/rosserialInc/ros/node_handle.h ****         {
 250:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 251:User/Inc/rosserialInc/ros/node_handle.h ****         }
 252:User/Inc/rosserialInc/ros/node_handle.h ****         else
 253:User/Inc/rosserialInc/ros/node_handle.h ****         {
 254:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 255:User/Inc/rosserialInc/ros/node_handle.h ****           if (configured_ == false)
 256:User/Inc/rosserialInc/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 257:User/Inc/rosserialInc/ros/node_handle.h ****         }
 258:User/Inc/rosserialInc/ros/node_handle.h ****       }
 259:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 260:User/Inc/rosserialInc/ros/node_handle.h ****       {
 261:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_ = data;
 262:User/Inc/rosserialInc/ros/node_handle.h ****         index_ = 0;
 263:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 264:User/Inc/rosserialInc/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 265:User/Inc/rosserialInc/ros/node_handle.h ****       }
 266:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 267:User/Inc/rosserialInc/ros/node_handle.h ****       {
 268:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_ += data << 8;
 269:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 270:User/Inc/rosserialInc/ros/node_handle.h ****       }
 271:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 272:User/Inc/rosserialInc/ros/node_handle.h ****       {
 273:User/Inc/rosserialInc/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 274:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 275:User/Inc/rosserialInc/ros/node_handle.h ****         else
 276:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 277:User/Inc/rosserialInc/ros/node_handle.h ****       }
 278:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 279:User/Inc/rosserialInc/ros/node_handle.h ****       {
 280:User/Inc/rosserialInc/ros/node_handle.h ****         topic_ = data;
 281:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 282:User/Inc/rosserialInc/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 283:User/Inc/rosserialInc/ros/node_handle.h ****       }
 284:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 285:User/Inc/rosserialInc/ros/node_handle.h ****       {
 286:User/Inc/rosserialInc/ros/node_handle.h ****         topic_ += data << 8;
 287:User/Inc/rosserialInc/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 288:User/Inc/rosserialInc/ros/node_handle.h ****         if (bytes_ == 0)
ARM GAS  /tmp/ccr3Zb65.s 			page 52


 289:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 290:User/Inc/rosserialInc/ros/node_handle.h ****       }
 291:User/Inc/rosserialInc/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 292:User/Inc/rosserialInc/ros/node_handle.h ****       {
 293:User/Inc/rosserialInc/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 294:User/Inc/rosserialInc/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 295:User/Inc/rosserialInc/ros/node_handle.h ****         {
 296:User/Inc/rosserialInc/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 297:User/Inc/rosserialInc/ros/node_handle.h ****           {
 298:User/Inc/rosserialInc/ros/node_handle.h ****             requestSyncTime();
 299:User/Inc/rosserialInc/ros/node_handle.h ****             negotiateTopics();
 300:User/Inc/rosserialInc/ros/node_handle.h ****             last_sync_time = c_time;
 301:User/Inc/rosserialInc/ros/node_handle.h ****             last_sync_receive_time = c_time;
 302:User/Inc/rosserialInc/ros/node_handle.h ****             return SPIN_ERR;
 303:User/Inc/rosserialInc/ros/node_handle.h ****           }
 304:User/Inc/rosserialInc/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 305:User/Inc/rosserialInc/ros/node_handle.h ****           {
 306:User/Inc/rosserialInc/ros/node_handle.h ****             syncTime(message_in);
 307:User/Inc/rosserialInc/ros/node_handle.h ****           }
 308:User/Inc/rosserialInc/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 309:User/Inc/rosserialInc/ros/node_handle.h ****           {
 310:User/Inc/rosserialInc/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 311:User/Inc/rosserialInc/ros/node_handle.h ****             param_received = true;
 312:User/Inc/rosserialInc/ros/node_handle.h ****           }
 313:User/Inc/rosserialInc/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 314:User/Inc/rosserialInc/ros/node_handle.h ****           {
 315:User/Inc/rosserialInc/ros/node_handle.h ****             configured_ = false;
 316:User/Inc/rosserialInc/ros/node_handle.h ****           }
 317:User/Inc/rosserialInc/ros/node_handle.h ****           else
 318:User/Inc/rosserialInc/ros/node_handle.h ****           {
 319:User/Inc/rosserialInc/ros/node_handle.h ****             if (subscribers[topic_ - 100])
 320:User/Inc/rosserialInc/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 321:User/Inc/rosserialInc/ros/node_handle.h ****           }
 322:User/Inc/rosserialInc/ros/node_handle.h ****         }
 323:User/Inc/rosserialInc/ros/node_handle.h ****       }
 324:User/Inc/rosserialInc/ros/node_handle.h ****     }
 325:User/Inc/rosserialInc/ros/node_handle.h **** 
 326:User/Inc/rosserialInc/ros/node_handle.h ****     /* occasionally sync time */
 327:User/Inc/rosserialInc/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 328:User/Inc/rosserialInc/ros/node_handle.h ****     {
 329:User/Inc/rosserialInc/ros/node_handle.h ****       requestSyncTime();
 330:User/Inc/rosserialInc/ros/node_handle.h ****       last_sync_time = c_time;
 331:User/Inc/rosserialInc/ros/node_handle.h ****     }
 332:User/Inc/rosserialInc/ros/node_handle.h **** 
 333:User/Inc/rosserialInc/ros/node_handle.h ****     return SPIN_OK;
 334:User/Inc/rosserialInc/ros/node_handle.h ****   }
 335:User/Inc/rosserialInc/ros/node_handle.h **** 
 336:User/Inc/rosserialInc/ros/node_handle.h **** 
 337:User/Inc/rosserialInc/ros/node_handle.h ****   /* Are we connected to the PC? */
 338:User/Inc/rosserialInc/ros/node_handle.h ****   virtual bool connected() override
 339:User/Inc/rosserialInc/ros/node_handle.h ****   {
 340:User/Inc/rosserialInc/ros/node_handle.h ****     return configured_;
 341:User/Inc/rosserialInc/ros/node_handle.h ****   };
 342:User/Inc/rosserialInc/ros/node_handle.h **** 
 343:User/Inc/rosserialInc/ros/node_handle.h ****   /********************************************************************
 344:User/Inc/rosserialInc/ros/node_handle.h ****    * Time functions
 345:User/Inc/rosserialInc/ros/node_handle.h ****    */
ARM GAS  /tmp/ccr3Zb65.s 			page 53


 346:User/Inc/rosserialInc/ros/node_handle.h **** 
 347:User/Inc/rosserialInc/ros/node_handle.h ****   void requestSyncTime()
 348:User/Inc/rosserialInc/ros/node_handle.h ****   {
 349:User/Inc/rosserialInc/ros/node_handle.h ****     std_msgs::Time t;
 350:User/Inc/rosserialInc/ros/node_handle.h ****     publish(TopicInfo::ID_TIME, &t);
 351:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 352:User/Inc/rosserialInc/ros/node_handle.h ****   }
 353:User/Inc/rosserialInc/ros/node_handle.h **** 
 354:User/Inc/rosserialInc/ros/node_handle.h ****   void syncTime(uint8_t * data)
 355:User/Inc/rosserialInc/ros/node_handle.h ****   {
 356:User/Inc/rosserialInc/ros/node_handle.h ****     std_msgs::Time t;
 357:User/Inc/rosserialInc/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 358:User/Inc/rosserialInc/ros/node_handle.h **** 
 359:User/Inc/rosserialInc/ros/node_handle.h ****     t.deserialize(data);
 360:User/Inc/rosserialInc/ros/node_handle.h ****     t.data.sec += offset / 1000;
 361:User/Inc/rosserialInc/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 362:User/Inc/rosserialInc/ros/node_handle.h **** 
 363:User/Inc/rosserialInc/ros/node_handle.h ****     this->setNow(t.data);
 364:User/Inc/rosserialInc/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 365:User/Inc/rosserialInc/ros/node_handle.h ****   }
 366:User/Inc/rosserialInc/ros/node_handle.h **** 
 367:User/Inc/rosserialInc/ros/node_handle.h ****   Time now()
 368:User/Inc/rosserialInc/ros/node_handle.h ****   {
 369:User/Inc/rosserialInc/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 370:User/Inc/rosserialInc/ros/node_handle.h ****     Time current_time;
 371:User/Inc/rosserialInc/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 372:User/Inc/rosserialInc/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 373:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 374:User/Inc/rosserialInc/ros/node_handle.h ****     return current_time;
 375:User/Inc/rosserialInc/ros/node_handle.h ****   }
 376:User/Inc/rosserialInc/ros/node_handle.h **** 
 377:User/Inc/rosserialInc/ros/node_handle.h ****   void setNow(const Time & new_now)
 378:User/Inc/rosserialInc/ros/node_handle.h ****   {
 379:User/Inc/rosserialInc/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 380:User/Inc/rosserialInc/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 381:User/Inc/rosserialInc/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 382:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 383:User/Inc/rosserialInc/ros/node_handle.h ****   }
 384:User/Inc/rosserialInc/ros/node_handle.h **** 
 385:User/Inc/rosserialInc/ros/node_handle.h ****   /********************************************************************
 386:User/Inc/rosserialInc/ros/node_handle.h ****    * Topic Management
 387:User/Inc/rosserialInc/ros/node_handle.h ****    */
 388:User/Inc/rosserialInc/ros/node_handle.h **** 
 389:User/Inc/rosserialInc/ros/node_handle.h ****   /* Register a new publisher */
 390:User/Inc/rosserialInc/ros/node_handle.h ****   bool advertise(Publisher & p)
 391:User/Inc/rosserialInc/ros/node_handle.h ****   {
 392:User/Inc/rosserialInc/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 393:User/Inc/rosserialInc/ros/node_handle.h ****     {
 394:User/Inc/rosserialInc/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 395:User/Inc/rosserialInc/ros/node_handle.h ****       {
 396:User/Inc/rosserialInc/ros/node_handle.h ****         publishers[i] = &p;
 397:User/Inc/rosserialInc/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 398:User/Inc/rosserialInc/ros/node_handle.h ****         p.nh_ = this;
 399:User/Inc/rosserialInc/ros/node_handle.h ****         return true;
 400:User/Inc/rosserialInc/ros/node_handle.h ****       }
 401:User/Inc/rosserialInc/ros/node_handle.h ****     }
 402:User/Inc/rosserialInc/ros/node_handle.h ****     return false;
ARM GAS  /tmp/ccr3Zb65.s 			page 54


 403:User/Inc/rosserialInc/ros/node_handle.h ****   }
 404:User/Inc/rosserialInc/ros/node_handle.h **** 
 405:User/Inc/rosserialInc/ros/node_handle.h ****   /* Register a new subscriber */
 406:User/Inc/rosserialInc/ros/node_handle.h ****   bool subscribe(Subscriber_& s)
 407:User/Inc/rosserialInc/ros/node_handle.h ****   {
 408:User/Inc/rosserialInc/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 409:User/Inc/rosserialInc/ros/node_handle.h ****     {
 410:User/Inc/rosserialInc/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 411:User/Inc/rosserialInc/ros/node_handle.h ****       {
 412:User/Inc/rosserialInc/ros/node_handle.h ****         subscribers[i] = &s;
 413:User/Inc/rosserialInc/ros/node_handle.h ****         s.id_ = i + 100;
 414:User/Inc/rosserialInc/ros/node_handle.h ****         return true;
 415:User/Inc/rosserialInc/ros/node_handle.h ****       }
 416:User/Inc/rosserialInc/ros/node_handle.h ****     }
 417:User/Inc/rosserialInc/ros/node_handle.h ****     return false;
 418:User/Inc/rosserialInc/ros/node_handle.h ****   }
 419:User/Inc/rosserialInc/ros/node_handle.h **** 
 420:User/Inc/rosserialInc/ros/node_handle.h ****   /* Register a new Service Server */
 421:User/Inc/rosserialInc/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 422:User/Inc/rosserialInc/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 423:User/Inc/rosserialInc/ros/node_handle.h ****   {
 424:User/Inc/rosserialInc/ros/node_handle.h ****     bool v = advertise(srv.pub);
 425:User/Inc/rosserialInc/ros/node_handle.h ****     bool w = subscribe(srv);
 426:User/Inc/rosserialInc/ros/node_handle.h ****     return v && w;
 427:User/Inc/rosserialInc/ros/node_handle.h ****   }
 428:User/Inc/rosserialInc/ros/node_handle.h **** 
 429:User/Inc/rosserialInc/ros/node_handle.h ****   /* Register a new Service Client */
 430:User/Inc/rosserialInc/ros/node_handle.h ****   template<typename MReq, typename MRes>
 431:User/Inc/rosserialInc/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 432:User/Inc/rosserialInc/ros/node_handle.h ****   {
 433:User/Inc/rosserialInc/ros/node_handle.h ****     bool v = advertise(srv.pub);
 434:User/Inc/rosserialInc/ros/node_handle.h ****     bool w = subscribe(srv);
 435:User/Inc/rosserialInc/ros/node_handle.h ****     return v && w;
 436:User/Inc/rosserialInc/ros/node_handle.h ****   }
 437:User/Inc/rosserialInc/ros/node_handle.h **** 
 438:User/Inc/rosserialInc/ros/node_handle.h ****   void negotiateTopics()
 1656              		.loc 6 438 8 is_stmt 1 view -0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 24
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660              		.loc 6 438 8 is_stmt 0 view .LVU556
 1661 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1662              		.save {r4, r5, r6, r7, lr}
 1663              	.LCFI5:
 1664              		.cfi_def_cfa_offset 20
 1665              		.cfi_offset 4, -20
 1666              		.cfi_offset 5, -16
 1667              		.cfi_offset 6, -12
 1668              		.cfi_offset 7, -8
 1669              		.cfi_offset 14, -4
 1670              		.pad #28
 1671 0002 87B0     		sub	sp, sp, #28
 1672              	.LCFI6:
 1673              		.cfi_def_cfa_offset 48
 1674 0004 0446     		mov	r4, r0
 1675              	.LVL155:
 1676              	.LBB116:
ARM GAS  /tmp/ccr3Zb65.s 			page 55


 1677              	.LBI116:
  34:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****       topic_id(0),
 1678              		.loc 2 34 5 is_stmt 1 view .LVU557
 1679              	.LBB117:
 1680              	.LBB118:
 1681              	.LBB119:
 1682              	.LBI119:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 1683              		.loc 3 46 7 view .LVU558
 1684              	.LBB120:
 1685 0006 334B     		ldr	r3, .L96
 1686 0008 0093     		str	r3, [sp]
 1687              	.LVL156:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 1688              		.loc 3 46 7 is_stmt 0 view .LVU559
 1689              	.LBE120:
 1690              	.LBE119:
  39:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 1691              		.loc 2 39 20 view .LVU560
 1692 000a 334B     		ldr	r3, .L96+4
 1693 000c 0093     		str	r3, [sp]
 1694 000e 0025     		movs	r5, #0
 1695 0010 ADF80450 		strh	r5, [sp, #4]	@ movhi
 1696 0014 314B     		ldr	r3, .L96+8
 1697 0016 0293     		str	r3, [sp, #8]
 1698 0018 0393     		str	r3, [sp, #12]
 1699 001a 0493     		str	r3, [sp, #16]
 1700 001c 0595     		str	r5, [sp, #20]
 1701              	.LVL157:
  39:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 1702              		.loc 2 39 20 view .LVU561
 1703 001e 00E0     		b	.L91
 1704              	.LVL158:
 1705              	.L90:
  39:User/Inc/rosserialInc/rosserial_msgs/TopicInfo.h ****     {
 1706              		.loc 2 39 20 view .LVU562
 1707              	.LBE118:
 1708              	.LBE117:
 1709              	.LBE116:
 439:User/Inc/rosserialInc/ros/node_handle.h ****   {
 440:User/Inc/rosserialInc/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 441:User/Inc/rosserialInc/ros/node_handle.h ****     int i;
 442:User/Inc/rosserialInc/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 1710              		.loc 6 442 5 is_stmt 1 discriminator 2 view .LVU563
 1711 0020 0135     		adds	r5, r5, #1
 1712              	.LVL159:
 1713              	.L91:
 1714              		.loc 6 442 19 discriminator 1 view .LVU564
 1715 0022 182D     		cmp	r5, #24
 1716 0024 25DC     		bgt	.L94
 443:User/Inc/rosserialInc/ros/node_handle.h ****     {
 444:User/Inc/rosserialInc/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 1717              		.loc 6 444 21 is_stmt 0 view .LVU565
 1718 0026 05F5C473 		add	r3, r5, #392
 1719 002a 04EB8303 		add	r3, r4, r3, lsl #2
 1720 002e 5B68     		ldr	r3, [r3, #4]
 1721              		.loc 6 444 7 view .LVU566
ARM GAS  /tmp/ccr3Zb65.s 			page 56


 1722 0030 002B     		cmp	r3, #0
 1723 0032 F5D0     		beq	.L90
 445:User/Inc/rosserialInc/ros/node_handle.h ****       {
 446:User/Inc/rosserialInc/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 1724              		.loc 6 446 38 view .LVU567
 1725 0034 9A68     		ldr	r2, [r3, #8]
 1726              		.loc 6 446 21 view .LVU568
 1727 0036 ADF80420 		strh	r2, [sp, #4]	@ movhi
 447:User/Inc/rosserialInc/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 1728              		.loc 6 447 49 view .LVU569
 1729 003a 1A68     		ldr	r2, [r3]
 1730              		.loc 6 447 23 view .LVU570
 1731 003c 0292     		str	r2, [sp, #8]
 448:User/Inc/rosserialInc/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 1732              		.loc 6 448 51 view .LVU571
 1733 003e 5868     		ldr	r0, [r3, #4]
 1734              		.loc 6 448 64 view .LVU572
 1735 0040 0368     		ldr	r3, [r0]
 1736 0042 9B68     		ldr	r3, [r3, #8]
 1737 0044 9847     		blx	r3
 1738              	.LVL160:
 1739              		.loc 6 448 25 view .LVU573
 1740 0046 0390     		str	r0, [sp, #12]
 449:User/Inc/rosserialInc/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 1741              		.loc 6 449 40 view .LVU574
 1742 0048 05F5C476 		add	r6, r5, #392
 1743 004c 04EB8606 		add	r6, r4, r6, lsl #2
 1744 0050 7368     		ldr	r3, [r6, #4]
 1745              		.loc 6 449 45 view .LVU575
 1746 0052 5868     		ldr	r0, [r3, #4]
 1747              		.loc 6 449 57 view .LVU576
 1748 0054 0368     		ldr	r3, [r0]
 1749 0056 DB68     		ldr	r3, [r3, #12]
 1750 0058 9847     		blx	r3
 1751              	.LVL161:
 1752              		.loc 6 449 19 view .LVU577
 1753 005a 0490     		str	r0, [sp, #16]
 450:User/Inc/rosserialInc/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 1754              		.loc 6 450 24 view .LVU578
 1755 005c 4FF40073 		mov	r3, #512
 1756 0060 0593     		str	r3, [sp, #20]
 451:User/Inc/rosserialInc/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 1757              		.loc 6 451 27 view .LVU579
 1758 0062 7168     		ldr	r1, [r6, #4]
 1759              	.LVL162:
 1760              	.LBB121:
 1761              	.LBI121:
 1762              		.file 7 "User/Inc/rosserialInc/ros/publisher.h"
   1:User/Inc/rosserialInc/ros/publisher.h **** /*
   2:User/Inc/rosserialInc/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/ros/publisher.h ****  *
   4:User/Inc/rosserialInc/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/ros/publisher.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/ros/publisher.h ****  *
   7:User/Inc/rosserialInc/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/ros/publisher.h ****  * are met:
ARM GAS  /tmp/ccr3Zb65.s 			page 57


  10:User/Inc/rosserialInc/ros/publisher.h ****  *
  11:User/Inc/rosserialInc/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/ros/publisher.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/ros/publisher.h ****  *
  21:User/Inc/rosserialInc/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/ros/publisher.h ****  */
  34:User/Inc/rosserialInc/ros/publisher.h **** 
  35:User/Inc/rosserialInc/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:User/Inc/rosserialInc/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:User/Inc/rosserialInc/ros/publisher.h **** 
  38:User/Inc/rosserialInc/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:User/Inc/rosserialInc/ros/publisher.h **** #include "ros/node_handle.h"
  40:User/Inc/rosserialInc/ros/publisher.h **** 
  41:User/Inc/rosserialInc/ros/publisher.h **** namespace ros
  42:User/Inc/rosserialInc/ros/publisher.h **** {
  43:User/Inc/rosserialInc/ros/publisher.h **** 
  44:User/Inc/rosserialInc/ros/publisher.h **** /* Generic Publisher */
  45:User/Inc/rosserialInc/ros/publisher.h **** class Publisher
  46:User/Inc/rosserialInc/ros/publisher.h **** {
  47:User/Inc/rosserialInc/ros/publisher.h **** public:
  48:User/Inc/rosserialInc/ros/publisher.h ****   Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLIS
  49:User/Inc/rosserialInc/ros/publisher.h ****     topic_(topic_name),
  50:User/Inc/rosserialInc/ros/publisher.h ****     msg_(msg),
  51:User/Inc/rosserialInc/ros/publisher.h ****     endpoint_(endpoint) {};
  52:User/Inc/rosserialInc/ros/publisher.h **** 
  53:User/Inc/rosserialInc/ros/publisher.h ****   int publish(const Msg * msg)
  54:User/Inc/rosserialInc/ros/publisher.h ****   {
  55:User/Inc/rosserialInc/ros/publisher.h ****     return nh_->publish(id_, msg);
  56:User/Inc/rosserialInc/ros/publisher.h ****   };
  57:User/Inc/rosserialInc/ros/publisher.h ****   int getEndpointType()
 1763              		.loc 7 57 7 is_stmt 1 view .LVU580
 1764              	.LBB122:
  58:User/Inc/rosserialInc/ros/publisher.h ****   {
  59:User/Inc/rosserialInc/ros/publisher.h ****     return endpoint_;
 1765              		.loc 7 59 5 view .LVU581
 1766              		.loc 7 59 5 is_stmt 0 view .LVU582
 1767              	.LBE122:
 1768              	.LBE121:
 1769              		.loc 6 451 16 view .LVU583
ARM GAS  /tmp/ccr3Zb65.s 			page 58


 1770 0064 2368     		ldr	r3, [r4]
 1771 0066 1B68     		ldr	r3, [r3]
 1772 0068 6A46     		mov	r2, sp
 1773 006a 0969     		ldr	r1, [r1, #16]
 1774 006c 2046     		mov	r0, r4
 1775 006e 9847     		blx	r3
 1776              	.LVL163:
 1777 0070 D6E7     		b	.L90
 1778              	.L94:
 452:User/Inc/rosserialInc/ros/node_handle.h ****       }
 453:User/Inc/rosserialInc/ros/node_handle.h ****     }
 454:User/Inc/rosserialInc/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 1779              		.loc 6 454 12 view .LVU584
 1780 0072 0025     		movs	r5, #0
 1781              	.LVL164:
 1782              		.loc 6 454 12 view .LVU585
 1783 0074 00E0     		b	.L89
 1784              	.LVL165:
 1785              	.L93:
 1786              		.loc 6 454 5 is_stmt 1 discriminator 2 view .LVU586
 1787 0076 0135     		adds	r5, r5, #1
 1788              	.LVL166:
 1789              	.L89:
 1790              		.loc 6 454 19 discriminator 1 view .LVU587
 1791 0078 182D     		cmp	r5, #24
 1792 007a 25DC     		bgt	.L92
 455:User/Inc/rosserialInc/ros/node_handle.h ****     {
 456:User/Inc/rosserialInc/ros/node_handle.h ****       if (subscribers[i] != 0) // non-empty slot
 1793              		.loc 6 456 22 is_stmt 0 view .LVU588
 1794 007c 05F5D173 		add	r3, r5, #418
 1795 0080 54F82300 		ldr	r0, [r4, r3, lsl #2]
 1796              		.loc 6 456 7 view .LVU589
 1797 0084 0028     		cmp	r0, #0
 1798 0086 F6D0     		beq	.L93
 457:User/Inc/rosserialInc/ros/node_handle.h ****       {
 458:User/Inc/rosserialInc/ros/node_handle.h ****         ti.topic_id = subscribers[i]->id_;
 1799              		.loc 6 458 39 view .LVU590
 1800 0088 4368     		ldr	r3, [r0, #4]
 1801              		.loc 6 458 21 view .LVU591
 1802 008a ADF80430 		strh	r3, [sp, #4]	@ movhi
 459:User/Inc/rosserialInc/ros/node_handle.h ****         ti.topic_name = (char *) subscribers[i]->topic_;
 1803              		.loc 6 459 50 view .LVU592
 1804 008e 8368     		ldr	r3, [r0, #8]
 1805              		.loc 6 459 23 view .LVU593
 1806 0090 0293     		str	r3, [sp, #8]
 460:User/Inc/rosserialInc/ros/node_handle.h ****         ti.message_type = (char *) subscribers[i]->getMsgType();
 1807              		.loc 6 460 62 view .LVU594
 1808 0092 0368     		ldr	r3, [r0]
 1809 0094 9B68     		ldr	r3, [r3, #8]
 1810 0096 9847     		blx	r3
 1811              	.LVL167:
 1812              		.loc 6 460 25 view .LVU595
 1813 0098 0390     		str	r0, [sp, #12]
 461:User/Inc/rosserialInc/ros/node_handle.h ****         ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 1814              		.loc 6 461 41 view .LVU596
 1815 009a 05F5D176 		add	r6, r5, #418
 1816 009e 54F82600 		ldr	r0, [r4, r6, lsl #2]
ARM GAS  /tmp/ccr3Zb65.s 			page 59


 1817              		.loc 6 461 55 view .LVU597
 1818 00a2 0368     		ldr	r3, [r0]
 1819 00a4 DB68     		ldr	r3, [r3, #12]
 1820 00a6 9847     		blx	r3
 1821              	.LVL168:
 1822              		.loc 6 461 19 view .LVU598
 1823 00a8 0490     		str	r0, [sp, #16]
 462:User/Inc/rosserialInc/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 1824              		.loc 6 462 24 view .LVU599
 1825 00aa 4FF40073 		mov	r3, #512
 1826 00ae 0593     		str	r3, [sp, #20]
 463:User/Inc/rosserialInc/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 1827              		.loc 6 463 16 view .LVU600
 1828 00b0 2368     		ldr	r3, [r4]
 1829 00b2 1F68     		ldr	r7, [r3]
 1830              		.loc 6 463 28 view .LVU601
 1831 00b4 54F82600 		ldr	r0, [r4, r6, lsl #2]
 1832              		.loc 6 463 48 view .LVU602
 1833 00b8 0368     		ldr	r3, [r0]
 1834 00ba 5B68     		ldr	r3, [r3, #4]
 1835              		.loc 6 463 16 view .LVU603
 1836 00bc 9847     		blx	r3
 1837              	.LVL169:
 1838 00be 0146     		mov	r1, r0
 1839 00c0 6A46     		mov	r2, sp
 1840 00c2 2046     		mov	r0, r4
 1841 00c4 B847     		blx	r7
 1842              	.LVL170:
 1843 00c6 D6E7     		b	.L93
 1844              	.L92:
 464:User/Inc/rosserialInc/ros/node_handle.h ****       }
 465:User/Inc/rosserialInc/ros/node_handle.h ****     }
 466:User/Inc/rosserialInc/ros/node_handle.h ****     configured_ = true;
 1845              		.loc 6 466 17 view .LVU604
 1846 00c8 0123     		movs	r3, #1
 1847 00ca 84F80037 		strb	r3, [r4, #1792]
 467:User/Inc/rosserialInc/ros/node_handle.h ****   }
 1848              		.loc 6 467 3 view .LVU605
 1849 00ce 07B0     		add	sp, sp, #28
 1850              	.LCFI7:
 1851              		.cfi_def_cfa_offset 20
 1852              		@ sp needed
 1853 00d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1854              	.LVL171:
 1855              	.L97:
 1856              		.loc 6 467 3 view .LVU606
 1857 00d2 00BF     		.align	2
 1858              	.L96:
 1859 00d4 08000000 		.word	_ZTVN3ros3MsgE+8
 1860 00d8 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 1861 00dc 00000000 		.word	.LC4
 1862              		.cfi_endproc
 1863              	.LFE452:
 1864              		.fnend
 1866              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%progb
 1867              		.align	1
 1868              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
ARM GAS  /tmp/ccr3Zb65.s 			page 60


 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu softvfp
 1874              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 1875              		.fnstart
 1876              	.LVL172:
 1877              	.LFB450:
 187:User/Inc/rosserialInc/ros/node_handle.h ****   {
 1878              		.loc 6 187 15 is_stmt 1 view -0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 16
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 187:User/Inc/rosserialInc/ros/node_handle.h ****   {
 1882              		.loc 6 187 15 is_stmt 0 view .LVU608
 1883 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1884              		.save {r4, r5, r6, r7, r8, r9, lr}
 1885              	.LCFI8:
 1886              		.cfi_def_cfa_offset 28
 1887              		.cfi_offset 4, -28
 1888              		.cfi_offset 5, -24
 1889              		.cfi_offset 6, -20
 1890              		.cfi_offset 7, -16
 1891              		.cfi_offset 8, -12
 1892              		.cfi_offset 9, -8
 1893              		.cfi_offset 14, -4
 1894              		.pad #20
 1895 0004 85B0     		sub	sp, sp, #20
 1896              	.LCFI9:
 1897              		.cfi_def_cfa_offset 48
 1898 0006 0446     		mov	r4, r0
 190:User/Inc/rosserialInc/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 1899              		.loc 6 190 37 view .LVU609
 1900 0008 051D     		adds	r5, r0, #4
 1901              	.LVL173:
 1902              	.LBB190:
 1903              	.LBI190:
 1904              		.file 8 "User/Inc/rosserialInc/STM32Hardware.h"
   1:User/Inc/rosserialInc/STM32Hardware.h **** /* 
   2:User/Inc/rosserialInc/STM32Hardware.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/STM32Hardware.h ****  *
   4:User/Inc/rosserialInc/STM32Hardware.h ****  * Copyright (c) 2018, Kenta Yonekura (a.k.a. yoneken)
   5:User/Inc/rosserialInc/STM32Hardware.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/STM32Hardware.h ****  *
   7:User/Inc/rosserialInc/STM32Hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/STM32Hardware.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/STM32Hardware.h ****  * are met:
  10:User/Inc/rosserialInc/STM32Hardware.h ****  *
  11:User/Inc/rosserialInc/STM32Hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/STM32Hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/STM32Hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/STM32Hardware.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/STM32Hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/STM32Hardware.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/STM32Hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/STM32Hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/STM32Hardware.h ****  *    from this software without specific prior written permission.
ARM GAS  /tmp/ccr3Zb65.s 			page 61


  20:User/Inc/rosserialInc/STM32Hardware.h ****  *
  21:User/Inc/rosserialInc/STM32Hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/STM32Hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/STM32Hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/STM32Hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/STM32Hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:User/Inc/rosserialInc/STM32Hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/STM32Hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/STM32Hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/STM32Hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/STM32Hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/STM32Hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/STM32Hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/STM32Hardware.h ****  */
  34:User/Inc/rosserialInc/STM32Hardware.h **** 
  35:User/Inc/rosserialInc/STM32Hardware.h **** #ifndef ROS_STM32_HARDWARE_H_
  36:User/Inc/rosserialInc/STM32Hardware.h **** #define ROS_STM32_HARDWARE_H_
  37:User/Inc/rosserialInc/STM32Hardware.h **** 
  38:User/Inc/rosserialInc/STM32Hardware.h **** 
  39:User/Inc/rosserialInc/STM32Hardware.h **** //try #include "stm32f1xx_hal.h" if this doesn't work
  40:User/Inc/rosserialInc/STM32Hardware.h **** #include "main.h"
  41:User/Inc/rosserialInc/STM32Hardware.h **** 
  42:User/Inc/rosserialInc/STM32Hardware.h **** /**********************************  Configuration    ************************************/
  43:User/Inc/rosserialInc/STM32Hardware.h **** 
  44:User/Inc/rosserialInc/STM32Hardware.h **** #define RxBufLen  256     //suit your needs
  45:User/Inc/rosserialInc/STM32Hardware.h **** 
  46:User/Inc/rosserialInc/STM32Hardware.h **** #define TxBufLen  256     //suit your needs
  47:User/Inc/rosserialInc/STM32Hardware.h **** 
  48:User/Inc/rosserialInc/STM32Hardware.h **** /**********************************  Configuration end************************************/
  49:User/Inc/rosserialInc/STM32Hardware.h **** 
  50:User/Inc/rosserialInc/STM32Hardware.h **** 
  51:User/Inc/rosserialInc/STM32Hardware.h **** class STM32Hardware {
  52:User/Inc/rosserialInc/STM32Hardware.h ****   protected:
  53:User/Inc/rosserialInc/STM32Hardware.h ****     UART_HandleTypeDef *roshuart;
  54:User/Inc/rosserialInc/STM32Hardware.h **** 
  55:User/Inc/rosserialInc/STM32Hardware.h ****     const static int rbuflen = RxBufLen;
  56:User/Inc/rosserialInc/STM32Hardware.h ****     uint8_t rbuf[rbuflen];
  57:User/Inc/rosserialInc/STM32Hardware.h ****     int rind;
  58:User/Inc/rosserialInc/STM32Hardware.h ****     inline int getRdmaInd(void){ return (rbuflen - (int)__HAL_DMA_GET_COUNTER(roshuart->hdmarx)) & 
  59:User/Inc/rosserialInc/STM32Hardware.h **** 
  60:User/Inc/rosserialInc/STM32Hardware.h ****     const static int tbuflen = TxBufLen;
  61:User/Inc/rosserialInc/STM32Hardware.h ****     uint8_t tbuf[tbuflen];
  62:User/Inc/rosserialInc/STM32Hardware.h ****     int twind, tfind;
  63:User/Inc/rosserialInc/STM32Hardware.h **** 
  64:User/Inc/rosserialInc/STM32Hardware.h ****   public:
  65:User/Inc/rosserialInc/STM32Hardware.h **** 
  66:User/Inc/rosserialInc/STM32Hardware.h ****     STM32Hardware():
  67:User/Inc/rosserialInc/STM32Hardware.h ****       roshuart(0), rind(0), twind(0), tfind(0){ //we dont define port here, but addtionally call se
  68:User/Inc/rosserialInc/STM32Hardware.h ****     }
  69:User/Inc/rosserialInc/STM32Hardware.h **** 
  70:User/Inc/rosserialInc/STM32Hardware.h ****     STM32Hardware(UART_HandleTypeDef *huart_):
  71:User/Inc/rosserialInc/STM32Hardware.h ****       roshuart(huart_), rind(0), twind(0), tfind(0){
  72:User/Inc/rosserialInc/STM32Hardware.h ****     }
  73:User/Inc/rosserialInc/STM32Hardware.h ****   
  74:User/Inc/rosserialInc/STM32Hardware.h ****     void init(){
  75:User/Inc/rosserialInc/STM32Hardware.h ****       reset_rbuf();
  76:User/Inc/rosserialInc/STM32Hardware.h ****     }
ARM GAS  /tmp/ccr3Zb65.s 			page 62


  77:User/Inc/rosserialInc/STM32Hardware.h **** 
  78:User/Inc/rosserialInc/STM32Hardware.h ****     void init(char *huart_){
  79:User/Inc/rosserialInc/STM32Hardware.h ****     	roshuart = (UART_HandleTypeDef *)huart_;
  80:User/Inc/rosserialInc/STM32Hardware.h ****     	init();
  81:User/Inc/rosserialInc/STM32Hardware.h ****     }
  82:User/Inc/rosserialInc/STM32Hardware.h ****     void reset_rbuf(void){
  83:User/Inc/rosserialInc/STM32Hardware.h ****       HAL_UART_Receive_DMA(roshuart, rbuf, rbuflen);
  84:User/Inc/rosserialInc/STM32Hardware.h ****     }
  85:User/Inc/rosserialInc/STM32Hardware.h **** 
  86:User/Inc/rosserialInc/STM32Hardware.h ****     int read(){
  87:User/Inc/rosserialInc/STM32Hardware.h ****       int c = -1;
  88:User/Inc/rosserialInc/STM32Hardware.h ****       if(rind != getRdmaInd()){
  89:User/Inc/rosserialInc/STM32Hardware.h ****         c = rbuf[rind++];
  90:User/Inc/rosserialInc/STM32Hardware.h ****         rind &= rbuflen - 1;
  91:User/Inc/rosserialInc/STM32Hardware.h ****       }
  92:User/Inc/rosserialInc/STM32Hardware.h ****       return c;
  93:User/Inc/rosserialInc/STM32Hardware.h ****     }
  94:User/Inc/rosserialInc/STM32Hardware.h **** 
  95:User/Inc/rosserialInc/STM32Hardware.h ****     void flush(void){
  96:User/Inc/rosserialInc/STM32Hardware.h ****       static bool mutex = false;
  97:User/Inc/rosserialInc/STM32Hardware.h **** 
  98:User/Inc/rosserialInc/STM32Hardware.h ****       if((roshuart->gState == HAL_UART_STATE_READY) && !mutex){
  99:User/Inc/rosserialInc/STM32Hardware.h ****         mutex = true;
 100:User/Inc/rosserialInc/STM32Hardware.h **** 
 101:User/Inc/rosserialInc/STM32Hardware.h ****         if(twind != tfind){
 102:User/Inc/rosserialInc/STM32Hardware.h ****         	int32_t len = tfind < twind ? twind - tfind : tbuflen - tfind;
 103:User/Inc/rosserialInc/STM32Hardware.h ****           HAL_UART_Transmit_DMA(roshuart, &(tbuf[tfind]), len);
 104:User/Inc/rosserialInc/STM32Hardware.h ****           tfind = (tfind + len) & (tbuflen - 1);
 105:User/Inc/rosserialInc/STM32Hardware.h ****         }
 106:User/Inc/rosserialInc/STM32Hardware.h ****         mutex = false;
 107:User/Inc/rosserialInc/STM32Hardware.h ****       }
 108:User/Inc/rosserialInc/STM32Hardware.h ****     }
 109:User/Inc/rosserialInc/STM32Hardware.h **** 
 110:User/Inc/rosserialInc/STM32Hardware.h ****     void write(uint8_t* data, int length){
 111:User/Inc/rosserialInc/STM32Hardware.h ****       int n = length;
 112:User/Inc/rosserialInc/STM32Hardware.h ****       n = n <= tbuflen ? n : tbuflen;
 113:User/Inc/rosserialInc/STM32Hardware.h **** 
 114:User/Inc/rosserialInc/STM32Hardware.h ****       int n_tail = n <= tbuflen - twind ? n : tbuflen - twind;
 115:User/Inc/rosserialInc/STM32Hardware.h ****       memcpy(&(tbuf[twind]), data, n_tail);
 116:User/Inc/rosserialInc/STM32Hardware.h ****       twind = (twind + n) & (tbuflen - 1);
 117:User/Inc/rosserialInc/STM32Hardware.h **** 
 118:User/Inc/rosserialInc/STM32Hardware.h ****       if(n != n_tail){
 119:User/Inc/rosserialInc/STM32Hardware.h ****         memcpy(tbuf, &(data[n_tail]), n - n_tail);
 120:User/Inc/rosserialInc/STM32Hardware.h ****       }
 121:User/Inc/rosserialInc/STM32Hardware.h **** 
 122:User/Inc/rosserialInc/STM32Hardware.h ****       flush();
 123:User/Inc/rosserialInc/STM32Hardware.h ****     }
 124:User/Inc/rosserialInc/STM32Hardware.h **** 
 125:User/Inc/rosserialInc/STM32Hardware.h **** 
 126:User/Inc/rosserialInc/STM32Hardware.h **** 
 127:User/Inc/rosserialInc/STM32Hardware.h **** 
 128:User/Inc/rosserialInc/STM32Hardware.h **** 
 129:User/Inc/rosserialInc/STM32Hardware.h ****     unsigned long time(){ return HAL_GetTick();; }
 1905              		.loc 8 129 19 is_stmt 1 view .LVU610
 1906              	.LBB191:
 1907              		.loc 8 129 27 view .LVU611
 1908              		.loc 8 129 45 is_stmt 0 view .LVU612
ARM GAS  /tmp/ccr3Zb65.s 			page 63


 1909 000a FFF7FEFF 		bl	HAL_GetTick
 1910              	.LVL174:
 1911              		.loc 8 129 45 view .LVU613
 1912 000e 0646     		mov	r6, r0
 1913              		.loc 8 129 48 is_stmt 1 view .LVU614
 1914              	.LVL175:
 1915              		.loc 8 129 48 is_stmt 0 view .LVU615
 1916              	.LBE191:
 1917              	.LBE190:
 191:User/Inc/rosserialInc/ros/node_handle.h ****     {
 1918              		.loc 6 191 19 view .LVU616
 1919 0010 D4F80837 		ldr	r3, [r4, #1800]
 191:User/Inc/rosserialInc/ros/node_handle.h ****     {
 1920              		.loc 6 191 17 view .LVU617
 1921 0014 C31A     		subs	r3, r0, r3
 191:User/Inc/rosserialInc/ros/node_handle.h ****     {
 1922              		.loc 6 191 5 view .LVU618
 1923 0016 42F6F822 		movw	r2, #11000
 1924 001a 9342     		cmp	r3, r2
 1925 001c 02D9     		bls	.L99
 193:User/Inc/rosserialInc/ros/node_handle.h ****     }
 1926              		.loc 6 193 19 view .LVU619
 1927 001e 0023     		movs	r3, #0
 1928 0020 84F80037 		strb	r3, [r4, #1792]
 1929              	.L99:
 197:User/Inc/rosserialInc/ros/node_handle.h ****     {
 1930              		.loc 6 197 9 view .LVU620
 1931 0024 D4F8EC36 		ldr	r3, [r4, #1772]
 197:User/Inc/rosserialInc/ros/node_handle.h ****     {
 1932              		.loc 6 197 5 view .LVU621
 1933 0028 DBB1     		cbz	r3, .L101
 199:User/Inc/rosserialInc/ros/node_handle.h ****       {
 1934              		.loc 6 199 20 view .LVU622
 1935 002a D4F80C37 		ldr	r3, [r4, #1804]
 199:User/Inc/rosserialInc/ros/node_handle.h ****       {
 1936              		.loc 6 199 7 view .LVU623
 1937 002e B342     		cmp	r3, r6
 1938 0030 17D2     		bcs	.L101
 201:User/Inc/rosserialInc/ros/node_handle.h ****       }
 1939              		.loc 6 201 15 view .LVU624
 1940 0032 0023     		movs	r3, #0
 1941 0034 C4F8EC36 		str	r3, [r4, #1772]
 1942 0038 13E0     		b	.L101
 1943              	.LVL176:
 1944              	.L123:
 1945              	.LBB192:
 1946              	.LBB193:
 1947              	.LBB194:
  87:User/Inc/rosserialInc/STM32Hardware.h ****       if(rind != getRdmaInd()){
 1948              		.loc 8 87 11 view .LVU625
 1949 003a 4FF0FF31 		mov	r1, #-1
 1950 003e 2DE0     		b	.L104
 1951              	.LVL177:
 1952              	.L127:
  87:User/Inc/rosserialInc/STM32Hardware.h ****       if(rind != getRdmaInd()){
 1953              		.loc 8 87 11 view .LVU626
 1954              	.LBE194:
ARM GAS  /tmp/ccr3Zb65.s 			page 64


 1955              	.LBE193:
 227:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_--;
 1956              		.loc 6 227 20 view .LVU627
 1957 0040 D4F8F836 		ldr	r3, [r4, #1784]
 227:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_--;
 1958              		.loc 6 227 19 view .LVU628
 1959 0044 5A1C     		adds	r2, r3, #1
 1960 0046 C4F8F826 		str	r2, [r4, #1784]
 227:User/Inc/rosserialInc/ros/node_handle.h ****         bytes_--;
 1961              		.loc 6 227 30 view .LVU629
 1962 004a 2344     		add	r3, r3, r4
 1963 004c 83F82412 		strb	r1, [r3, #548]
 228:User/Inc/rosserialInc/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 1964              		.loc 6 228 9 view .LVU630
 1965 0050 D4F8F036 		ldr	r3, [r4, #1776]
 1966 0054 013B     		subs	r3, r3, #1
 1967 0056 C4F8F036 		str	r3, [r4, #1776]
 229:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 1968              		.loc 6 229 9 view .LVU631
 1969 005a 13B9     		cbnz	r3, .L101
 230:User/Inc/rosserialInc/ros/node_handle.h ****       }
 1970              		.loc 6 230 17 view .LVU632
 1971 005c 0823     		movs	r3, #8
 1972 005e C4F8EC36 		str	r3, [r4, #1772]
 1973              	.LVL178:
 1974              	.L101:
 209:User/Inc/rosserialInc/ros/node_handle.h ****       {
 1975              		.loc 6 209 11 view .LVU633
 1976 0062 D4F82032 		ldr	r3, [r4, #544]
 209:User/Inc/rosserialInc/ros/node_handle.h ****       {
 1977              		.loc 6 209 7 view .LVU634
 1978 0066 3BB1     		cbz	r3, .L102
 1979              	.LVL179:
 1980              	.LBB198:
 1981              	.LBI198:
 1982              		.loc 8 129 19 is_stmt 1 view .LVU635
 1983              	.LBB199:
 1984              		.loc 8 129 27 view .LVU636
 1985              		.loc 8 129 45 is_stmt 0 view .LVU637
 1986 0068 FFF7FEFF 		bl	HAL_GetTick
 1987              	.LVL180:
 1988              		.loc 8 129 48 is_stmt 1 view .LVU638
 1989              		.loc 8 129 48 is_stmt 0 view .LVU639
 1990              	.LBE199:
 1991              	.LBE198:
 215:User/Inc/rosserialInc/ros/node_handle.h ****         {
 1992              		.loc 6 215 31 view .LVU640
 1993 006c 801B     		subs	r0, r0, r6
 215:User/Inc/rosserialInc/ros/node_handle.h ****         {
 1994              		.loc 6 215 43 view .LVU641
 1995 006e D4F82032 		ldr	r3, [r4, #544]
 215:User/Inc/rosserialInc/ros/node_handle.h ****         {
 1996              		.loc 6 215 9 view .LVU642
 1997 0072 9842     		cmp	r0, r3
 1998 0074 00F26A81 		bhi	.L122
 1999              	.L102:
 2000              	.LVL181:
ARM GAS  /tmp/ccr3Zb65.s 			page 65


 2001              	.LBB200:
 2002              	.LBI193:
  86:User/Inc/rosserialInc/STM32Hardware.h ****       int c = -1;
 2003              		.loc 8 86 9 is_stmt 1 view .LVU643
 2004              	.LBB197:
  87:User/Inc/rosserialInc/STM32Hardware.h ****       if(rind != getRdmaInd()){
 2005              		.loc 8 87 7 view .LVU644
  88:User/Inc/rosserialInc/STM32Hardware.h ****         c = rbuf[rind++];
 2006              		.loc 8 88 7 view .LVU645
  88:User/Inc/rosserialInc/STM32Hardware.h ****         c = rbuf[rind++];
 2007              		.loc 8 88 10 is_stmt 0 view .LVU646
 2008 0078 D5F80421 		ldr	r2, [r5, #260]
 2009              	.LVL182:
 2010              	.LBB195:
 2011              	.LBI195:
  58:User/Inc/rosserialInc/STM32Hardware.h **** 
 2012              		.loc 8 58 16 is_stmt 1 view .LVU647
 2013              	.LBB196:
  58:User/Inc/rosserialInc/STM32Hardware.h **** 
 2014              		.loc 8 58 34 view .LVU648
  58:User/Inc/rosserialInc/STM32Hardware.h **** 
 2015              		.loc 8 58 57 is_stmt 0 view .LVU649
 2016 007c 2B68     		ldr	r3, [r5]
 2017 007e 9B6B     		ldr	r3, [r3, #56]
 2018 0080 1B68     		ldr	r3, [r3]
 2019 0082 5B68     		ldr	r3, [r3, #4]
  58:User/Inc/rosserialInc/STM32Hardware.h **** 
 2020              		.loc 8 58 112 view .LVU650
 2021 0084 5B42     		rsbs	r3, r3, #0
 2022 0086 DBB2     		uxtb	r3, r3
 2023              	.LVL183:
  58:User/Inc/rosserialInc/STM32Hardware.h **** 
 2024              		.loc 8 58 112 view .LVU651
 2025              	.LBE196:
 2026              	.LBE195:
  88:User/Inc/rosserialInc/STM32Hardware.h ****         c = rbuf[rind++];
 2027              		.loc 8 88 7 view .LVU652
 2028 0088 9A42     		cmp	r2, r3
 2029 008a D6D0     		beq	.L123
  89:User/Inc/rosserialInc/STM32Hardware.h ****         rind &= rbuflen - 1;
 2030              		.loc 8 89 9 is_stmt 1 view .LVU653
  89:User/Inc/rosserialInc/STM32Hardware.h ****         rind &= rbuflen - 1;
 2031              		.loc 8 89 22 is_stmt 0 view .LVU654
 2032 008c 531C     		adds	r3, r2, #1
 2033 008e C5F80431 		str	r3, [r5, #260]
  89:User/Inc/rosserialInc/STM32Hardware.h ****         rind &= rbuflen - 1;
 2034              		.loc 8 89 24 view .LVU655
 2035 0092 2A44     		add	r2, r2, r5
 2036 0094 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 2037              	.LVL184:
  90:User/Inc/rosserialInc/STM32Hardware.h ****       }
 2038              		.loc 8 90 9 is_stmt 1 view .LVU656
  90:User/Inc/rosserialInc/STM32Hardware.h ****       }
 2039              		.loc 8 90 14 is_stmt 0 view .LVU657
 2040 0096 DBB2     		uxtb	r3, r3
 2041 0098 C5F80431 		str	r3, [r5, #260]
 2042              	.LVL185:
ARM GAS  /tmp/ccr3Zb65.s 			page 66


 2043              	.L104:
  92:User/Inc/rosserialInc/STM32Hardware.h ****     }
 2044              		.loc 8 92 7 is_stmt 1 view .LVU658
  92:User/Inc/rosserialInc/STM32Hardware.h ****     }
 2045              		.loc 8 92 7 is_stmt 0 view .LVU659
 2046              	.LBE197:
 2047              	.LBE200:
 222:User/Inc/rosserialInc/ros/node_handle.h ****         break;
 2048              		.loc 6 222 7 view .LVU660
 2049 009c 0029     		cmp	r1, #0
 2050 009e C0F23481 		blt	.L105
 224:User/Inc/rosserialInc/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 2051              		.loc 6 224 17 view .LVU661
 2052 00a2 D4F8FC26 		ldr	r2, [r4, #1788]
 2053 00a6 0A44     		add	r2, r2, r1
 2054 00a8 C4F8FC26 		str	r2, [r4, #1788]
 225:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2055              		.loc 6 225 11 view .LVU662
 2056 00ac D4F8EC36 		ldr	r3, [r4, #1772]
 225:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2057              		.loc 6 225 7 view .LVU663
 2058 00b0 072B     		cmp	r3, #7
 2059 00b2 C5D0     		beq	.L127
 232:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2060              		.loc 6 232 12 view .LVU664
 2061 00b4 B3B9     		cbnz	r3, .L108
 234:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2062              		.loc 6 234 9 view .LVU665
 2063 00b6 FF29     		cmp	r1, #255
 2064 00b8 07D1     		bne	.L109
 236:User/Inc/rosserialInc/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 2065              		.loc 6 236 11 view .LVU666
 2066 00ba 0133     		adds	r3, r3, #1
 2067 00bc C4F8EC36 		str	r3, [r4, #1772]
 237:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2068              		.loc 6 237 42 view .LVU667
 2069 00c0 06F11403 		add	r3, r6, #20
 237:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2070              		.loc 6 237 33 view .LVU668
 2071 00c4 C4F80C37 		str	r3, [r4, #1804]
 2072 00c8 CBE7     		b	.L101
 2073              	.L109:
 2074              	.LVL186:
 2075              	.LBB201:
 2076              	.LBI201:
 2077              		.loc 8 129 19 is_stmt 1 view .LVU669
 2078              	.LBB202:
 2079              		.loc 8 129 27 view .LVU670
 2080              		.loc 8 129 45 is_stmt 0 view .LVU671
 2081 00ca FFF7FEFF 		bl	HAL_GetTick
 2082              	.LVL187:
 2083              		.loc 8 129 48 is_stmt 1 view .LVU672
 2084              		.loc 8 129 48 is_stmt 0 view .LVU673
 2085              	.LBE202:
 2086              	.LBE201:
 239:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2087              		.loc 6 239 35 view .LVU674
ARM GAS  /tmp/ccr3Zb65.s 			page 67


 2088 00ce 801B     		subs	r0, r0, r6
 239:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2089              		.loc 6 239 14 view .LVU675
 2090 00d0 41F28833 		movw	r3, #5000
 2091 00d4 9842     		cmp	r0, r3
 2092 00d6 C4D9     		bls	.L101
 242:User/Inc/rosserialInc/ros/node_handle.h ****           return SPIN_TIMEOUT;
 2093              		.loc 6 242 23 view .LVU676
 2094 00d8 0023     		movs	r3, #0
 2095 00da 84F80037 		strb	r3, [r4, #1792]
 243:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2096              		.loc 6 243 18 view .LVU677
 2097 00de 6FF00100 		mvn	r0, #1
 2098 00e2 35E1     		b	.L98
 2099              	.LVL188:
 2100              	.L108:
 246:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2101              		.loc 6 246 12 view .LVU678
 2102 00e4 012B     		cmp	r3, #1
 2103 00e6 2ED0     		beq	.L128
 259:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2104              		.loc 6 259 12 view .LVU679
 2105 00e8 022B     		cmp	r3, #2
 2106 00ea 4BD0     		beq	.L129
 266:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2107              		.loc 6 266 12 view .LVU680
 2108 00ec 032B     		cmp	r3, #3
 2109 00ee 54D0     		beq	.L130
 271:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2110              		.loc 6 271 12 view .LVU681
 2111 00f0 042B     		cmp	r3, #4
 2112 00f2 5CD0     		beq	.L131
 278:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2113              		.loc 6 278 12 view .LVU682
 2114 00f4 052B     		cmp	r3, #5
 2115 00f6 69D0     		beq	.L132
 284:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2116              		.loc 6 284 12 view .LVU683
 2117 00f8 062B     		cmp	r3, #6
 2118 00fa 6FD0     		beq	.L133
 291:User/Inc/rosserialInc/ros/node_handle.h ****       {
 2119              		.loc 6 291 12 view .LVU684
 2120 00fc 082B     		cmp	r3, #8
 2121 00fe B0D1     		bne	.L101
 293:User/Inc/rosserialInc/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 2122              		.loc 6 293 15 view .LVU685
 2123 0100 0023     		movs	r3, #0
 2124 0102 C4F8EC36 		str	r3, [r4, #1772]
 294:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2125              		.loc 6 294 24 view .LVU686
 2126 0106 9B1A     		subs	r3, r3, r2
 2127 0108 D2B2     		uxtb	r2, r2
 2128 010a DBB2     		uxtb	r3, r3
 2129 010c 58BF     		it	pl
 2130 010e 5A42     		rsbpl	r2, r3, #0
 294:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2131              		.loc 6 294 9 view .LVU687
ARM GAS  /tmp/ccr3Zb65.s 			page 68


 2132 0110 FF2A     		cmp	r2, #255
 2133 0112 A6D1     		bne	.L101
 296:User/Inc/rosserialInc/ros/node_handle.h ****           {
 2134              		.loc 6 296 15 view .LVU688
 2135 0114 D4F8F436 		ldr	r3, [r4, #1780]
 296:User/Inc/rosserialInc/ros/node_handle.h ****           {
 2136              		.loc 6 296 11 view .LVU689
 2137 0118 002B     		cmp	r3, #0
 2138 011a 71D0     		beq	.L134
 304:User/Inc/rosserialInc/ros/node_handle.h ****           {
 2139              		.loc 6 304 16 view .LVU690
 2140 011c 0A2B     		cmp	r3, #10
 2141 011e 00F08A80 		beq	.L135
 308:User/Inc/rosserialInc/ros/node_handle.h ****           {
 2142              		.loc 6 308 16 view .LVU691
 2143 0122 062B     		cmp	r3, #6
 2144 0124 00F0E380 		beq	.L136
 313:User/Inc/rosserialInc/ros/node_handle.h ****           {
 2145              		.loc 6 313 16 view .LVU692
 2146 0128 0B2B     		cmp	r3, #11
 2147 012a 00F0EA80 		beq	.L137
 319:User/Inc/rosserialInc/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 2148              		.loc 6 319 28 view .LVU693
 2149 012e 03F59F73 		add	r3, r3, #318
 2150 0132 54F82300 		ldr	r0, [r4, r3, lsl #2]
 319:User/Inc/rosserialInc/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 2151              		.loc 6 319 13 view .LVU694
 2152 0136 0028     		cmp	r0, #0
 2153 0138 93D0     		beq	.L101
 320:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2154              		.loc 6 320 50 view .LVU695
 2155 013a 0368     		ldr	r3, [r0]
 2156 013c 1B68     		ldr	r3, [r3]
 2157 013e 04F50971 		add	r1, r4, #548
 2158              	.LVL189:
 320:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2159              		.loc 6 320 50 view .LVU696
 2160 0142 9847     		blx	r3
 2161              	.LVL190:
 2162 0144 8DE7     		b	.L101
 2163              	.LVL191:
 2164              	.L128:
 248:User/Inc/rosserialInc/ros/node_handle.h ****         {
 2165              		.loc 6 248 9 view .LVU697
 2166 0146 FE29     		cmp	r1, #254
 2167 0148 18D0     		beq	.L138
 254:User/Inc/rosserialInc/ros/node_handle.h ****           if (configured_ == false)
 2168              		.loc 6 254 17 view .LVU698
 2169 014a 0023     		movs	r3, #0
 2170 014c C4F8EC36 		str	r3, [r4, #1772]
 255:User/Inc/rosserialInc/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 2171              		.loc 6 255 15 view .LVU699
 2172 0150 94F80037 		ldrb	r3, [r4, #1792]	@ zero_extendqisi2
 255:User/Inc/rosserialInc/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 2173              		.loc 6 255 11 view .LVU700
 2174 0154 002B     		cmp	r3, #0
 2175 0156 84D1     		bne	.L101
ARM GAS  /tmp/ccr3Zb65.s 			page 69


 2176              	.LVL192:
 2177              	.LBB203:
 2178              	.LBI203:
 347:User/Inc/rosserialInc/ros/node_handle.h ****   {
 2179              		.loc 6 347 8 is_stmt 1 view .LVU701
 2180              	.LBB204:
 2181              	.LBB205:
 2182              	.LBI205:
  19:User/Inc/rosserialInc/std_msgs/Time.h ****       data()
 2183              		.loc 1 19 5 view .LVU702
 2184              	.LBB206:
 2185              	.LBB207:
 2186              	.LBB208:
 2187              	.LBI208:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2188              		.loc 3 46 7 view .LVU703
 2189              	.LBB209:
 2190 0158 804B     		ldr	r3, .L141
 2191 015a 0193     		str	r3, [sp, #4]
 2192              	.LVL193:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2193              		.loc 3 46 7 is_stmt 0 view .LVU704
 2194              	.LBE209:
 2195              	.LBE208:
  20:User/Inc/rosserialInc/std_msgs/Time.h ****     {
 2196              		.loc 1 20 12 view .LVU705
 2197 015c 804B     		ldr	r3, .L141+4
 2198 015e 0193     		str	r3, [sp, #4]
 2199              	.LVL194:
 2200              	.LBB210:
 2201              	.LBI210:
 2202              		.file 9 "User/Inc/rosserialInc/ros/time.h"
   1:User/Inc/rosserialInc/ros/time.h **** /*
   2:User/Inc/rosserialInc/ros/time.h ****  * Software License Agreement (BSD License)
   3:User/Inc/rosserialInc/ros/time.h ****  *
   4:User/Inc/rosserialInc/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:User/Inc/rosserialInc/ros/time.h ****  * All rights reserved.
   6:User/Inc/rosserialInc/ros/time.h ****  *
   7:User/Inc/rosserialInc/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:User/Inc/rosserialInc/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:User/Inc/rosserialInc/ros/time.h ****  * are met:
  10:User/Inc/rosserialInc/ros/time.h ****  *
  11:User/Inc/rosserialInc/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:User/Inc/rosserialInc/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:User/Inc/rosserialInc/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:User/Inc/rosserialInc/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:User/Inc/rosserialInc/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:User/Inc/rosserialInc/ros/time.h ****  *    with the distribution.
  17:User/Inc/rosserialInc/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:User/Inc/rosserialInc/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:User/Inc/rosserialInc/ros/time.h ****  *    from this software without specific prior written permission.
  20:User/Inc/rosserialInc/ros/time.h ****  *
  21:User/Inc/rosserialInc/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:User/Inc/rosserialInc/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:User/Inc/rosserialInc/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:User/Inc/rosserialInc/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:User/Inc/rosserialInc/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
ARM GAS  /tmp/ccr3Zb65.s 			page 70


  26:User/Inc/rosserialInc/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:User/Inc/rosserialInc/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:User/Inc/rosserialInc/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:User/Inc/rosserialInc/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:User/Inc/rosserialInc/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:User/Inc/rosserialInc/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:User/Inc/rosserialInc/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:User/Inc/rosserialInc/ros/time.h ****  */
  34:User/Inc/rosserialInc/ros/time.h **** 
  35:User/Inc/rosserialInc/ros/time.h **** #ifndef ROS_TIME_H_
  36:User/Inc/rosserialInc/ros/time.h **** #define ROS_TIME_H_
  37:User/Inc/rosserialInc/ros/time.h **** 
  38:User/Inc/rosserialInc/ros/time.h **** #include "ros/duration.h"
  39:User/Inc/rosserialInc/ros/time.h **** #include <math.h>
  40:User/Inc/rosserialInc/ros/time.h **** #include <stdint.h>
  41:User/Inc/rosserialInc/ros/time.h **** 
  42:User/Inc/rosserialInc/ros/time.h **** namespace ros
  43:User/Inc/rosserialInc/ros/time.h **** {
  44:User/Inc/rosserialInc/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:User/Inc/rosserialInc/ros/time.h **** 
  46:User/Inc/rosserialInc/ros/time.h **** class Time
  47:User/Inc/rosserialInc/ros/time.h **** {
  48:User/Inc/rosserialInc/ros/time.h **** public:
  49:User/Inc/rosserialInc/ros/time.h ****   uint32_t sec, nsec;
  50:User/Inc/rosserialInc/ros/time.h **** 
  51:User/Inc/rosserialInc/ros/time.h ****   Time() : sec(0), nsec(0) {}
 2203              		.loc 9 51 3 is_stmt 1 view .LVU706
 2204              	.LBB211:
 2205              	.LBB212:
 2206              		.loc 9 51 26 is_stmt 0 view .LVU707
 2207 0160 0023     		movs	r3, #0
 2208 0162 0293     		str	r3, [sp, #8]
 2209 0164 0393     		str	r3, [sp, #12]
 2210              	.LVL195:
 2211              		.loc 9 51 26 view .LVU708
 2212              	.LBE212:
 2213              	.LBE211:
 2214              	.LBE210:
 2215              	.LBE207:
 2216              	.LBE206:
 2217              	.LBE205:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2218              		.loc 6 350 12 view .LVU709
 2219 0166 2368     		ldr	r3, [r4]
 2220 0168 1B68     		ldr	r3, [r3]
 2221 016a 01AA     		add	r2, sp, #4
 2222 016c 0A21     		movs	r1, #10
 2223              	.LVL196:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2224              		.loc 6 350 12 view .LVU710
 2225 016e 2046     		mov	r0, r4
 2226 0170 9847     		blx	r3
 2227              	.LVL197:
 2228              	.LBB213:
 2229              	.LBI213:
 2230              		.loc 8 129 19 is_stmt 1 view .LVU711
 2231              	.LBB214:
ARM GAS  /tmp/ccr3Zb65.s 			page 71


 2232              		.loc 8 129 27 view .LVU712
 2233              		.loc 8 129 45 is_stmt 0 view .LVU713
 2234 0172 FFF7FEFF 		bl	HAL_GetTick
 2235              	.LVL198:
 2236              		.loc 8 129 48 is_stmt 1 view .LVU714
 2237              		.loc 8 129 48 is_stmt 0 view .LVU715
 2238              	.LBE214:
 2239              	.LBE213:
 351:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2240              		.loc 6 351 13 view .LVU716
 2241 0176 C4F81402 		str	r0, [r4, #532]
 352:User/Inc/rosserialInc/ros/node_handle.h **** 
 2242              		.loc 6 352 3 view .LVU717
 2243 017a 72E7     		b	.L101
 2244              	.LVL199:
 2245              	.L138:
 352:User/Inc/rosserialInc/ros/node_handle.h **** 
 2246              		.loc 6 352 3 view .LVU718
 2247              	.LBE204:
 2248              	.LBE203:
 250:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2249              		.loc 6 250 11 view .LVU719
 2250 017c 0133     		adds	r3, r3, #1
 2251 017e C4F8EC36 		str	r3, [r4, #1772]
 2252 0182 6EE7     		b	.L101
 2253              	.L129:
 261:User/Inc/rosserialInc/ros/node_handle.h ****         index_ = 0;
 2254              		.loc 6 261 16 view .LVU720
 2255 0184 C4F8F016 		str	r1, [r4, #1776]
 262:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 2256              		.loc 6 262 16 view .LVU721
 2257 0188 0022     		movs	r2, #0
 2258 018a C4F8F826 		str	r2, [r4, #1784]
 263:User/Inc/rosserialInc/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 2259              		.loc 6 263 9 view .LVU722
 2260 018e 0133     		adds	r3, r3, #1
 2261 0190 C4F8EC36 		str	r3, [r4, #1772]
 264:User/Inc/rosserialInc/ros/node_handle.h ****       }
 2262              		.loc 6 264 19 view .LVU723
 2263 0194 C4F8FC16 		str	r1, [r4, #1788]
 2264 0198 63E7     		b	.L101
 2265              	.L130:
 268:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 2266              		.loc 6 268 16 view .LVU724
 2267 019a D4F8F026 		ldr	r2, [r4, #1776]
 2268 019e 02EB0122 		add	r2, r2, r1, lsl #8
 2269 01a2 C4F8F026 		str	r2, [r4, #1776]
 269:User/Inc/rosserialInc/ros/node_handle.h ****       }
 2270              		.loc 6 269 9 view .LVU725
 2271 01a6 0133     		adds	r3, r3, #1
 2272 01a8 C4F8EC36 		str	r3, [r4, #1772]
 2273 01ac 59E7     		b	.L101
 2274              	.L131:
 273:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 2275              		.loc 6 273 24 view .LVU726
 2276 01ae 5142     		rsbs	r1, r2, #0
 2277              	.LVL200:
ARM GAS  /tmp/ccr3Zb65.s 			page 72


 273:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 2278              		.loc 6 273 24 view .LVU727
 2279 01b0 D2B2     		uxtb	r2, r2
 2280 01b2 C9B2     		uxtb	r1, r1
 2281 01b4 58BF     		it	pl
 2282 01b6 4A42     		rsbpl	r2, r1, #0
 273:User/Inc/rosserialInc/ros/node_handle.h ****           mode_++;
 2283              		.loc 6 273 9 view .LVU728
 2284 01b8 FF2A     		cmp	r2, #255
 2285 01ba 03D0     		beq	.L139
 276:User/Inc/rosserialInc/ros/node_handle.h ****       }
 2286              		.loc 6 276 17 view .LVU729
 2287 01bc 0023     		movs	r3, #0
 2288 01be C4F8EC36 		str	r3, [r4, #1772]
 2289 01c2 4EE7     		b	.L101
 2290              	.L139:
 274:User/Inc/rosserialInc/ros/node_handle.h ****         else
 2291              		.loc 6 274 11 view .LVU730
 2292 01c4 0133     		adds	r3, r3, #1
 2293 01c6 C4F8EC36 		str	r3, [r4, #1772]
 2294 01ca 4AE7     		b	.L101
 2295              	.LVL201:
 2296              	.L132:
 280:User/Inc/rosserialInc/ros/node_handle.h ****         mode_++;
 2297              		.loc 6 280 16 view .LVU731
 2298 01cc C4F8F416 		str	r1, [r4, #1780]
 281:User/Inc/rosserialInc/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 2299              		.loc 6 281 9 view .LVU732
 2300 01d0 0133     		adds	r3, r3, #1
 2301 01d2 C4F8EC36 		str	r3, [r4, #1772]
 282:User/Inc/rosserialInc/ros/node_handle.h ****       }
 2302              		.loc 6 282 19 view .LVU733
 2303 01d6 C4F8FC16 		str	r1, [r4, #1788]
 2304 01da 42E7     		b	.L101
 2305              	.L133:
 286:User/Inc/rosserialInc/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 2306              		.loc 6 286 16 view .LVU734
 2307 01dc D4F8F436 		ldr	r3, [r4, #1780]
 2308 01e0 03EB0123 		add	r3, r3, r1, lsl #8
 2309 01e4 C4F8F436 		str	r3, [r4, #1780]
 287:User/Inc/rosserialInc/ros/node_handle.h ****         if (bytes_ == 0)
 2310              		.loc 6 287 15 view .LVU735
 2311 01e8 0723     		movs	r3, #7
 2312 01ea C4F8EC36 		str	r3, [r4, #1772]
 288:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 2313              		.loc 6 288 13 view .LVU736
 2314 01ee D4F8F036 		ldr	r3, [r4, #1776]
 288:User/Inc/rosserialInc/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 2315              		.loc 6 288 9 view .LVU737
 2316 01f2 002B     		cmp	r3, #0
 2317 01f4 7FF435AF 		bne	.L101
 289:User/Inc/rosserialInc/ros/node_handle.h ****       }
 2318              		.loc 6 289 17 view .LVU738
 2319 01f8 0823     		movs	r3, #8
 2320 01fa C4F8EC36 		str	r3, [r4, #1772]
 2321 01fe 30E7     		b	.L101
 2322              	.L134:
ARM GAS  /tmp/ccr3Zb65.s 			page 73


 2323              	.LVL202:
 2324              	.LBB215:
 2325              	.LBI215:
 347:User/Inc/rosserialInc/ros/node_handle.h ****   {
 2326              		.loc 6 347 8 is_stmt 1 view .LVU739
 2327              	.LBB216:
 2328              	.LBB217:
 2329              	.LBI217:
  19:User/Inc/rosserialInc/std_msgs/Time.h ****       data()
 2330              		.loc 1 19 5 view .LVU740
 2331              	.LBB218:
 2332              	.LBB219:
 2333              	.LBB220:
 2334              	.LBI220:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2335              		.loc 3 46 7 view .LVU741
 2336              	.LBB221:
 2337 0200 564B     		ldr	r3, .L141
 2338 0202 0193     		str	r3, [sp, #4]
 2339              	.LVL203:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2340              		.loc 3 46 7 is_stmt 0 view .LVU742
 2341              	.LBE221:
 2342              	.LBE220:
  20:User/Inc/rosserialInc/std_msgs/Time.h ****     {
 2343              		.loc 1 20 12 view .LVU743
 2344 0204 564B     		ldr	r3, .L141+4
 2345 0206 0193     		str	r3, [sp, #4]
 2346              	.LVL204:
 2347              	.LBB222:
 2348              	.LBI222:
 2349              		.loc 9 51 3 is_stmt 1 view .LVU744
 2350              	.LBB223:
 2351              	.LBB224:
 2352              		.loc 9 51 26 is_stmt 0 view .LVU745
 2353 0208 0023     		movs	r3, #0
 2354 020a 0293     		str	r3, [sp, #8]
 2355 020c 0393     		str	r3, [sp, #12]
 2356              	.LVL205:
 2357              		.loc 9 51 26 view .LVU746
 2358              	.LBE224:
 2359              	.LBE223:
 2360              	.LBE222:
 2361              	.LBE219:
 2362              	.LBE218:
 2363              	.LBE217:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2364              		.loc 6 350 12 view .LVU747
 2365 020e 2368     		ldr	r3, [r4]
 2366 0210 1B68     		ldr	r3, [r3]
 2367 0212 01AA     		add	r2, sp, #4
 2368 0214 0A21     		movs	r1, #10
 2369              	.LVL206:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2370              		.loc 6 350 12 view .LVU748
 2371 0216 2046     		mov	r0, r4
 2372 0218 9847     		blx	r3
ARM GAS  /tmp/ccr3Zb65.s 			page 74


 2373              	.LVL207:
 2374              	.LBB225:
 2375              	.LBI225:
 2376              		.loc 8 129 19 is_stmt 1 view .LVU749
 2377              	.LBB226:
 2378              		.loc 8 129 27 view .LVU750
 2379              		.loc 8 129 45 is_stmt 0 view .LVU751
 2380 021a FFF7FEFF 		bl	HAL_GetTick
 2381              	.LVL208:
 2382              		.loc 8 129 48 is_stmt 1 view .LVU752
 2383              		.loc 8 129 48 is_stmt 0 view .LVU753
 2384              	.LBE226:
 2385              	.LBE225:
 351:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2386              		.loc 6 351 13 view .LVU754
 2387 021e C4F81402 		str	r0, [r4, #532]
 2388              	.LVL209:
 351:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2389              		.loc 6 351 13 view .LVU755
 2390              	.LBE216:
 2391              	.LBE215:
 299:User/Inc/rosserialInc/ros/node_handle.h ****             last_sync_time = c_time;
 2392              		.loc 6 299 28 view .LVU756
 2393 0222 2046     		mov	r0, r4
 2394 0224 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 2395              	.LVL210:
 300:User/Inc/rosserialInc/ros/node_handle.h ****             last_sync_receive_time = c_time;
 2396              		.loc 6 300 28 view .LVU757
 2397 0228 C4F80467 		str	r6, [r4, #1796]
 301:User/Inc/rosserialInc/ros/node_handle.h ****             return SPIN_ERR;
 2398              		.loc 6 301 36 view .LVU758
 2399 022c C4F80867 		str	r6, [r4, #1800]
 302:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2400              		.loc 6 302 20 view .LVU759
 2401 0230 4FF0FF30 		mov	r0, #-1
 2402 0234 8CE0     		b	.L98
 2403              	.LVL211:
 2404              	.L135:
 306:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2405              		.loc 6 306 22 view .LVU760
 2406 0236 04F50977 		add	r7, r4, #548
 2407              	.LVL212:
 2408              	.LBB227:
 2409              	.LBI227:
 354:User/Inc/rosserialInc/ros/node_handle.h ****   {
 2410              		.loc 6 354 8 is_stmt 1 view .LVU761
 2411              	.LBB228:
 2412              	.LBB229:
 2413              	.LBI229:
  19:User/Inc/rosserialInc/std_msgs/Time.h ****       data()
 2414              		.loc 1 19 5 view .LVU762
 2415              	.LBB230:
 2416              	.LBB231:
 2417              	.LBB232:
 2418              	.LBI232:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2419              		.loc 3 46 7 view .LVU763
ARM GAS  /tmp/ccr3Zb65.s 			page 75


 2420              	.LBB233:
 2421 023a 484B     		ldr	r3, .L141
 2422 023c 0193     		str	r3, [sp, #4]
 2423              	.LVL213:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2424              		.loc 3 46 7 is_stmt 0 view .LVU764
 2425              	.LBE233:
 2426              	.LBE232:
  20:User/Inc/rosserialInc/std_msgs/Time.h ****     {
 2427              		.loc 1 20 12 view .LVU765
 2428 023e 484B     		ldr	r3, .L141+4
 2429 0240 0193     		str	r3, [sp, #4]
 2430              	.LVL214:
 2431              	.LBB234:
 2432              	.LBI234:
 2433              		.loc 9 51 3 is_stmt 1 view .LVU766
 2434              	.LBB235:
 2435              	.LBB236:
 2436              		.loc 9 51 26 is_stmt 0 view .LVU767
 2437 0242 0023     		movs	r3, #0
 2438 0244 0293     		str	r3, [sp, #8]
 2439 0246 0393     		str	r3, [sp, #12]
 2440              	.LVL215:
 2441              		.loc 9 51 26 view .LVU768
 2442              	.LBE236:
 2443              	.LBE235:
 2444              	.LBE234:
 2445              	.LBE231:
 2446              	.LBE230:
 2447              	.LBE229:
 2448              	.LBB237:
 2449              	.LBI237:
 2450              		.loc 8 129 19 is_stmt 1 view .LVU769
 2451              	.LBB238:
 2452              		.loc 8 129 27 view .LVU770
 2453              		.loc 8 129 45 is_stmt 0 view .LVU771
 2454 0248 FFF7FEFF 		bl	HAL_GetTick
 2455              	.LVL216:
 2456              		.loc 8 129 48 is_stmt 1 view .LVU772
 2457              		.loc 8 129 48 is_stmt 0 view .LVU773
 2458              	.LBE238:
 2459              	.LBE237:
 357:User/Inc/rosserialInc/ros/node_handle.h **** 
 2460              		.loc 6 357 42 view .LVU774
 2461 024c D4F81432 		ldr	r3, [r4, #532]
 357:User/Inc/rosserialInc/ros/node_handle.h **** 
 2462              		.loc 6 357 14 view .LVU775
 2463 0250 C01A     		subs	r0, r0, r3
 2464              	.LVL217:
 2465              	.LBB239:
 2466              	.LBI239:
  40:User/Inc/rosserialInc/std_msgs/Time.h ****     {
 2467              		.loc 1 40 17 is_stmt 1 view .LVU776
 2468              	.LBB240:
  42:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
 2469              		.loc 1 42 7 view .LVU777
  43:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /tmp/ccr3Zb65.s 			page 76


 2470              		.loc 1 43 7 view .LVU778
  43:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2471              		.loc 1 43 38 is_stmt 0 view .LVU779
 2472 0252 94F82422 		ldrb	r2, [r4, #548]	@ zero_extendqisi2
  43:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2473              		.loc 1 43 22 view .LVU780
 2474 0256 0292     		str	r2, [sp, #8]
  44:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2475              		.loc 1 44 7 is_stmt 1 view .LVU781
  44:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2476              		.loc 1 44 38 is_stmt 0 view .LVU782
 2477 0258 3946     		mov	r1, r7
 2478 025a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
  44:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2479              		.loc 1 44 22 view .LVU783
 2480 025c 42EA0322 		orr	r2, r2, r3, lsl #8
 2481 0260 0292     		str	r2, [sp, #8]
  45:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2482              		.loc 1 45 7 is_stmt 1 view .LVU784
  45:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2483              		.loc 1 45 38 is_stmt 0 view .LVU785
 2484 0262 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
  45:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2485              		.loc 1 45 22 view .LVU786
 2486 0264 42EA0342 		orr	r2, r2, r3, lsl #16
 2487 0268 0292     		str	r2, [sp, #8]
  46:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 2488              		.loc 1 46 7 is_stmt 1 view .LVU787
  46:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 2489              		.loc 1 46 38 is_stmt 0 view .LVU788
 2490 026a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  46:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 2491              		.loc 1 46 22 view .LVU789
 2492 026c 42EA0362 		orr	r2, r2, r3, lsl #24
 2493 0270 0292     		str	r2, [sp, #8]
  47:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 2494              		.loc 1 47 7 is_stmt 1 view .LVU790
 2495              	.LVL218:
  48:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2496              		.loc 1 48 7 view .LVU791
  48:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2497              		.loc 1 48 39 is_stmt 0 view .LVU792
 2498 0272 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
  48:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2499              		.loc 1 48 23 view .LVU793
 2500 0274 0393     		str	r3, [sp, #12]
  49:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2501              		.loc 1 49 7 is_stmt 1 view .LVU794
  49:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2502              		.loc 1 49 39 is_stmt 0 view .LVU795
 2503 0276 7F79     		ldrb	r7, [r7, #5]	@ zero_extendqisi2
  49:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2504              		.loc 1 49 23 view .LVU796
 2505 0278 43EA0723 		orr	r3, r3, r7, lsl #8
 2506 027c 0393     		str	r3, [sp, #12]
  50:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2507              		.loc 1 50 7 is_stmt 1 view .LVU797
ARM GAS  /tmp/ccr3Zb65.s 			page 77


  50:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2508              		.loc 1 50 39 is_stmt 0 view .LVU798
 2509 027e 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
  50:User/Inc/rosserialInc/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2510              		.loc 1 50 23 view .LVU799
 2511 0280 43EA0743 		orr	r3, r3, r7, lsl #16
 2512 0284 0393     		str	r3, [sp, #12]
  51:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 2513              		.loc 1 51 7 is_stmt 1 view .LVU800
  51:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 2514              		.loc 1 51 39 is_stmt 0 view .LVU801
 2515 0286 C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
  51:User/Inc/rosserialInc/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 2516              		.loc 1 51 23 view .LVU802
 2517 0288 43EA0163 		orr	r3, r3, r1, lsl #24
 2518 028c 0393     		str	r3, [sp, #12]
  52:User/Inc/rosserialInc/std_msgs/Time.h ****      return offset;
 2519              		.loc 1 52 7 is_stmt 1 view .LVU803
 2520              	.LVL219:
  53:User/Inc/rosserialInc/std_msgs/Time.h ****     }
 2521              		.loc 1 53 6 view .LVU804
  53:User/Inc/rosserialInc/std_msgs/Time.h ****     }
 2522              		.loc 1 53 6 is_stmt 0 view .LVU805
 2523              	.LBE240:
 2524              	.LBE239:
 360:User/Inc/rosserialInc/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 2525              		.loc 6 360 26 view .LVU806
 2526 028e 354F     		ldr	r7, .L141+8
 2527 0290 A7FB00C1 		umull	ip, r1, r7, r0
 2528 0294 4FEA911C 		lsr	ip, r1, #6
 360:User/Inc/rosserialInc/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 2529              		.loc 6 360 16 view .LVU807
 2530 0298 02EB9112 		add	r2, r2, r1, lsr #6
 2531 029c 0292     		str	r2, [sp, #8]
 361:User/Inc/rosserialInc/ros/node_handle.h **** 
 2532              		.loc 6 361 28 view .LVU808
 2533 029e 4FF47A78 		mov	r8, #1000
 2534 02a2 08FB1C00 		mls	r0, r8, ip, r0
 2535              	.LVL220:
 361:User/Inc/rosserialInc/ros/node_handle.h **** 
 2536              		.loc 6 361 36 view .LVU809
 2537 02a6 DFF8C090 		ldr	r9, .L141+12
 361:User/Inc/rosserialInc/ros/node_handle.h **** 
 2538              		.loc 6 361 17 view .LVU810
 2539 02aa 09FB0033 		mla	r3, r9, r0, r3
 2540 02ae 0393     		str	r3, [sp, #12]
 2541              	.LVL221:
 2542              	.LBB241:
 2543              	.LBI241:
 377:User/Inc/rosserialInc/ros/node_handle.h ****   {
 2544              		.loc 6 377 8 is_stmt 1 view .LVU811
 2545              	.LBB242:
 2546              	.LBB243:
 2547              	.LBI243:
 2548              		.loc 8 129 19 view .LVU812
 2549              	.LBB244:
 2550              		.loc 8 129 27 view .LVU813
ARM GAS  /tmp/ccr3Zb65.s 			page 78


 2551              		.loc 8 129 45 is_stmt 0 view .LVU814
 2552 02b0 FFF7FEFF 		bl	HAL_GetTick
 2553              	.LVL222:
 2554              		.loc 8 129 48 is_stmt 1 view .LVU815
 2555              		.loc 8 129 48 is_stmt 0 view .LVU816
 2556              	.LBE244:
 2557              	.LBE243:
 380:User/Inc/rosserialInc/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 2558              		.loc 6 380 35 view .LVU817
 2559 02b4 A7FB0027 		umull	r2, r7, r7, r0
 2560 02b8 B909     		lsrs	r1, r7, #6
 380:User/Inc/rosserialInc/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 2561              		.loc 6 380 30 view .LVU818
 2562 02ba 029A     		ldr	r2, [sp, #8]
 2563 02bc A2EB9712 		sub	r2, r2, r7, lsr #6
 380:User/Inc/rosserialInc/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 2564              		.loc 6 380 42 view .LVU819
 2565 02c0 013A     		subs	r2, r2, #1
 380:User/Inc/rosserialInc/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 2566              		.loc 6 380 16 view .LVU820
 2567 02c2 C4F81822 		str	r2, [r4, #536]
 381:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 2568              		.loc 6 381 38 view .LVU821
 2569 02c6 08FB1103 		mls	r3, r8, r1, r0
 381:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 2570              		.loc 6 381 32 view .LVU822
 2571 02ca 039A     		ldr	r2, [sp, #12]
 2572 02cc 09FB1322 		mls	r2, r9, r3, r2
 381:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 2573              		.loc 6 381 58 view .LVU823
 2574 02d0 264B     		ldr	r3, .L141+16
 2575 02d2 1344     		add	r3, r3, r2
 381:User/Inc/rosserialInc/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 2576              		.loc 6 381 17 view .LVU824
 2577 02d4 C4F81C32 		str	r3, [r4, #540]
 382:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2578              		.loc 6 382 21 view .LVU825
 2579 02d8 04F50771 		add	r1, r4, #540
 2580 02dc 04F50670 		add	r0, r4, #536
 2581              	.LVL223:
 382:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2582              		.loc 6 382 21 view .LVU826
 2583 02e0 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 2584              	.LVL224:
 382:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2585              		.loc 6 382 21 view .LVU827
 2586              	.LBE242:
 2587              	.LBE241:
 2588              	.LBB245:
 2589              	.LBI245:
 2590              		.loc 8 129 19 is_stmt 1 view .LVU828
 2591              	.LBB246:
 2592              		.loc 8 129 27 view .LVU829
 2593              		.loc 8 129 45 is_stmt 0 view .LVU830
 2594 02e4 FFF7FEFF 		bl	HAL_GetTick
 2595              	.LVL225:
 2596              		.loc 8 129 48 is_stmt 1 view .LVU831
ARM GAS  /tmp/ccr3Zb65.s 			page 79


 2597              		.loc 8 129 48 is_stmt 0 view .LVU832
 2598              	.LBE246:
 2599              	.LBE245:
 364:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2600              		.loc 6 364 28 view .LVU833
 2601 02e8 C4F80807 		str	r0, [r4, #1800]
 365:User/Inc/rosserialInc/ros/node_handle.h **** 
 2602              		.loc 6 365 3 view .LVU834
 2603 02ec B9E6     		b	.L101
 2604              	.LVL226:
 2605              	.L136:
 365:User/Inc/rosserialInc/ros/node_handle.h **** 
 2606              		.loc 6 365 3 view .LVU835
 2607              	.LBE228:
 2608              	.LBE227:
 310:User/Inc/rosserialInc/ros/node_handle.h ****             param_received = true;
 2609              		.loc 6 310 39 view .LVU836
 2610 02ee 04F50971 		add	r1, r4, #548
 2611              	.LVL227:
 310:User/Inc/rosserialInc/ros/node_handle.h ****             param_received = true;
 2612              		.loc 6 310 39 view .LVU837
 2613 02f2 04F21470 		addw	r0, r4, #1812
 2614 02f6 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2615              	.LVL228:
 311:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2616              		.loc 6 311 28 view .LVU838
 2617 02fa 0123     		movs	r3, #1
 2618 02fc 84F81037 		strb	r3, [r4, #1808]
 2619 0300 AFE6     		b	.L101
 2620              	.LVL229:
 2621              	.L137:
 315:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2622              		.loc 6 315 25 view .LVU839
 2623 0302 0023     		movs	r3, #0
 2624 0304 84F80037 		strb	r3, [r4, #1792]
 2625 0308 ABE6     		b	.L101
 2626              	.L105:
 315:User/Inc/rosserialInc/ros/node_handle.h ****           }
 2627              		.loc 6 315 25 view .LVU840
 2628              	.LBE192:
 327:User/Inc/rosserialInc/ros/node_handle.h ****     {
 2629              		.loc 6 327 9 view .LVU841
 2630 030a 94F80037 		ldrb	r3, [r4, #1792]	@ zero_extendqisi2
 327:User/Inc/rosserialInc/ros/node_handle.h ****     {
 2631              		.loc 6 327 5 view .LVU842
 2632 030e 13B3     		cbz	r3, .L124
 327:User/Inc/rosserialInc/ros/node_handle.h ****     {
 2633              		.loc 6 327 35 discriminator 1 view .LVU843
 2634 0310 D4F80437 		ldr	r3, [r4, #1796]
 327:User/Inc/rosserialInc/ros/node_handle.h ****     {
 2635              		.loc 6 327 33 discriminator 1 view .LVU844
 2636 0314 F31A     		subs	r3, r6, r3
 327:User/Inc/rosserialInc/ros/node_handle.h ****     {
 2637              		.loc 6 327 21 discriminator 1 view .LVU845
 2638 0316 40F6C412 		movw	r2, #2500
 2639 031a 9342     		cmp	r3, r2
 2640 031c 01D8     		bhi	.L140
ARM GAS  /tmp/ccr3Zb65.s 			page 80


 333:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2641              		.loc 6 333 12 view .LVU846
 2642 031e 0020     		movs	r0, #0
 2643 0320 16E0     		b	.L98
 2644              	.L140:
 2645              	.LVL230:
 2646              	.LBB247:
 2647              	.LBI247:
 347:User/Inc/rosserialInc/ros/node_handle.h ****   {
 2648              		.loc 6 347 8 is_stmt 1 view .LVU847
 2649              	.LBB248:
 2650              	.LBB249:
 2651              	.LBI249:
  19:User/Inc/rosserialInc/std_msgs/Time.h ****       data()
 2652              		.loc 1 19 5 view .LVU848
 2653              	.LBB250:
 2654              	.LBB251:
 2655              	.LBB252:
 2656              	.LBI252:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2657              		.loc 3 46 7 view .LVU849
 2658              	.LBB253:
 2659 0322 0E4B     		ldr	r3, .L141
 2660 0324 0193     		str	r3, [sp, #4]
 2661              	.LVL231:
  46:User/Inc/rosserialInc/ros/msg.h **** {
 2662              		.loc 3 46 7 is_stmt 0 view .LVU850
 2663              	.LBE253:
 2664              	.LBE252:
  20:User/Inc/rosserialInc/std_msgs/Time.h ****     {
 2665              		.loc 1 20 12 view .LVU851
 2666 0326 0E4B     		ldr	r3, .L141+4
 2667 0328 0193     		str	r3, [sp, #4]
 2668              	.LVL232:
 2669              	.LBB254:
 2670              	.LBI254:
 2671              		.loc 9 51 3 is_stmt 1 view .LVU852
 2672              	.LBB255:
 2673              	.LBB256:
 2674              		.loc 9 51 26 is_stmt 0 view .LVU853
 2675 032a 0025     		movs	r5, #0
 2676 032c 0295     		str	r5, [sp, #8]
 2677 032e 0395     		str	r5, [sp, #12]
 2678              	.LVL233:
 2679              		.loc 9 51 26 view .LVU854
 2680              	.LBE256:
 2681              	.LBE255:
 2682              	.LBE254:
 2683              	.LBE251:
 2684              	.LBE250:
 2685              	.LBE249:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2686              		.loc 6 350 12 view .LVU855
 2687 0330 2368     		ldr	r3, [r4]
 2688 0332 1B68     		ldr	r3, [r3]
 2689 0334 01AA     		add	r2, sp, #4
 2690 0336 0A21     		movs	r1, #10
ARM GAS  /tmp/ccr3Zb65.s 			page 81


 2691              	.LVL234:
 350:User/Inc/rosserialInc/ros/node_handle.h ****     rt_time = hardware_.time();
 2692              		.loc 6 350 12 view .LVU856
 2693 0338 2046     		mov	r0, r4
 2694 033a 9847     		blx	r3
 2695              	.LVL235:
 2696              	.LBB257:
 2697              	.LBI257:
 2698              		.loc 8 129 19 is_stmt 1 view .LVU857
 2699              	.LBB258:
 2700              		.loc 8 129 27 view .LVU858
 2701              		.loc 8 129 45 is_stmt 0 view .LVU859
 2702 033c FFF7FEFF 		bl	HAL_GetTick
 2703              	.LVL236:
 2704              		.loc 8 129 48 is_stmt 1 view .LVU860
 2705              		.loc 8 129 48 is_stmt 0 view .LVU861
 2706              	.LBE258:
 2707              	.LBE257:
 351:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2708              		.loc 6 351 13 view .LVU862
 2709 0340 C4F81402 		str	r0, [r4, #532]
 2710              	.LVL237:
 351:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2711              		.loc 6 351 13 view .LVU863
 2712              	.LBE248:
 2713              	.LBE247:
 330:User/Inc/rosserialInc/ros/node_handle.h ****     }
 2714              		.loc 6 330 22 view .LVU864
 2715 0344 C4F80467 		str	r6, [r4, #1796]
 333:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2716              		.loc 6 333 12 view .LVU865
 2717 0348 2846     		mov	r0, r5
 2718 034a 01E0     		b	.L98
 2719              	.L122:
 2720              	.LBB259:
 218:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2721              		.loc 6 218 18 view .LVU866
 2722 034c 6FF00100 		mvn	r0, #1
 2723              	.L98:
 218:User/Inc/rosserialInc/ros/node_handle.h ****         }
 2724              		.loc 6 218 18 view .LVU867
 2725              	.LBE259:
 334:User/Inc/rosserialInc/ros/node_handle.h **** 
 2726              		.loc 6 334 3 view .LVU868
 2727 0350 05B0     		add	sp, sp, #20
 2728              	.LCFI10:
 2729              		.cfi_remember_state
 2730              		.cfi_def_cfa_offset 28
 2731              		@ sp needed
 2732 0352 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2733              	.LVL238:
 2734              	.L124:
 2735              	.LCFI11:
 2736              		.cfi_restore_state
 333:User/Inc/rosserialInc/ros/node_handle.h ****   }
 2737              		.loc 6 333 12 view .LVU869
 2738 0356 0020     		movs	r0, #0
ARM GAS  /tmp/ccr3Zb65.s 			page 82


 2739 0358 FAE7     		b	.L98
 2740              	.L142:
 2741 035a 00BF     		.align	2
 2742              	.L141:
 2743 035c 08000000 		.word	_ZTVN3ros3MsgE+8
 2744 0360 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2745 0364 D34D6210 		.word	274877907
 2746 0368 40420F00 		.word	1000000
 2747 036c 00CA9A3B 		.word	1000000000
 2748              		.cfi_endproc
 2749              	.LFE450:
 2750              		.fnend
 2752              		.section	.text.loop,"ax",%progbits
 2753              		.align	1
 2754              		.global	loop
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2758              		.fpu softvfp
 2760              	loop:
 2761              		.fnstart
 2762              	.LFB444:
  64:User/myMain.cpp ****   //Get pressrue data. currently only pSource and pSink
 2763              		.loc 4 64 1 is_stmt 1 view -0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 2767 0000 38B5     		push	{r3, r4, r5, lr}
 2768              		.save {r3, r4, r5, lr}
 2769              	.LCFI12:
 2770              		.cfi_def_cfa_offset 16
 2771              		.cfi_offset 3, -16
 2772              		.cfi_offset 4, -12
 2773              		.cfi_offset 5, -8
 2774              		.cfi_offset 14, -4
  66:User/myMain.cpp ****   uwManipulator.pSink.readPressure();
 2775              		.loc 4 66 3 view .LVU871
  66:User/myMain.cpp ****   uwManipulator.pSink.readPressure();
 2776              		.loc 4 66 37 is_stmt 0 view .LVU872
 2777 0002 0C4C     		ldr	r4, .L145
 2778 0004 04F54370 		add	r0, r4, #780
 2779 0008 FFF7FEFF 		bl	_ZN15PRESSURE_SOURCE12readPressureEv
 2780              	.LVL239:
  67:User/myMain.cpp **** 
 2781              		.loc 4 67 3 is_stmt 1 view .LVU873
  67:User/myMain.cpp **** 
 2782              		.loc 4 67 35 is_stmt 0 view .LVU874
 2783 000c 04F55070 		add	r0, r4, #832
 2784 0010 FFF7FEFF 		bl	_ZN15PRESSURE_SOURCE12readPressureEv
 2785              	.LVL240:
  69:User/myMain.cpp **** 
 2786              		.loc 4 69 3 is_stmt 1 view .LVU875
  69:User/myMain.cpp **** 
 2787              		.loc 4 69 24 is_stmt 0 view .LVU876
 2788 0014 2046     		mov	r0, r4
 2789 0016 FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator7controlEv
 2790              	.LVL241:
ARM GAS  /tmp/ccr3Zb65.s 			page 83


  71:User/myMain.cpp **** 
 2791              		.loc 4 71 3 is_stmt 1 view .LVU877
  71:User/myMain.cpp **** 
 2792              		.loc 4 71 29 is_stmt 0 view .LVU878
 2793 001a 2046     		mov	r0, r4
 2794 001c FFF7FEFF 		bl	_ZN26HydroUnderwaterManipulator12encodeStatusEv
 2795              	.LVL242:
  73:User/myMain.cpp ****   
 2796              		.loc 4 73 3 is_stmt 1 view .LVU879
  73:User/myMain.cpp ****   
 2797              		.loc 4 73 24 is_stmt 0 view .LVU880
 2798 0020 054D     		ldr	r5, .L145+4
 2799 0022 04F55D71 		add	r1, r4, #884
 2800 0026 2846     		mov	r0, r5
 2801 0028 FFF7FEFF 		bl	_ZN13RosserialNode7publishEPKN3ros3MsgE
 2802              	.LVL243:
  75:User/myMain.cpp **** }
 2803              		.loc 4 75 3 is_stmt 1 view .LVU881
  75:User/myMain.cpp **** }
 2804              		.loc 4 75 25 is_stmt 0 view .LVU882
 2805 002c 2846     		mov	r0, r5
 2806 002e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 2807              	.LVL244:
  76:User/myMain.cpp **** 
 2808              		.loc 4 76 1 view .LVU883
 2809 0032 38BD     		pop	{r3, r4, r5, pc}
 2810              	.L146:
 2811              		.align	2
 2812              	.L145:
 2813 0034 00000000 		.word	.LANCHOR0
 2814 0038 00000000 		.word	rosserialNode
 2815              		.cfi_endproc
 2816              	.LFE444:
 2817              		.fnend
 2819              		.section	.text._GLOBAL__sub_I_actuatorInitPorts,"ax",%progbits
 2820              		.align	1
 2821              		.syntax unified
 2822              		.thumb
 2823              		.thumb_func
 2824              		.fpu softvfp
 2826              	_GLOBAL__sub_I_actuatorInitPorts:
 2827              		.fnstart
 2828              	.LFB459:
 2829              		.loc 4 109 1 is_stmt 1 view -0
 2830              		.cfi_startproc
 2831              		@ args = 0, pretend = 0, frame = 0
 2832              		@ frame_needed = 0, uses_anonymous_args = 0
 2833 0000 08B5     		push	{r3, lr}
 2834              	.LCFI13:
 2835              		.cfi_def_cfa_offset 8
 2836              		.cfi_offset 3, -8
 2837              		.cfi_offset 14, -4
 2838              		.loc 4 109 1 is_stmt 0 view .LVU885
 2839 0002 4FF6FF71 		movw	r1, #65535
 2840 0006 0120     		movs	r0, #1
 2841 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2842              	.LVL245:
ARM GAS  /tmp/ccr3Zb65.s 			page 84


 2843 000c 08BD     		pop	{r3, pc}
 2844              		.cfi_endproc
 2845              	.LFE459:
 2846              		.cantunwind
 2847              		.fnend
 2849              		.section	.init_array,"aw",%init_array
 2850              		.align	2
 2851 0000 00000000 		.word	_GLOBAL__sub_I_actuatorInitPorts(target1)
 2852              		.weak	_ZTSN3ros3MsgE
 2853              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 2854              		.align	2
 2857              	_ZTSN3ros3MsgE:
 2858 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 2858      73334D73 
 2858      674500
 2859              		.weak	_ZTIN3ros3MsgE
 2860              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 2861              		.align	2
 2864              	_ZTIN3ros3MsgE:
 2865 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 2866 0004 00000000 		.word	_ZTSN3ros3MsgE
 2867              		.weak	_ZTSN8std_msgs4TimeE
 2868              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 2869              		.align	2
 2872              	_ZTSN8std_msgs4TimeE:
 2873 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 2873      645F6D73 
 2873      67733454 
 2873      696D6545 
 2873      00
 2874              		.weak	_ZTIN8std_msgs4TimeE
 2875              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 2876              		.align	2
 2879              	_ZTIN8std_msgs4TimeE:
 2880 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 2881 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 2882 0008 00000000 		.word	_ZTIN3ros3MsgE
 2883              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 2884              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 2885              		.align	2
 2888              	_ZTSN14rosserial_msgs9TopicInfoE:
 2889 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 2889      6F737365 
 2889      7269616C 
 2889      5F6D7367 
 2889      7339546F 
 2890              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 2891              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 2892              		.align	2
 2895              	_ZTIN14rosserial_msgs9TopicInfoE:
 2896 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 2897 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 2898 0008 00000000 		.word	_ZTIN3ros3MsgE
 2899              		.weak	_ZTVN3ros3MsgE
 2900              		.section	.rodata._ZTVN3ros3MsgE,"aG",%progbits,_ZTVN3ros3MsgE,comdat
 2901              		.align	2
 2904              	_ZTVN3ros3MsgE:
ARM GAS  /tmp/ccr3Zb65.s 			page 85


 2905 0000 00000000 		.word	0
 2906 0004 00000000 		.word	_ZTIN3ros3MsgE
 2907 0008 00000000 		.word	__cxa_pure_virtual
 2908 000c 00000000 		.word	__cxa_pure_virtual
 2909 0010 00000000 		.word	__cxa_pure_virtual
 2910 0014 00000000 		.word	__cxa_pure_virtual
 2911              		.weak	_ZTVN8std_msgs4TimeE
 2912              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 2913              		.align	2
 2916              	_ZTVN8std_msgs4TimeE:
 2917 0000 00000000 		.word	0
 2918 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 2919 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 2920 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 2921 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 2922 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 2923              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 2924              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 2925              		.align	2
 2928              	_ZTVN14rosserial_msgs9TopicInfoE:
 2929 0000 00000000 		.word	0
 2930 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 2931 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 2932 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2933 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 2934 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 2935              		.global	uwManipulator
 2936              		.global	pSinkSensorInitPort
 2937              		.global	pSinkValveInitPort
 2938              		.global	pSinkPumpInitPort
 2939              		.global	pSourceSensorInitPort
 2940              		.global	pSourceValveInitPort
 2941              		.global	pSourcePumpInitPort
 2942              		.global	gripperInitPort
 2943              		.global	actuatorInitPorts
 2944              		.section	.bss.uwManipulator,"aw",%nobits
 2945              		.align	2
 2946              		.set	.LANCHOR0,. + 0
 2949              	uwManipulator:
 2950 0000 00000000 		.space	1124
 2950      00000000 
 2950      00000000 
 2950      00000000 
 2950      00000000 
 2951              		.section	.data.actuatorInitPorts,"aw"
 2952              		.align	2
 2953              		.set	.LANCHOR1,. + 0
 2956              	actuatorInitPorts:
 2957 0000 0001     		.ascii	"\000\001"
 2958 0002 0203     		.ascii	"\002\003"
 2959 0004 0405     		.ascii	"\004\005"
 2960 0006 0607     		.ascii	"\006\007"
 2961 0008 0809     		.ascii	"\010\011"
 2962 000a 0A0B     		.ascii	"\012\013"
 2963 000c 0C0D     		.ascii	"\014\015"
 2964 000e 0E0F     		.ascii	"\016\017"
 2965 0010 1011     		.ascii	"\020\021"
ARM GAS  /tmp/ccr3Zb65.s 			page 86


 2966 0012 1213     		.ascii	"\022\023"
 2967 0014 1415     		.ascii	"\024\025"
 2968 0016 1617     		.ascii	"\026\027"
 2969              		.section	.data.gripperInitPort,"aw"
 2970              		.align	2
 2971              		.set	.LANCHOR2,. + 0
 2974              	gripperInitPort:
 2975 0000 1D2D     		.ascii	"\035-"
 2976              		.section	.data.pSinkPumpInitPort,"aw"
 2977              		.set	.LANCHOR8,. + 0
 2980              	pSinkPumpInitPort:
 2981 0000 19       		.byte	25
 2982              		.section	.data.pSinkSensorInitPort,"aw"
 2983              		.set	.LANCHOR6,. + 0
 2986              	pSinkSensorInitPort:
 2987 0000 2C       		.byte	44
 2988              		.section	.data.pSinkValveInitPort,"aw"
 2989              		.set	.LANCHOR7,. + 0
 2992              	pSinkValveInitPort:
 2993 0000 1B       		.byte	27
 2994              		.section	.data.pSourcePumpInitPort,"aw"
 2995              		.set	.LANCHOR5,. + 0
 2998              	pSourcePumpInitPort:
 2999 0000 29       		.byte	41
 3000              		.section	.data.pSourceSensorInitPort,"aw"
 3001              		.set	.LANCHOR3,. + 0
 3004              	pSourceSensorInitPort:
 3005 0000 2C       		.byte	44
 3006              		.section	.data.pSourceValveInitPort,"aw"
 3007              		.set	.LANCHOR4,. + 0
 3010              	pSourceValveInitPort:
 3011 0000 2B       		.byte	43
 3012              		.text
 3013              	.Letext0:
 3014              		.file 10 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3015              		.file 11 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3016              		.file 12 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3017              		.file 13 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3018              		.file 14 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3019              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3020              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3021              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 3022              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3023              		.file 19 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3024              		.file 20 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3025              		.file 21 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3026              		.file 22 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3027              		.file 23 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3028              		.file 24 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3029              		.file 25 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3030              		.file 26 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3031              		.file 27 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3032              		.file 28 "User/Inc/rosserialInc/ros/duration.h"
 3033              		.file 29 "User/Inc/rosserialInc/rosserialNode.h"
 3034              		.file 30 "User/Inc/PRESSURESENSOR.h"
 3035              		.file 31 "User/Inc/SOLENOIDVALVE.h"
 3036              		.file 32 "User/Inc/CHAMBER.h"
ARM GAS  /tmp/ccr3Zb65.s 			page 87


 3037              		.file 33 "User/Inc/PUMP.h"
 3038              		.file 34 "User/Inc/PRESSURESOURCE.h"
 3039              		.file 35 "User/Inc/HydroUnderwaterManipulator.h"
 3040              		.file 36 "User/Inc/rosserialInc/hydrosoft_ros/Command_Arm.h"
 3041              		.file 37 "User/Inc/rosserialInc/hydrosoft_ros/Sensor_Arm.h"
 3042              		.file 38 "User/Inc/LED_Driver.h"
 3043              		.file 39 "User/Inc/ads1115.h"
 3044              		.file 40 "User/Inc/CANbus.h"
 3045              		.file 41 "/home/softarm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 3046              		.file 42 "<built-in>"
ARM GAS  /tmp/ccr3Zb65.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 myMain.cpp
     /tmp/ccr3Zb65.s:16     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
     /tmp/ccr3Zb65.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
     /tmp/ccr3Zb65.s:95     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
     /tmp/ccr3Zb65.s:102    .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
     /tmp/ccr3Zb65.s:174    .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
     /tmp/ccr3Zb65.s:178    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
     /tmp/ccr3Zb65.s:185    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccr3Zb65.s:203    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
     /tmp/ccr3Zb65.s:210    .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
     /tmp/ccr3Zb65.s:214    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
     /tmp/ccr3Zb65.s:221    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccr3Zb65.s:239    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
     /tmp/ccr3Zb65.s:246    .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
     /tmp/ccr3Zb65.s:250    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
     /tmp/ccr3Zb65.s:257    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccr3Zb65.s:276    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
     /tmp/ccr3Zb65.s:283    .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
     /tmp/ccr3Zb65.s:287    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
     /tmp/ccr3Zb65.s:294    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccr3Zb65.s:312    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
     /tmp/ccr3Zb65.s:319    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
     /tmp/ccr3Zb65.s:326    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
     /tmp/ccr3Zb65.s:564    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/ccr3Zb65.s:570    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccr3Zb65.s:611    .text._Z41__static_initialization_and_destruction_0ii:000000000000001c $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/ccr3Zb65.s:618    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
     /tmp/ccr3Zb65.s:625    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
     /tmp/ccr3Zb65.s:950    .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
     /tmp/ccr3Zb65.s:957    .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
     /tmp/ccr3Zb65.s:1397   .text.loop2:0000000000000000 $t
     /tmp/ccr3Zb65.s:1404   .text.loop2:0000000000000000 loop2
            .ARM.exidx.text.loop2:0000000000000000 $d
     /tmp/ccr3Zb65.s:1420   .text._Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE:0000000000000000 $t
     /tmp/ccr3Zb65.s:1427   .text._Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE:0000000000000000 _Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE
     /tmp/ccr3Zb65.s:1494   .text._Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE:0000000000000044 $d
.ARM.exidx.text._Z12sub1CallbackRKN13hydrosoft_ros11Command_ArmE:0000000000000000 $d
     /tmp/ccr3Zb65.s:1501   .text._Z18setupLoopFrequencys:0000000000000000 $t
     /tmp/ccr3Zb65.s:1508   .text._Z18setupLoopFrequencys:0000000000000000 _Z18setupLoopFrequencys
     /tmp/ccr3Zb65.s:1542   .text._Z18setupLoopFrequencys:0000000000000018 $d
.ARM.exidx.text._Z18setupLoopFrequencys:0000000000000000 $d
     /tmp/ccr3Zb65.s:1549   .text.setup:0000000000000000 $t
     /tmp/ccr3Zb65.s:1556   .text.setup:0000000000000000 setup
     /tmp/ccr3Zb65.s:1626   .text.setup:000000000000004c $d
            .ARM.exidx.text.setup:0000000000000000 $d
     /tmp/ccr3Zb65.s:1640   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccr3Zb65.s 			page 89


     /tmp/ccr3Zb65.s:1644   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $t
     /tmp/ccr3Zb65.s:1651   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/ccr3Zb65.s:1859   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000000000d4 $d
     /tmp/ccr3Zb65.s:2904   .rodata._ZTVN3ros3MsgE:0000000000000000 _ZTVN3ros3MsgE
     /tmp/ccr3Zb65.s:2928   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:0000000000000000 $d
     /tmp/ccr3Zb65.s:1867   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:0000000000000000 $t
     /tmp/ccr3Zb65.s:1874   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/ccr3Zb65.s:2743   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:000000000000035c $d
     /tmp/ccr3Zb65.s:2916   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:0000000000000000 $d
     /tmp/ccr3Zb65.s:2753   .text.loop:0000000000000000 $t
     /tmp/ccr3Zb65.s:2760   .text.loop:0000000000000000 loop
     /tmp/ccr3Zb65.s:2813   .text.loop:0000000000000034 $d
             .ARM.exidx.text.loop:0000000000000000 $d
     /tmp/ccr3Zb65.s:2820   .text._GLOBAL__sub_I_actuatorInitPorts:0000000000000000 $t
     /tmp/ccr3Zb65.s:2826   .text._GLOBAL__sub_I_actuatorInitPorts:0000000000000000 _GLOBAL__sub_I_actuatorInitPorts
.ARM.exidx.text._GLOBAL__sub_I_actuatorInitPorts:0000000000000000 $d
     /tmp/ccr3Zb65.s:2850   .init_array:0000000000000000 $d
     /tmp/ccr3Zb65.s:2857   .rodata._ZTSN3ros3MsgE:0000000000000000 _ZTSN3ros3MsgE
     /tmp/ccr3Zb65.s:2854   .rodata._ZTSN3ros3MsgE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2864   .rodata._ZTIN3ros3MsgE:0000000000000000 _ZTIN3ros3MsgE
     /tmp/ccr3Zb65.s:2861   .rodata._ZTIN3ros3MsgE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2872   .rodata._ZTSN8std_msgs4TimeE:0000000000000000 _ZTSN8std_msgs4TimeE
     /tmp/ccr3Zb65.s:2869   .rodata._ZTSN8std_msgs4TimeE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2879   .rodata._ZTIN8std_msgs4TimeE:0000000000000000 _ZTIN8std_msgs4TimeE
     /tmp/ccr3Zb65.s:2876   .rodata._ZTIN8std_msgs4TimeE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2888   .rodata._ZTSN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccr3Zb65.s:2885   .rodata._ZTSN14rosserial_msgs9TopicInfoE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2895   .rodata._ZTIN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccr3Zb65.s:2892   .rodata._ZTIN14rosserial_msgs9TopicInfoE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2901   .rodata._ZTVN3ros3MsgE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2913   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2925   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
     /tmp/ccr3Zb65.s:2949   .bss.uwManipulator:0000000000000000 uwManipulator
     /tmp/ccr3Zb65.s:2986   .data.pSinkSensorInitPort:0000000000000000 pSinkSensorInitPort
     /tmp/ccr3Zb65.s:2992   .data.pSinkValveInitPort:0000000000000000 pSinkValveInitPort
     /tmp/ccr3Zb65.s:2980   .data.pSinkPumpInitPort:0000000000000000 pSinkPumpInitPort
     /tmp/ccr3Zb65.s:3004   .data.pSourceSensorInitPort:0000000000000000 pSourceSensorInitPort
     /tmp/ccr3Zb65.s:3010   .data.pSourceValveInitPort:0000000000000000 pSourceValveInitPort
     /tmp/ccr3Zb65.s:2998   .data.pSourcePumpInitPort:0000000000000000 pSourcePumpInitPort
     /tmp/ccr3Zb65.s:2974   .data.gripperInitPort:0000000000000000 gripperInitPort
     /tmp/ccr3Zb65.s:2956   .data.actuatorInitPorts:0000000000000000 actuatorInitPorts
     /tmp/ccr3Zb65.s:2945   .bss.uwManipulator:0000000000000000 $d
     /tmp/ccr3Zb65.s:2952   .data.actuatorInitPorts:0000000000000000 $d
     /tmp/ccr3Zb65.s:2970   .data.gripperInitPort:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
_ZN26HydroUnderwaterManipulatorC1Ev
realloc
globalSensorTaskPeriod
LED_Driver_Setup
ADS1115_Setup
canConfig
_ZN26HydroUnderwaterManipulator18setupActuatorPortsERA3_A4_A2_h
ARM GAS  /tmp/ccr3Zb65.s 			page 90


_ZN26HydroUnderwaterManipulator17setupGripperPortsERA2_h
_ZN26HydroUnderwaterManipulator17setupPsourcePortsEhhh
_ZN26HydroUnderwaterManipulator15setupPsinkPortsEhhh
__aeabi_unwind_cpp_pr0
HAL_GetTick
_ZN3ros16normalizeSecNSecERmS0_
_ZN15PRESSURE_SOURCE12readPressureEv
_ZN26HydroUnderwaterManipulator7controlEv
_ZN26HydroUnderwaterManipulator12encodeStatusEv
_ZN13RosserialNode7publishEPKN3ros3MsgE
rosserialNode
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
__cxa_pure_virtual
